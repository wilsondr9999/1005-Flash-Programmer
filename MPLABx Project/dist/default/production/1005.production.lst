

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun Dec 26 15:44:02 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F15254
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	intentry,global,class=CODE,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    33                           	dabs	1,0x320,16
    34                           	dabs	1,0x2A0,80
    35                           	dabs	1,0x220,80
    36                           	dabs	1,0x1A0,80
    37                           	dabs	1,0x20F0,0,_dataBuf
    38                           	dabs	1,0x7E,2
    39  0000                     
    40                           ; Version 2.35
    41                           ; Generated 01/06/2021 GMT
    42                           ; 
    43                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution. Publication is not required when
    57                           ;        this file is used in an embedded application.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC16F15254 Definitions
    73                           ; 
    74                           ; SFR Addresses
    75  0000                     	;# 
    76  0001                     	;# 
    77  0002                     	;# 
    78  0003                     	;# 
    79  0004                     	;# 
    80  0005                     	;# 
    81  0006                     	;# 
    82  0007                     	;# 
    83  0008                     	;# 
    84  0009                     	;# 
    85  000A                     	;# 
    86  000B                     	;# 
    87  000C                     	;# 
    88  000D                     	;# 
    89  000E                     	;# 
    90  0010                     	;# 
    91  0012                     	;# 
    92  0013                     	;# 
    93  0014                     	;# 
    94  0016                     	;# 
    95  0018                     	;# 
    96  0019                     	;# 
    97  001A                     	;# 
    98  009A                     	;# 
    99  009B                     	;# 
   100  009B                     	;# 
   101  009C                     	;# 
   102  009D                     	;# 
   103  009E                     	;# 
   104  009F                     	;# 
   105  010C                     	;# 
   106  010D                     	;# 
   107  010E                     	;# 
   108  010F                     	;# 
   109  0119                     	;# 
   110  011A                     	;# 
   111  011B                     	;# 
   112  011B                     	;# 
   113  011C                     	;# 
   114  011D                     	;# 
   115  011E                     	;# 
   116  011F                     	;# 
   117  018C                     	;# 
   118  018D                     	;# 
   119  018E                     	;# 
   120  018F                     	;# 
   121  0190                     	;# 
   122  0191                     	;# 
   123  0192                     	;# 
   124  020C                     	;# 
   125  020D                     	;# 
   126  020E                     	;# 
   127  020E                     	;# 
   128  020F                     	;# 
   129  020F                     	;# 
   130  0210                     	;# 
   131  0210                     	;# 
   132  0211                     	;# 
   133  0211                     	;# 
   134  028C                     	;# 
   135  028C                     	;# 
   136  028D                     	;# 
   137  028D                     	;# 
   138  028E                     	;# 
   139  028F                     	;# 
   140  0290                     	;# 
   141  0291                     	;# 
   142  030C                     	;# 
   143  030C                     	;# 
   144  030D                     	;# 
   145  030E                     	;# 
   146  030F                     	;# 
   147  0310                     	;# 
   148  0310                     	;# 
   149  0311                     	;# 
   150  0312                     	;# 
   151  0313                     	;# 
   152  0314                     	;# 
   153  0314                     	;# 
   154  0315                     	;# 
   155  0316                     	;# 
   156  0318                     	;# 
   157  0318                     	;# 
   158  0319                     	;# 
   159  031A                     	;# 
   160  059C                     	;# 
   161  059C                     	;# 
   162  059D                     	;# 
   163  059D                     	;# 
   164  059E                     	;# 
   165  059F                     	;# 
   166  070C                     	;# 
   167  070D                     	;# 
   168  070E                     	;# 
   169  0716                     	;# 
   170  0717                     	;# 
   171  0718                     	;# 
   172  080C                     	;# 
   173  0811                     	;# 
   174  0813                     	;# 
   175  0814                     	;# 
   176  081A                     	;# 
   177  081A                     	;# 
   178  081B                     	;# 
   179  081C                     	;# 
   180  081C                     	;# 
   181  081D                     	;# 
   182  081E                     	;# 
   183  081F                     	;# 
   184  088E                     	;# 
   185  0890                     	;# 
   186  0891                     	;# 
   187  0892                     	;# 
   188  0893                     	;# 
   189  090C                     	;# 
   190  1E8F                     	;# 
   191  1E90                     	;# 
   192  1E91                     	;# 
   193  1E92                     	;# 
   194  1E93                     	;# 
   195  1E9C                     	;# 
   196  1EA1                     	;# 
   197  1EA2                     	;# 
   198  1EC3                     	;# 
   199  1EC5                     	;# 
   200  1EC6                     	;# 
   201  1EC7                     	;# 
   202  1ECB                     	;# 
   203  1ECB                     	;# 
   204  1ECB                     	;# 
   205  1ECC                     	;# 
   206  1ECC                     	;# 
   207  1ECC                     	;# 
   208  1F10                     	;# 
   209  1F11                     	;# 
   210  1F12                     	;# 
   211  1F13                     	;# 
   212  1F14                     	;# 
   213  1F15                     	;# 
   214  1F16                     	;# 
   215  1F17                     	;# 
   216  1F18                     	;# 
   217  1F19                     	;# 
   218  1F1A                     	;# 
   219  1F1B                     	;# 
   220  1F1C                     	;# 
   221  1F1D                     	;# 
   222  1F1E                     	;# 
   223  1F1F                     	;# 
   224  1F20                     	;# 
   225  1F21                     	;# 
   226  1F22                     	;# 
   227  1F23                     	;# 
   228  1F24                     	;# 
   229  1F25                     	;# 
   230  1F26                     	;# 
   231  1F27                     	;# 
   232  1F38                     	;# 
   233  1F39                     	;# 
   234  1F3A                     	;# 
   235  1F3B                     	;# 
   236  1F3C                     	;# 
   237  1F3D                     	;# 
   238  1F3E                     	;# 
   239  1F3F                     	;# 
   240  1F43                     	;# 
   241  1F44                     	;# 
   242  1F45                     	;# 
   243  1F46                     	;# 
   244  1F47                     	;# 
   245  1F48                     	;# 
   246  1F49                     	;# 
   247  1F4A                     	;# 
   248  1F4E                     	;# 
   249  1F4F                     	;# 
   250  1F50                     	;# 
   251  1F51                     	;# 
   252  1F52                     	;# 
   253  1F53                     	;# 
   254  1F54                     	;# 
   255  1F55                     	;# 
   256  1F65                     	;# 
   257  1F68                     	;# 
   258  1F69                     	;# 
   259  1F6A                     	;# 
   260  1F6B                     	;# 
   261  1FE4                     	;# 
   262  1FE5                     	;# 
   263  1FE6                     	;# 
   264  1FE7                     	;# 
   265  1FE8                     	;# 
   266  1FE8                     	;# 
   267  1FE9                     	;# 
   268  1FEA                     	;# 
   269  1FEB                     	;# 
   270  1FED                     	;# 
   271  1FEE                     	;# 
   272  1FEF                     	;# 
   273  0000                     	;# 
   274  0001                     	;# 
   275  0002                     	;# 
   276  0003                     	;# 
   277  0004                     	;# 
   278  0005                     	;# 
   279  0006                     	;# 
   280  0007                     	;# 
   281  0008                     	;# 
   282  0009                     	;# 
   283  000A                     	;# 
   284  000B                     	;# 
   285  000C                     	;# 
   286  000D                     	;# 
   287  000E                     	;# 
   288  0010                     	;# 
   289  0012                     	;# 
   290  0013                     	;# 
   291  0014                     	;# 
   292  0016                     	;# 
   293  0018                     	;# 
   294  0019                     	;# 
   295  001A                     	;# 
   296  009A                     	;# 
   297  009B                     	;# 
   298  009B                     	;# 
   299  009C                     	;# 
   300  009D                     	;# 
   301  009E                     	;# 
   302  009F                     	;# 
   303  010C                     	;# 
   304  010D                     	;# 
   305  010E                     	;# 
   306  010F                     	;# 
   307  0119                     	;# 
   308  011A                     	;# 
   309  011B                     	;# 
   310  011B                     	;# 
   311  011C                     	;# 
   312  011D                     	;# 
   313  011E                     	;# 
   314  011F                     	;# 
   315  018C                     	;# 
   316  018D                     	;# 
   317  018E                     	;# 
   318  018F                     	;# 
   319  0190                     	;# 
   320  0191                     	;# 
   321  0192                     	;# 
   322  020C                     	;# 
   323  020D                     	;# 
   324  020E                     	;# 
   325  020E                     	;# 
   326  020F                     	;# 
   327  020F                     	;# 
   328  0210                     	;# 
   329  0210                     	;# 
   330  0211                     	;# 
   331  0211                     	;# 
   332  028C                     	;# 
   333  028C                     	;# 
   334  028D                     	;# 
   335  028D                     	;# 
   336  028E                     	;# 
   337  028F                     	;# 
   338  0290                     	;# 
   339  0291                     	;# 
   340  030C                     	;# 
   341  030C                     	;# 
   342  030D                     	;# 
   343  030E                     	;# 
   344  030F                     	;# 
   345  0310                     	;# 
   346  0310                     	;# 
   347  0311                     	;# 
   348  0312                     	;# 
   349  0313                     	;# 
   350  0314                     	;# 
   351  0314                     	;# 
   352  0315                     	;# 
   353  0316                     	;# 
   354  0318                     	;# 
   355  0318                     	;# 
   356  0319                     	;# 
   357  031A                     	;# 
   358  059C                     	;# 
   359  059C                     	;# 
   360  059D                     	;# 
   361  059D                     	;# 
   362  059E                     	;# 
   363  059F                     	;# 
   364  070C                     	;# 
   365  070D                     	;# 
   366  070E                     	;# 
   367  0716                     	;# 
   368  0717                     	;# 
   369  0718                     	;# 
   370  080C                     	;# 
   371  0811                     	;# 
   372  0813                     	;# 
   373  0814                     	;# 
   374  081A                     	;# 
   375  081A                     	;# 
   376  081B                     	;# 
   377  081C                     	;# 
   378  081C                     	;# 
   379  081D                     	;# 
   380  081E                     	;# 
   381  081F                     	;# 
   382  088E                     	;# 
   383  0890                     	;# 
   384  0891                     	;# 
   385  0892                     	;# 
   386  0893                     	;# 
   387  090C                     	;# 
   388  1E8F                     	;# 
   389  1E90                     	;# 
   390  1E91                     	;# 
   391  1E92                     	;# 
   392  1E93                     	;# 
   393  1E9C                     	;# 
   394  1EA1                     	;# 
   395  1EA2                     	;# 
   396  1EC3                     	;# 
   397  1EC5                     	;# 
   398  1EC6                     	;# 
   399  1EC7                     	;# 
   400  1ECB                     	;# 
   401  1ECB                     	;# 
   402  1ECB                     	;# 
   403  1ECC                     	;# 
   404  1ECC                     	;# 
   405  1ECC                     	;# 
   406  1F10                     	;# 
   407  1F11                     	;# 
   408  1F12                     	;# 
   409  1F13                     	;# 
   410  1F14                     	;# 
   411  1F15                     	;# 
   412  1F16                     	;# 
   413  1F17                     	;# 
   414  1F18                     	;# 
   415  1F19                     	;# 
   416  1F1A                     	;# 
   417  1F1B                     	;# 
   418  1F1C                     	;# 
   419  1F1D                     	;# 
   420  1F1E                     	;# 
   421  1F1F                     	;# 
   422  1F20                     	;# 
   423  1F21                     	;# 
   424  1F22                     	;# 
   425  1F23                     	;# 
   426  1F24                     	;# 
   427  1F25                     	;# 
   428  1F26                     	;# 
   429  1F27                     	;# 
   430  1F38                     	;# 
   431  1F39                     	;# 
   432  1F3A                     	;# 
   433  1F3B                     	;# 
   434  1F3C                     	;# 
   435  1F3D                     	;# 
   436  1F3E                     	;# 
   437  1F3F                     	;# 
   438  1F43                     	;# 
   439  1F44                     	;# 
   440  1F45                     	;# 
   441  1F46                     	;# 
   442  1F47                     	;# 
   443  1F48                     	;# 
   444  1F49                     	;# 
   445  1F4A                     	;# 
   446  1F4E                     	;# 
   447  1F4F                     	;# 
   448  1F50                     	;# 
   449  1F51                     	;# 
   450  1F52                     	;# 
   451  1F53                     	;# 
   452  1F54                     	;# 
   453  1F55                     	;# 
   454  1F65                     	;# 
   455  1F68                     	;# 
   456  1F69                     	;# 
   457  1F6A                     	;# 
   458  1F6B                     	;# 
   459  1FE4                     	;# 
   460  1FE5                     	;# 
   461  1FE6                     	;# 
   462  1FE7                     	;# 
   463  1FE8                     	;# 
   464  1FE8                     	;# 
   465  1FE9                     	;# 
   466  1FEA                     	;# 
   467  1FEB                     	;# 
   468  1FED                     	;# 
   469  1FEE                     	;# 
   470  1FEF                     	;# 
   471  0000                     	;# 
   472  0001                     	;# 
   473  0002                     	;# 
   474  0003                     	;# 
   475  0004                     	;# 
   476  0005                     	;# 
   477  0006                     	;# 
   478  0007                     	;# 
   479  0008                     	;# 
   480  0009                     	;# 
   481  000A                     	;# 
   482  000B                     	;# 
   483  000C                     	;# 
   484  000D                     	;# 
   485  000E                     	;# 
   486  0010                     	;# 
   487  0012                     	;# 
   488  0013                     	;# 
   489  0014                     	;# 
   490  0016                     	;# 
   491  0018                     	;# 
   492  0019                     	;# 
   493  001A                     	;# 
   494  009A                     	;# 
   495  009B                     	;# 
   496  009B                     	;# 
   497  009C                     	;# 
   498  009D                     	;# 
   499  009E                     	;# 
   500  009F                     	;# 
   501  010C                     	;# 
   502  010D                     	;# 
   503  010E                     	;# 
   504  010F                     	;# 
   505  0119                     	;# 
   506  011A                     	;# 
   507  011B                     	;# 
   508  011B                     	;# 
   509  011C                     	;# 
   510  011D                     	;# 
   511  011E                     	;# 
   512  011F                     	;# 
   513  018C                     	;# 
   514  018D                     	;# 
   515  018E                     	;# 
   516  018F                     	;# 
   517  0190                     	;# 
   518  0191                     	;# 
   519  0192                     	;# 
   520  020C                     	;# 
   521  020D                     	;# 
   522  020E                     	;# 
   523  020E                     	;# 
   524  020F                     	;# 
   525  020F                     	;# 
   526  0210                     	;# 
   527  0210                     	;# 
   528  0211                     	;# 
   529  0211                     	;# 
   530  028C                     	;# 
   531  028C                     	;# 
   532  028D                     	;# 
   533  028D                     	;# 
   534  028E                     	;# 
   535  028F                     	;# 
   536  0290                     	;# 
   537  0291                     	;# 
   538  030C                     	;# 
   539  030C                     	;# 
   540  030D                     	;# 
   541  030E                     	;# 
   542  030F                     	;# 
   543  0310                     	;# 
   544  0310                     	;# 
   545  0311                     	;# 
   546  0312                     	;# 
   547  0313                     	;# 
   548  0314                     	;# 
   549  0314                     	;# 
   550  0315                     	;# 
   551  0316                     	;# 
   552  0318                     	;# 
   553  0318                     	;# 
   554  0319                     	;# 
   555  031A                     	;# 
   556  059C                     	;# 
   557  059C                     	;# 
   558  059D                     	;# 
   559  059D                     	;# 
   560  059E                     	;# 
   561  059F                     	;# 
   562  070C                     	;# 
   563  070D                     	;# 
   564  070E                     	;# 
   565  0716                     	;# 
   566  0717                     	;# 
   567  0718                     	;# 
   568  080C                     	;# 
   569  0811                     	;# 
   570  0813                     	;# 
   571  0814                     	;# 
   572  081A                     	;# 
   573  081A                     	;# 
   574  081B                     	;# 
   575  081C                     	;# 
   576  081C                     	;# 
   577  081D                     	;# 
   578  081E                     	;# 
   579  081F                     	;# 
   580  088E                     	;# 
   581  0890                     	;# 
   582  0891                     	;# 
   583  0892                     	;# 
   584  0893                     	;# 
   585  090C                     	;# 
   586  1E8F                     	;# 
   587  1E90                     	;# 
   588  1E91                     	;# 
   589  1E92                     	;# 
   590  1E93                     	;# 
   591  1E9C                     	;# 
   592  1EA1                     	;# 
   593  1EA2                     	;# 
   594  1EC3                     	;# 
   595  1EC5                     	;# 
   596  1EC6                     	;# 
   597  1EC7                     	;# 
   598  1ECB                     	;# 
   599  1ECB                     	;# 
   600  1ECB                     	;# 
   601  1ECC                     	;# 
   602  1ECC                     	;# 
   603  1ECC                     	;# 
   604  1F10                     	;# 
   605  1F11                     	;# 
   606  1F12                     	;# 
   607  1F13                     	;# 
   608  1F14                     	;# 
   609  1F15                     	;# 
   610  1F16                     	;# 
   611  1F17                     	;# 
   612  1F18                     	;# 
   613  1F19                     	;# 
   614  1F1A                     	;# 
   615  1F1B                     	;# 
   616  1F1C                     	;# 
   617  1F1D                     	;# 
   618  1F1E                     	;# 
   619  1F1F                     	;# 
   620  1F20                     	;# 
   621  1F21                     	;# 
   622  1F22                     	;# 
   623  1F23                     	;# 
   624  1F24                     	;# 
   625  1F25                     	;# 
   626  1F26                     	;# 
   627  1F27                     	;# 
   628  1F38                     	;# 
   629  1F39                     	;# 
   630  1F3A                     	;# 
   631  1F3B                     	;# 
   632  1F3C                     	;# 
   633  1F3D                     	;# 
   634  1F3E                     	;# 
   635  1F3F                     	;# 
   636  1F43                     	;# 
   637  1F44                     	;# 
   638  1F45                     	;# 
   639  1F46                     	;# 
   640  1F47                     	;# 
   641  1F48                     	;# 
   642  1F49                     	;# 
   643  1F4A                     	;# 
   644  1F4E                     	;# 
   645  1F4F                     	;# 
   646  1F50                     	;# 
   647  1F51                     	;# 
   648  1F52                     	;# 
   649  1F53                     	;# 
   650  1F54                     	;# 
   651  1F55                     	;# 
   652  1F65                     	;# 
   653  1F68                     	;# 
   654  1F69                     	;# 
   655  1F6A                     	;# 
   656  1F6B                     	;# 
   657  1FE4                     	;# 
   658  1FE5                     	;# 
   659  1FE6                     	;# 
   660  1FE7                     	;# 
   661  1FE8                     	;# 
   662  1FE8                     	;# 
   663  1FE9                     	;# 
   664  1FEA                     	;# 
   665  1FEB                     	;# 
   666  1FED                     	;# 
   667  1FEE                     	;# 
   668  1FEF                     	;_dataBuf
   669                           
   670                           	psect	idataBANK1
   671  07B0                     __pidataBANK1:
   672                           
   673                           ;initializer for _ATR
   674  07B0  343B               	retlw	59
   675  07B1  3438               	retlw	56
   676  07B2  3445               	retlw	69
   677  07B3  3400               	retlw	0
   678  07B4  3446               	retlw	70
   679  07B5  346C               	retlw	108
   680  07B6  3473               	retlw	115
   681  07B7  3468               	retlw	104
   682  07B8  3450               	retlw	80
   683  07B9  3472               	retlw	114
   684  07BA  3467               	retlw	103
   685  07BB  3412               	retlw	18
   686  000C                     _PORTA	set	12
   687  000D                     _PORTB	set	13
   688  0014                     _TRISCbits	set	20
   689  000B                     _INTCONbits	set	11
   690  001A                     _LATCbits	set	26
   691  0014                     _TRISC	set	20
   692  0013                     _TRISB	set	19
   693  0012                     _TRISA	set	18
   694  011B                     _SP1BRG	set	283
   695  0119                     _RC1REG	set	281
   696  011A                     _TX1REG	set	282
   697  011D                     _RC1STAbits	set	285
   698  011F                     _BAUD1CONbits	set	287
   699  011E                     _TX1STAbits	set	286
   700  070D                     _PIR1bits	set	1805
   701  0717                     _PIE1bits	set	1815
   702  0890                     _OSCSTATbits	set	2192
   703  0893                     _OSCFRQ	set	2195
   704  0891                     _OSCENbits	set	2193
   705  1ECB                     _RX1PPSbits	set	7883
   706  1F26                     _RC6PPSbits	set	7974
   707  1F50                     _ODCONC	set	8016
   708  1F45                     _ODCONB	set	8005
   709  1F3A                     _ODCONA	set	7994
   710  1F51                     _SLRCONC	set	8017
   711  1F46                     _SLRCONB	set	8006
   712  1F3B                     _SLRCONA	set	7995
   713  1F52                     _INLVLC	set	8018
   714  1F47                     _INLVLB	set	8007
   715  1F3C                     _INLVLA	set	7996
   716  1F4F                     _WPUC	set	8015
   717  1F44                     _WPUB	set	8004
   718  1F39                     _WPUA	set	7993
   719  1F4E                     _ANSELC	set	8014
   720  1F43                     _ANSELB	set	8003
   721  1F38                     _ANSELA	set	7992
   722                           
   723                           	psect	cinit
   724  002C                     start_initialization:	
   725                           ; #config settings
   726                           
   727  002C                     __initialization:	;BIGRAM
   728                           
   729                           ; Initialize objects allocated to BANK1
   730  002C  30B0               	movlw	low __pidataBANK1
   731  002D  0084               	movwf	4
   732  002E  3087               	movlw	(high __pidataBANK1)| (0+128)
   733  002F  0085               	movwf	5
   734  0030  30A0               	movlw	low __pdataBANK1
   735  0031  0086               	movwf	6
   736  0032  3000               	movlw	high __pdataBANK1
   737  0033  0087               	movwf	7
   738  0034  3000               	movlw	0
   739  0035  00FF               	movwf	btemp+1
   740  0036  300C               	movlw	12
   741  0037  3187  27BC  3180   	fcall	init_ram
   742                           
   743                           ; Clear objects allocated to BIGRAM
   744  003A  30F0               	movlw	low (0+8432)
   745  003B  0084               	movwf	4
   746  003C  3020               	movlw	high (0+8432)
   747  003D  0085               	movwf	5
   748  003E  3000               	movlw	0
   749  003F  00FE               	movwf	btemp
   750  0040  3001               	movlw	1
   751  0041  00FF               	movwf	btemp+1
   752  0042  3187  27C8  3180   	fcall	clear_ram0
   753                           
   754                           ; Clear objects allocated to COMMON
   755  0045  01F6               	clrf	__pbssCOMMON& (0+127)
   756  0046  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   757  0047  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   758  0048  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   759  0049  01FA               	clrf	(__pbssCOMMON+4)& (0+127)
   760                           
   761                           ; Clear objects allocated to BANK0
   762  004A  3058               	movlw	low __pbssBANK0
   763  004B  0084               	movwf	4
   764  004C  3000               	movlw	high __pbssBANK0
   765  004D  0085               	movwf	5
   766  004E  3014               	movlw	20
   767  004F  00FE               	movwf	btemp
   768  0050  3000               	movlw	0
   769  0051  00FF               	movwf	btemp+1
   770  0052  3187  27C8  3180   	fcall	clear_ram0
   771  0055                     end_of_initialization:	
   772                           ;End of C runtime variable initialization code
   773                           
   774  0055                     __end_of__initialization:
   775  0055  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   776  0056  0140               	movlb	0
   777  0057  3180  2859         	ljmp	_main	;jump to C main() function
   778                           
   779                           	psect	bssCOMMON
   780  0076                     __pbssCOMMON:
   781  0076                     _bufLength:
   782  0076                     	ds	2
   783  0078                     _bufPtr:
   784  0078                     	ds	2
   785  007A                     _successful:
   786  007A                     	ds	1
   787                           
   788                           	psect	bssBANK0
   789  0058                     __pbssBANK0:
   790  0058                     _addr:
   791  0058                     	ds	4
   792  005C                     _buf:
   793  005C                     	ds	2
   794  005E                     _numBytes:
   795  005E                     	ds	2
   796  0060                     _portInUse:
   797  0060                     	ds	1
   798  0061                     _returnBytes:
   799  0061                     	ds	1
   800  0062                     _cmd:
   801  0062                     	ds	1
   802  0063                     _cmdBuf:
   803  0063                     	ds	5
   804  0068                     _numRetBytes:
   805  0068                     	ds	2
   806  006A                     _ackBuf:
   807  006A                     	ds	2
   808                           
   809                           	psect	dataBANK1
   810  00A0                     __pdataBANK1:
   811  00A0                     _ATR:
   812  00A0                     	ds	12
   813                           
   814                           	psect	inittext
   815  07BC                     init_ram:
   816  07BC  00FE               	movwf	btemp
   817  07BD                     initloop:
   818  07BD  0012               	moviw fsr0++
   819  07BE  001E               	movwi fsr1++
   820  07BF  3001               	movlw	1
   821  07C0  02FE               	subwf	btemp,f
   822  07C1  3000               	movlw	0
   823  07C2  3BFF               	subwfb	btemp+1,f
   824  07C3  087F               	movf	btemp+1,w
   825  07C4  047E               	iorwf	btemp,w
   826  07C5  1D03               	skipz
   827  07C6  2FBD               	goto	initloop
   828  07C7  3400               	retlw	0
   829                           
   830                           	psect	clrtext
   831  07C8                     clear_ram0:	
   832                           ;	Called with FSR0 containing the base address, and
   833                           ;	btemp/btemp+1 has the size to clear
   834                           
   835  07C8  0064               	clrwdt	;clear the watchdog before getting into this loop
   836  07C9                     clrloop0:
   837  07C9  0180               	clrf	0	;clear RAM location pointed to by FSR
   838  07CA  3101               	addfsr 0,1
   839  07CB  3001               	movlw	1
   840  07CC  02FE               	subwf	btemp,f
   841  07CD  3000               	movlw	0
   842  07CE  3BFF               	subwfb	btemp+1,f
   843  07CF  087F               	movf	btemp+1,w
   844  07D0  047E               	iorwf	btemp,w
   845  07D1  1D03               	skipz
   846  07D2  2FC9               	goto	clrloop0	;have we reached the end yet?
   847  07D3  3400               	retlw	0	;all done for this memory range, return
   848                           
   849                           	psect	cstackCOMMON
   850  0070                     __pcstackCOMMON:
   851  0070                     ?_clearAddressRegisters:
   852  0070                     ?_SerialPortSetup:	
   853                           ; 1 bytes @ 0x0
   854                           
   855  0070                     ?_eraseFlash:	
   856                           ; 1 bytes @ 0x0
   857                           
   858  0070                     ?_SerialPortTransmitInterruptService:	
   859                           ; 1 bytes @ 0x0
   860                           
   861  0070                     ??_SerialPortTransmitInterruptService:	
   862                           ; 1 bytes @ 0x0
   863                           
   864  0070                     ?_SerialPortReceiveInterruptService:	
   865                           ; 1 bytes @ 0x0
   866                           
   867  0070                     ??_SerialPortReceiveInterruptService:	
   868                           ; 1 bytes @ 0x0
   869                           
   870  0070                     ?_softwareIdEntry:	
   871                           ; 1 bytes @ 0x0
   872                           
   873  0070                     ?_softwareIdExit:	
   874                           ; 1 bytes @ 0x0
   875                           
   876  0070                     ?_sendOneByte:	
   877                           ; 1 bytes @ 0x0
   878                           
   879  0070                     ?_main:	
   880                           ; 1 bytes @ 0x0
   881                           
   882  0070                     ?_InterruptServiceRoutine:	
   883                           ; 1 bytes @ 0x0
   884                           
   885                           
   886                           ; 1 bytes @ 0x0
   887  0070                     	ds	2
   888  0072                     SerialPortReceiveInterruptService@tempData:
   889                           
   890                           ; 1 bytes @ 0x2
   891  0072                     	ds	1
   892  0073                     ??_InterruptServiceRoutine:
   893                           
   894                           ; 1 bytes @ 0x3
   895  0073                     	ds	3
   896                           
   897                           	psect	cstackBANK0
   898  0020                     __pcstackBANK0:
   899  0020                     ??_SerialPortSetup:
   900  0020                     ?_SerialPortSendData:	
   901                           ; 1 bytes @ 0x0
   902                           
   903  0020                     ?_SerialPortReceiveData:	
   904                           ; 1 bytes @ 0x0
   905                           
   906  0020                     ?_setAddressRegisters:	
   907                           ; 1 bytes @ 0x0
   908                           
   909  0020                     ??_sendOneByte:	
   910                           ; 1 bytes @ 0x0
   911                           
   912  0020                     sendOneByte@data:	
   913                           ; 1 bytes @ 0x0
   914                           
   915  0020                     SerialPortSendData@dataToSend:	
   916                           ; 1 bytes @ 0x0
   917                           
   918  0020                     SerialPortReceiveData@dataReceived:	
   919                           ; 2 bytes @ 0x0
   920                           
   921  0020                     setAddressRegisters@addr:	
   922                           ; 2 bytes @ 0x0
   923                           
   924                           
   925                           ; 4 bytes @ 0x0
   926  0020                     	ds	2
   927  0022                     SerialPortSendData@length:
   928  0022                     SerialPortReceiveData@length:	
   929                           ; 2 bytes @ 0x2
   930                           
   931                           
   932                           ; 2 bytes @ 0x2
   933  0022                     	ds	2
   934  0024                     ??_SerialPortSendData:
   935  0024                     ??_SerialPortReceiveData:	
   936                           ; 1 bytes @ 0x4
   937                           
   938  0024                     setAddressRegisters@OE:	
   939                           ; 1 bytes @ 0x4
   940                           
   941                           
   942                           ; 1 bytes @ 0x4
   943  0024                     	ds	1
   944  0025                     setAddressRegisters@CE:
   945                           
   946                           ; 1 bytes @ 0x5
   947  0025                     	ds	1
   948  0026                     ??_setAddressRegisters:
   949                           
   950                           ; 1 bytes @ 0x6
   951  0026                     	ds	4
   952  002A                     setAddressRegisters@mask:
   953                           
   954                           ; 4 bytes @ 0xA
   955  002A                     	ds	4
   956  002E                     setAddressRegisters@i:
   957                           
   958                           ; 1 bytes @ 0xE
   959  002E                     	ds	1
   960  002F                     ??_clearAddressRegisters:
   961  002F                     ?_readFlash:	
   962                           ; 1 bytes @ 0xF
   963                           
   964  002F                     ??_softwareIdEntry:	
   965                           ; 1 bytes @ 0xF
   966                           
   967  002F                     ??_softwareIdExit:	
   968                           ; 1 bytes @ 0xF
   969                           
   970  002F                     ?_waitPollData:	
   971                           ; 1 bytes @ 0xF
   972                           
   973  002F                     readFlash@addr:	
   974                           ; 1 bytes @ 0xF
   975                           
   976  002F                     waitPollData@addr:	
   977                           ; 4 bytes @ 0xF
   978                           
   979                           
   980                           ; 4 bytes @ 0xF
   981  002F                     	ds	4
   982  0033                     waitPollData@origData:
   983  0033                     readFlash@numBytes:	
   984                           ; 1 bytes @ 0x13
   985                           
   986                           
   987                           ; 2 bytes @ 0x13
   988  0033                     	ds	1
   989  0034                     ??_waitPollData:
   990                           
   991                           ; 1 bytes @ 0x14
   992  0034                     	ds	1
   993  0035                     readFlash@retBytes:
   994                           
   995                           ; 2 bytes @ 0x15
   996  0035                     	ds	1
   997  0036                     waitPollData@done:
   998                           
   999                           ; 1 bytes @ 0x16
  1000  0036                     	ds	1
  1001  0037                     readFlash@numRetBytes:
  1002  0037                     waitPollData@readData:	
  1003                           ; 1 bytes @ 0x17
  1004                           
  1005                           
  1006                           ; 1 bytes @ 0x17
  1007  0037                     	ds	1
  1008  0038                     ??_readFlash:
  1009  0038                     ?_eraseFlashSector:	
  1010                           ; 1 bytes @ 0x18
  1011                           
  1012  0038                     ??_eraseFlash:	
  1013                           ; 1 bytes @ 0x18
  1014                           
  1015  0038                     ?_writeOneByte:	
  1016                           ; 1 bytes @ 0x18
  1017                           
  1018  0038                     writeOneByte@addr:	
  1019                           ; 1 bytes @ 0x18
  1020                           
  1021  0038                     eraseFlashSector@addr:	
  1022                           ; 4 bytes @ 0x18
  1023                           
  1024                           
  1025                           ; 4 bytes @ 0x18
  1026  0038                     	ds	2
  1027  003A                     readFlash@bufPtr:
  1028                           
  1029                           ; 2 bytes @ 0x1A
  1030  003A                     	ds	2
  1031  003C                     ??_eraseFlashSector:
  1032  003C                     writeOneByte@data:	
  1033                           ; 1 bytes @ 0x1C
  1034                           
  1035  003C                     readFlash@length:	
  1036                           ; 1 bytes @ 0x1C
  1037                           
  1038                           
  1039                           ; 2 bytes @ 0x1C
  1040  003C                     	ds	1
  1041  003D                     ??_writeOneByte:
  1042                           
  1043                           ; 1 bytes @ 0x1D
  1044  003D                     	ds	1
  1045  003E                     ?_writeFlash:
  1046  003E                     ?_readFlashChipId:	
  1047                           ; 1 bytes @ 0x1E
  1048                           
  1049  003E                     readFlashChipId@retBytes:	
  1050                           ; 1 bytes @ 0x1E
  1051                           
  1052  003E                     writeFlash@addr:	
  1053                           ; 2 bytes @ 0x1E
  1054                           
  1055                           
  1056                           ; 4 bytes @ 0x1E
  1057  003E                     	ds	2
  1058  0040                     readFlashChipId@numRetBytes:
  1059                           
  1060                           ; 1 bytes @ 0x20
  1061  0040                     	ds	1
  1062  0041                     ??_readFlashChipId:
  1063                           
  1064                           ; 1 bytes @ 0x21
  1065  0041                     	ds	1
  1066  0042                     writeFlash@numBytes:
  1067                           
  1068                           ; 2 bytes @ 0x22
  1069  0042                     	ds	2
  1070  0044                     writeFlash@dataBytes:
  1071                           
  1072                           ; 2 bytes @ 0x24
  1073  0044                     	ds	2
  1074  0046                     ??_writeFlash:
  1075                           
  1076                           ; 1 bytes @ 0x26
  1077  0046                     	ds	1
  1078  0047                     writeFlash@length:
  1079                           
  1080                           ; 2 bytes @ 0x27
  1081  0047                     	ds	2
  1082  0049                     writeFlash@bufPtr:
  1083                           
  1084                           ; 2 bytes @ 0x29
  1085  0049                     	ds	2
  1086  004B                     ??_main:
  1087                           
  1088                           ; 1 bytes @ 0x2B
  1089  004B                     	ds	12
  1090  0057                     main@successful:
  1091                           
  1092                           ; 1 bytes @ 0x37
  1093  0057                     	ds	1
  1094                           
  1095                           	psect	maintext
  1096  0059                     __pmaintext:	
  1097 ;;
  1098 ;;Main: autosize = 0, tempsize = 12, incstack = 0, save=0
  1099 ;;
  1100 ;; *************** function _main *****************
  1101 ;; Defined at:
  1102 ;;		line 67 in file "source/main.c"
  1103 ;; Parameters:    Size  Location     Type
  1104 ;;		None
  1105 ;; Auto vars:     Size  Location     Type
  1106 ;;  successful      1   55[BANK0 ] unsigned char 
  1107 ;; Return value:  Size  Location     Type
  1108 ;;                  1    wreg      void 
  1109 ;; Registers used:
  1110 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1111 ;; Tracked objects:
  1112 ;;		On entry : B3F/0
  1113 ;;		On exit  : 0/0
  1114 ;;		Unchanged: 0/0
  1115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1116 ;;      Params:         0       0       0       0       0       0       0       0
  1117 ;;      Locals:         0       1       0       0       0       0       0       0
  1118 ;;      Temps:          0      12       0       0       0       0       0       0
  1119 ;;      Totals:         0      13       0       0       0       0       0       0
  1120 ;;Total ram usage:       13 bytes
  1121 ;; Hardware stack levels required when called: 6
  1122 ;; This function calls:
  1123 ;;		_SerialPortReceiveData
  1124 ;;		_SerialPortSendData
  1125 ;;		_SerialPortSetup
  1126 ;;		_clearAddressRegisters
  1127 ;;		_eraseFlash
  1128 ;;		_eraseFlashSector
  1129 ;;		_readFlash
  1130 ;;		_readFlashChipId
  1131 ;;		_writeFlash
  1132 ;; This function is called by:
  1133 ;;		Startup code after reset
  1134 ;; This function uses a non-reentrant model
  1135 ;;
  1136                           
  1137                           
  1138                           ;psect for function _main
  1139  0059                     _main:
  1140  0059                     l2814:	
  1141                           ;incstack = 0
  1142                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1143                           
  1144                           
  1145                           ;source/main.c: 69:     unsigned char successful;;source/main.c: 72:     OSCENbits.HFOEN
      +                          =1;
  1146  0059  0151               	movlb	17	; select bank17
  1147  005A  1711               	bsf	17,6	;volatile
  1148  005B                     l2816:
  1149                           
  1150                           ;source/main.c: 73:     OSCFRQ=5;
  1151  005B  3005               	movlw	5
  1152  005C  0093               	movwf	19	;volatile
  1153  005D                     l97:	
  1154                           ;source/main.c: 74:     while (!OSCSTATbits.HFOR);
  1155                           
  1156  005D  1F10               	btfss	16,6	;volatile
  1157  005E  2860               	goto	u2531
  1158  005F  2861               	goto	u2530
  1159  0060                     u2531:
  1160  0060  285D               	goto	l97
  1161  0061                     u2530:
  1162  0061                     l2818:
  1163                           
  1164                           ;source/main.c: 77:     ANSELA=0;
  1165  0061  017E               	movlb	62	; select bank62
  1166  0062  01B8               	clrf	56	;volatile
  1167                           
  1168                           ;source/main.c: 78:     ANSELB=0;
  1169  0063  01C3               	clrf	67	;volatile
  1170                           
  1171                           ;source/main.c: 79:     ANSELC=0;
  1172  0064  01CE               	clrf	78	;volatile
  1173                           
  1174                           ;source/main.c: 80:     WPUA=0;
  1175  0065  01B9               	clrf	57	;volatile
  1176                           
  1177                           ;source/main.c: 81:     WPUB=0;
  1178  0066  01C4               	clrf	68	;volatile
  1179                           
  1180                           ;source/main.c: 82:     WPUC=0;
  1181  0067  01CF               	clrf	79	;volatile
  1182                           
  1183                           ;source/main.c: 83:     INLVLA=0;
  1184  0068  01BC               	clrf	60	;volatile
  1185                           
  1186                           ;source/main.c: 84:     INLVLB=0;
  1187  0069  01C7               	clrf	71	;volatile
  1188                           
  1189                           ;source/main.c: 85:     INLVLC=0;
  1190  006A  01D2               	clrf	82	;volatile
  1191                           
  1192                           ;source/main.c: 86:     SLRCONA=0;
  1193  006B  01BB               	clrf	59	;volatile
  1194                           
  1195                           ;source/main.c: 87:     SLRCONB=0;
  1196  006C  01C6               	clrf	70	;volatile
  1197                           
  1198                           ;source/main.c: 88:     SLRCONC=0;
  1199  006D  01D1               	clrf	81	;volatile
  1200                           
  1201                           ;source/main.c: 89:     ODCONA=0;
  1202  006E  01BA               	clrf	58	;volatile
  1203                           
  1204                           ;source/main.c: 90:     ODCONB=0;
  1205  006F  01C5               	clrf	69	;volatile
  1206                           
  1207                           ;source/main.c: 91:     ODCONC=0;
  1208  0070  01D0               	clrf	80	;volatile
  1209                           
  1210                           ;source/main.c: 92:     TRISA=0;
  1211  0071  0140               	movlb	0	; select bank0
  1212  0072  0192               	clrf	18	;volatile
  1213                           
  1214                           ;source/main.c: 93:     TRISB=0;
  1215  0073  0193               	clrf	19	;volatile
  1216                           
  1217                           ;source/main.c: 94:     TRISC=0;
  1218  0074  0194               	clrf	20	;volatile
  1219  0075                     l2820:
  1220                           
  1221                           ;source/main.c: 97:     LATCbits.LATC0=1;
  1222  0075  141A               	bsf	26,0	;volatile
  1223  0076                     l2822:
  1224                           
  1225                           ;source/main.c: 98:     LATCbits.LATC1=0;
  1226  0076  109A               	bcf	26,1	;volatile
  1227  0077                     l2824:
  1228                           
  1229                           ;source/main.c: 99:     LATCbits.LATC2=0;
  1230  0077  111A               	bcf	26,2	;volatile
  1231  0078                     l2826:
  1232                           
  1233                           ;source/main.c: 100:     LATCbits.LATC3=1;
  1234  0078  159A               	bsf	26,3	;volatile
  1235  0079                     l2828:
  1236  0079  3187  279F  3180   	fcall	_clearAddressRegisters
  1237  007C                     l2830:
  1238                           
  1239                           ;source/main.c: 103:     TRISB=0xff;
  1240  007C  30FF               	movlw	255
  1241  007D  0140               	movlb	0	; select bank0
  1242  007E  0093               	movwf	19	;volatile
  1243  007F                     l2832:
  1244                           
  1245                           ;source/main.c: 108:     SerialPortSetup();
  1246  007F  3187  2760  3180   	fcall	_SerialPortSetup
  1247  0082                     l2834:
  1248                           
  1249                           ;source/main.c: 111:     INTCONbits.PEIE=1;
  1250  0082  170B               	bsf	11,6	;volatile
  1251  0083                     l2836:
  1252                           
  1253                           ;source/main.c: 112:     (INTCONbits.GIE = 1);
  1254  0083  178B               	bsf	11,7	;volatile
  1255  0084                     l2838:
  1256                           
  1257                           ;source/main.c: 115:     SerialPortSendData(ATR,12);
  1258  0084  30A0               	movlw	low _ATR
  1259  0085  0140               	movlb	0	; select bank0
  1260  0086  00A0               	movwf	SerialPortSendData@dataToSend
  1261  0087  3000               	movlw	high _ATR
  1262  0088  00A1               	movwf	SerialPortSendData@dataToSend+1
  1263  0089  300C               	movlw	12
  1264  008A  00A2               	movwf	SerialPortSendData@length
  1265  008B  3000               	movlw	0
  1266  008C  00A3               	movwf	SerialPortSendData@length+1
  1267  008D  3187  270F  3180   	fcall	_SerialPortSendData
  1268  0090                     l2840:
  1269                           
  1270                           ;source/main.c: 120:         cmd=0;
  1271  0090  0140               	movlb	0	; select bank0
  1272  0091  01E2               	clrf	_cmd
  1273  0092                     l2842:
  1274                           
  1275                           ;source/main.c: 121:         numBytes=0;
  1276  0092  01DE               	clrf	_numBytes
  1277  0093  01DF               	clrf	_numBytes+1
  1278  0094                     l2844:
  1279                           
  1280                           ;source/main.c: 122:         addr=0;
  1281  0094  3000               	movlw	0
  1282  0095  00DB               	movwf	_addr+3
  1283  0096  3000               	movlw	0
  1284  0097  00DA               	movwf	_addr+2
  1285  0098  3000               	movlw	0
  1286  0099  00D9               	movwf	_addr+1
  1287  009A  3000               	movlw	0
  1288  009B  00D8               	movwf	_addr
  1289  009C                     l2846:
  1290  009C                     l2848:
  1291                           
  1292                           ;source/main.c: 124:         numRetBytes=0;
  1293  009C  01E8               	clrf	_numRetBytes
  1294  009D  01E9               	clrf	_numRetBytes+1
  1295  009E                     l2850:
  1296                           
  1297                           ;source/main.c: 125:         returnBytes=0;
  1298  009E  01E1               	clrf	_returnBytes
  1299                           
  1300                           ;source/main.c: 128:         SerialPortReceiveData(cmdBuf,0x05);
  1301  009F  3063               	movlw	low _cmdBuf
  1302  00A0  00A0               	movwf	SerialPortReceiveData@dataReceived
  1303  00A1  3000               	movlw	high _cmdBuf
  1304  00A2  00A1               	movwf	SerialPortReceiveData@dataReceived+1
  1305  00A3  3005               	movlw	5
  1306  00A4  00A2               	movwf	SerialPortReceiveData@length
  1307  00A5  3000               	movlw	0
  1308  00A6  00A3               	movwf	SerialPortReceiveData@length+1
  1309  00A7  3187  273A  3180   	fcall	_SerialPortReceiveData
  1310                           
  1311                           ;source/main.c: 131:         switch (cmdBuf[0]) {
  1312  00AA  2A11               	goto	l2936
  1313  00AB                     l2852:
  1314                           
  1315                           ;source/main.c: 135:                 addr=((unsigned long)cmdBuf[1]<<16 | (unsigned long
      +                          )cmdBuf[2]<<8 | (unsigned long)cmdBuf[3]);
  1316  00AB  0866               	movf	_cmdBuf+3,w
  1317  00AC  00CB               	movwf	??_main
  1318  00AD  01CC               	clrf	??_main+1
  1319  00AE  01CD               	clrf	??_main+2
  1320  00AF  01CE               	clrf	??_main+3
  1321  00B0  0865               	movf	_cmdBuf+2,w
  1322  00B1  00CF               	movwf	??_main+4
  1323  00B2  01D0               	clrf	??_main+5
  1324  00B3  01D1               	clrf	??_main+6
  1325  00B4  01D2               	clrf	??_main+7
  1326  00B5  3008               	movlw	8
  1327  00B6                     u2545:
  1328  00B6  35CF               	lslf	??_main+4,f
  1329  00B7  0DD0               	rlf	??_main+5,f
  1330  00B8  0DD1               	rlf	??_main+6,f
  1331  00B9  0DD2               	rlf	??_main+7,f
  1332  00BA                     u2540:
  1333  00BA  0B89               	decfsz	9,f
  1334  00BB  28B6               	goto	u2545
  1335  00BC  0864               	movf	_cmdBuf+1,w
  1336  00BD  00D3               	movwf	??_main+8
  1337  00BE  01D4               	clrf	??_main+9
  1338  00BF  01D5               	clrf	??_main+10
  1339  00C0  01D6               	clrf	??_main+11
  1340  00C1  3010               	movlw	16
  1341  00C2                     u2555:
  1342  00C2  35D3               	lslf	??_main+8,f
  1343  00C3  0DD4               	rlf	??_main+9,f
  1344  00C4  0DD5               	rlf	??_main+10,f
  1345  00C5  0DD6               	rlf	??_main+11,f
  1346  00C6                     u2550:
  1347  00C6  0B89               	decfsz	9,f
  1348  00C7  28C2               	goto	u2555
  1349  00C8  0853               	movf	??_main+8,w
  1350  00C9  04CF               	iorwf	??_main+4,f
  1351  00CA  0854               	movf	??_main+9,w
  1352  00CB  04D0               	iorwf	??_main+5,f
  1353  00CC  0855               	movf	??_main+10,w
  1354  00CD  04D1               	iorwf	??_main+6,f
  1355  00CE  0856               	movf	??_main+11,w
  1356  00CF  04D2               	iorwf	??_main+7,f
  1357  00D0  084B               	movf	??_main,w
  1358  00D1  044F               	iorwf	??_main+4,w
  1359  00D2  00D8               	movwf	_addr
  1360  00D3  084C               	movf	??_main+1,w
  1361  00D4  0450               	iorwf	??_main+5,w
  1362  00D5  00D9               	movwf	_addr+1
  1363  00D6  084D               	movf	??_main+2,w
  1364  00D7  0451               	iorwf	??_main+6,w
  1365  00D8  00DA               	movwf	_addr+2
  1366  00D9  084E               	movf	??_main+3,w
  1367  00DA  0452               	iorwf	??_main+7,w
  1368  00DB  00DB               	movwf	_addr+3
  1369                           
  1370                           ;source/main.c: 137:                 numBytes=(cmdBuf[4]==0x00 ? 0x100 : cmdBuf[4]);
  1371  00DC  0867               	movf	_cmdBuf+4,w
  1372  00DD  1903               	btfsc	3,2
  1373  00DE  28E0               	goto	u2561
  1374  00DF  28E1               	goto	u2560
  1375  00E0                     u2561:
  1376  00E0  28E9               	goto	l2856
  1377  00E1                     u2560:
  1378  00E1                     l2854:
  1379  00E1  0867               	movf	_cmdBuf+4,w
  1380  00E2  00CB               	movwf	??_main
  1381  00E3  01CC               	clrf	??_main+1
  1382  00E4  084B               	movf	??_main,w
  1383  00E5  00DE               	movwf	_numBytes
  1384  00E6  084C               	movf	??_main+1,w
  1385  00E7  00DF               	movwf	_numBytes+1
  1386  00E8  28ED               	goto	l2858
  1387  00E9                     l2856:
  1388  00E9  3000               	movlw	0
  1389  00EA  00DE               	movwf	_numBytes
  1390  00EB  3001               	movlw	1
  1391  00EC  00DF               	movwf	_numBytes+1
  1392  00ED                     l2858:
  1393                           
  1394                           ;source/main.c: 140:                 successful=readFlash(addr,numBytes,dataBuf,&numRetB
      +                          ytes);
  1395  00ED  085B               	movf	_addr+3,w
  1396  00EE  00B2               	movwf	readFlash@addr+3
  1397  00EF  085A               	movf	_addr+2,w
  1398  00F0  00B1               	movwf	readFlash@addr+2
  1399  00F1  0859               	movf	_addr+1,w
  1400  00F2  00B0               	movwf	readFlash@addr+1
  1401  00F3  0858               	movf	_addr,w
  1402  00F4  00AF               	movwf	readFlash@addr
  1403  00F5  085F               	movf	_numBytes+1,w
  1404  00F6  00B4               	movwf	readFlash@numBytes+1
  1405  00F7  085E               	movf	_numBytes,w
  1406  00F8  00B3               	movwf	readFlash@numBytes
  1407  00F9  30F0               	movlw	240
  1408  00FA  00B5               	movwf	readFlash@retBytes
  1409  00FB  3020               	movlw	32
  1410  00FC  00B6               	movwf	readFlash@retBytes+1
  1411  00FD  3068               	movlw	(low (_numRetBytes| 0))& (0+255)
  1412  00FE  00CB               	movwf	??_main
  1413  00FF  084B               	movf	??_main,w
  1414  0100  00B7               	movwf	readFlash@numRetBytes
  1415  0101  3184  248C  3180   	fcall	_readFlash
  1416  0104  0140               	movlb	0	; select bank0
  1417  0105  00CC               	movwf	??_main+1
  1418  0106  084C               	movf	??_main+1,w
  1419  0107  00D7               	movwf	main@successful
  1420  0108                     l2860:
  1421                           
  1422                           ;source/main.c: 143:                 if (successful) {
  1423  0108  0857               	movf	main@successful,w
  1424  0109  1903               	btfsc	3,2
  1425  010A  290C               	goto	u2571
  1426  010B  290D               	goto	u2570
  1427  010C                     u2571:
  1428  010C  2918               	goto	l2866
  1429  010D                     u2570:
  1430  010D                     l2862:
  1431                           
  1432                           ;source/main.c: 144:                     ackBuf[0]=0x81;
  1433  010D  3081               	movlw	129
  1434  010E  00CB               	movwf	??_main
  1435  010F  084B               	movf	??_main,w
  1436  0110  00EA               	movwf	_ackBuf
  1437                           
  1438                           ;source/main.c: 145:                     ackBuf[1]=(unsigned char)numRetBytes;
  1439  0111  0868               	movf	_numRetBytes,w
  1440  0112  00CB               	movwf	??_main
  1441  0113  084B               	movf	??_main,w
  1442  0114  00EB               	movwf	_ackBuf+1
  1443  0115                     l2864:
  1444                           
  1445                           ;source/main.c: 146:                     returnBytes=1;
  1446  0115  01E1               	clrf	_returnBytes
  1447  0116  0AE1               	incf	_returnBytes,f
  1448                           
  1449                           ;source/main.c: 147:                 } else {
  1450  0117  2A2E               	goto	l2938
  1451  0118                     l2866:
  1452                           
  1453                           ;source/main.c: 148:                     ackBuf[0]=0xC0;
  1454  0118  30C0               	movlw	192
  1455  0119  00CB               	movwf	??_main
  1456  011A  084B               	movf	??_main,w
  1457  011B  00EA               	movwf	_ackBuf
  1458  011C                     l2868:
  1459                           
  1460                           ;source/main.c: 149:                     returnBytes=0;
  1461  011C  01E1               	clrf	_returnBytes
  1462  011D  2A2E               	goto	l2938
  1463  011E                     l2870:
  1464                           
  1465                           ;source/main.c: 155:                 addr=((unsigned long)cmdBuf[1]<<16 | (unsigned long
      +                          )cmdBuf[2]<<8 | (unsigned long)cmdBuf[3]);
  1466  011E  0866               	movf	_cmdBuf+3,w
  1467  011F  00CB               	movwf	??_main
  1468  0120  01CC               	clrf	??_main+1
  1469  0121  01CD               	clrf	??_main+2
  1470  0122  01CE               	clrf	??_main+3
  1471  0123  0865               	movf	_cmdBuf+2,w
  1472  0124  00CF               	movwf	??_main+4
  1473  0125  01D0               	clrf	??_main+5
  1474  0126  01D1               	clrf	??_main+6
  1475  0127  01D2               	clrf	??_main+7
  1476  0128  3008               	movlw	8
  1477  0129                     u2585:
  1478  0129  35CF               	lslf	??_main+4,f
  1479  012A  0DD0               	rlf	??_main+5,f
  1480  012B  0DD1               	rlf	??_main+6,f
  1481  012C  0DD2               	rlf	??_main+7,f
  1482  012D                     u2580:
  1483  012D  0B89               	decfsz	9,f
  1484  012E  2929               	goto	u2585
  1485  012F  0864               	movf	_cmdBuf+1,w
  1486  0130  00D3               	movwf	??_main+8
  1487  0131  01D4               	clrf	??_main+9
  1488  0132  01D5               	clrf	??_main+10
  1489  0133  01D6               	clrf	??_main+11
  1490  0134  3010               	movlw	16
  1491  0135                     u2595:
  1492  0135  35D3               	lslf	??_main+8,f
  1493  0136  0DD4               	rlf	??_main+9,f
  1494  0137  0DD5               	rlf	??_main+10,f
  1495  0138  0DD6               	rlf	??_main+11,f
  1496  0139                     u2590:
  1497  0139  0B89               	decfsz	9,f
  1498  013A  2935               	goto	u2595
  1499  013B  0853               	movf	??_main+8,w
  1500  013C  04CF               	iorwf	??_main+4,f
  1501  013D  0854               	movf	??_main+9,w
  1502  013E  04D0               	iorwf	??_main+5,f
  1503  013F  0855               	movf	??_main+10,w
  1504  0140  04D1               	iorwf	??_main+6,f
  1505  0141  0856               	movf	??_main+11,w
  1506  0142  04D2               	iorwf	??_main+7,f
  1507  0143  084B               	movf	??_main,w
  1508  0144  044F               	iorwf	??_main+4,w
  1509  0145  00D8               	movwf	_addr
  1510  0146  084C               	movf	??_main+1,w
  1511  0147  0450               	iorwf	??_main+5,w
  1512  0148  00D9               	movwf	_addr+1
  1513  0149  084D               	movf	??_main+2,w
  1514  014A  0451               	iorwf	??_main+6,w
  1515  014B  00DA               	movwf	_addr+2
  1516  014C  084E               	movf	??_main+3,w
  1517  014D  0452               	iorwf	??_main+7,w
  1518  014E  00DB               	movwf	_addr+3
  1519                           
  1520                           ;source/main.c: 157:                 numBytes=(cmdBuf[4]==0x00 ? 0x100 : cmdBuf[4]);
  1521  014F  0867               	movf	_cmdBuf+4,w
  1522  0150  1903               	btfsc	3,2
  1523  0151  2953               	goto	u2601
  1524  0152  2954               	goto	u2600
  1525  0153                     u2601:
  1526  0153  295C               	goto	l2874
  1527  0154                     u2600:
  1528  0154                     l2872:
  1529  0154  0867               	movf	_cmdBuf+4,w
  1530  0155  00CB               	movwf	??_main
  1531  0156  01CC               	clrf	??_main+1
  1532  0157  084B               	movf	??_main,w
  1533  0158  00DE               	movwf	_numBytes
  1534  0159  084C               	movf	??_main+1,w
  1535  015A  00DF               	movwf	_numBytes+1
  1536  015B  2960               	goto	l114
  1537  015C                     l2874:
  1538  015C  3000               	movlw	0
  1539  015D  00DE               	movwf	_numBytes
  1540  015E  3001               	movlw	1
  1541  015F  00DF               	movwf	_numBytes+1
  1542  0160                     l114:
  1543                           
  1544                           ;source/main.c: 160:                 ackBuf[0]=0x91;
  1545  0160  3091               	movlw	145
  1546  0161  00CB               	movwf	??_main
  1547  0162  084B               	movf	??_main,w
  1548  0163  00EA               	movwf	_ackBuf
  1549                           
  1550                           ;source/main.c: 161:                 ackBuf[1]=(unsigned char)numBytes;
  1551  0164  085E               	movf	_numBytes,w
  1552  0165  00CB               	movwf	??_main
  1553  0166  084B               	movf	??_main,w
  1554  0167  00EB               	movwf	_ackBuf+1
  1555  0168                     l2876:
  1556                           
  1557                           ;source/main.c: 162:                 SerialPortSendData(ackBuf,2);
  1558  0168  306A               	movlw	low _ackBuf
  1559  0169  00A0               	movwf	SerialPortSendData@dataToSend
  1560  016A  3000               	movlw	high _ackBuf
  1561  016B  00A1               	movwf	SerialPortSendData@dataToSend+1
  1562  016C  3002               	movlw	2
  1563  016D  00A2               	movwf	SerialPortSendData@length
  1564  016E  3000               	movlw	0
  1565  016F  00A3               	movwf	SerialPortSendData@length+1
  1566  0170  3187  270F  3180   	fcall	_SerialPortSendData
  1567  0173                     l2878:
  1568                           
  1569                           ;source/main.c: 165:                 SerialPortReceiveData(dataBuf,numBytes);
  1570  0173  30F0               	movlw	240
  1571  0174  0140               	movlb	0	; select bank0
  1572  0175  00A0               	movwf	SerialPortReceiveData@dataReceived
  1573  0176  3020               	movlw	32
  1574  0177  00A1               	movwf	SerialPortReceiveData@dataReceived+1
  1575  0178  085F               	movf	_numBytes+1,w
  1576  0179  00A3               	movwf	SerialPortReceiveData@length+1
  1577  017A  085E               	movf	_numBytes,w
  1578  017B  00A2               	movwf	SerialPortReceiveData@length
  1579  017C  3187  273A  3180   	fcall	_SerialPortReceiveData
  1580  017F                     l2880:
  1581                           
  1582                           ;source/main.c: 168:                 successful=writeFlash(addr,numBytes,dataBuf);
  1583  017F  0140               	movlb	0	; select bank0
  1584  0180  085B               	movf	_addr+3,w
  1585  0181  00C1               	movwf	writeFlash@addr+3
  1586  0182  085A               	movf	_addr+2,w
  1587  0183  00C0               	movwf	writeFlash@addr+2
  1588  0184  0859               	movf	_addr+1,w
  1589  0185  00BF               	movwf	writeFlash@addr+1
  1590  0186  0858               	movf	_addr,w
  1591  0187  00BE               	movwf	writeFlash@addr
  1592  0188  085F               	movf	_numBytes+1,w
  1593  0189  00C3               	movwf	writeFlash@numBytes+1
  1594  018A  085E               	movf	_numBytes,w
  1595  018B  00C2               	movwf	writeFlash@numBytes
  1596  018C  30F0               	movlw	240
  1597  018D  00C4               	movwf	writeFlash@dataBytes
  1598  018E  3020               	movlw	32
  1599  018F  00C5               	movwf	writeFlash@dataBytes+1
  1600  0190  3186  2668  3180   	fcall	_writeFlash
  1601  0193  0140               	movlb	0	; select bank0
  1602  0194  00CB               	movwf	??_main
  1603  0195  084B               	movf	??_main,w
  1604  0196  00D7               	movwf	main@successful
  1605  0197                     l2882:
  1606                           
  1607                           ;source/main.c: 170:                 if (successful) {
  1608  0197  0857               	movf	main@successful,w
  1609  0198  1903               	btfsc	3,2
  1610  0199  299B               	goto	u2611
  1611  019A  299C               	goto	u2610
  1612  019B                     u2611:
  1613  019B  2918               	goto	l2866
  1614  019C                     u2610:
  1615  019C                     l2884:
  1616                           
  1617                           ;source/main.c: 171:                     ackBuf[0]=0x80;
  1618  019C  3080               	movlw	128
  1619  019D  00CB               	movwf	??_main
  1620  019E  084B               	movf	??_main,w
  1621  019F  00EA               	movwf	_ackBuf
  1622  01A0  291C               	goto	l2868
  1623  01A1                     l2892:
  1624                           
  1625                           ;source/main.c: 181:                 addr=((unsigned long)cmdBuf[1]<<16 | (unsigned long
      +                          )cmdBuf[2]<<8 | (unsigned long)cmdBuf[3]);
  1626  01A1  0866               	movf	_cmdBuf+3,w
  1627  01A2  00CB               	movwf	??_main
  1628  01A3  01CC               	clrf	??_main+1
  1629  01A4  01CD               	clrf	??_main+2
  1630  01A5  01CE               	clrf	??_main+3
  1631  01A6  0865               	movf	_cmdBuf+2,w
  1632  01A7  00CF               	movwf	??_main+4
  1633  01A8  01D0               	clrf	??_main+5
  1634  01A9  01D1               	clrf	??_main+6
  1635  01AA  01D2               	clrf	??_main+7
  1636  01AB  3008               	movlw	8
  1637  01AC                     u2625:
  1638  01AC  35CF               	lslf	??_main+4,f
  1639  01AD  0DD0               	rlf	??_main+5,f
  1640  01AE  0DD1               	rlf	??_main+6,f
  1641  01AF  0DD2               	rlf	??_main+7,f
  1642  01B0                     u2620:
  1643  01B0  0B89               	decfsz	9,f
  1644  01B1  29AC               	goto	u2625
  1645  01B2  0864               	movf	_cmdBuf+1,w
  1646  01B3  00D3               	movwf	??_main+8
  1647  01B4  01D4               	clrf	??_main+9
  1648  01B5  01D5               	clrf	??_main+10
  1649  01B6  01D6               	clrf	??_main+11
  1650  01B7  3010               	movlw	16
  1651  01B8                     u2635:
  1652  01B8  35D3               	lslf	??_main+8,f
  1653  01B9  0DD4               	rlf	??_main+9,f
  1654  01BA  0DD5               	rlf	??_main+10,f
  1655  01BB  0DD6               	rlf	??_main+11,f
  1656  01BC                     u2630:
  1657  01BC  0B89               	decfsz	9,f
  1658  01BD  29B8               	goto	u2635
  1659  01BE  0853               	movf	??_main+8,w
  1660  01BF  04CF               	iorwf	??_main+4,f
  1661  01C0  0854               	movf	??_main+9,w
  1662  01C1  04D0               	iorwf	??_main+5,f
  1663  01C2  0855               	movf	??_main+10,w
  1664  01C3  04D1               	iorwf	??_main+6,f
  1665  01C4  0856               	movf	??_main+11,w
  1666  01C5  04D2               	iorwf	??_main+7,f
  1667  01C6  084B               	movf	??_main,w
  1668  01C7  044F               	iorwf	??_main+4,w
  1669  01C8  00D8               	movwf	_addr
  1670  01C9  084C               	movf	??_main+1,w
  1671  01CA  0450               	iorwf	??_main+5,w
  1672  01CB  00D9               	movwf	_addr+1
  1673  01CC  084D               	movf	??_main+2,w
  1674  01CD  0451               	iorwf	??_main+6,w
  1675  01CE  00DA               	movwf	_addr+2
  1676  01CF  084E               	movf	??_main+3,w
  1677  01D0  0452               	iorwf	??_main+7,w
  1678  01D1  00DB               	movwf	_addr+3
  1679  01D2                     l2894:
  1680                           
  1681                           ;source/main.c: 186:                 addr&=0xfff000;
  1682  01D2  3000               	movlw	0
  1683  01D3  05D8               	andwf	_addr,f
  1684  01D4  30F0               	movlw	240
  1685  01D5  05D9               	andwf	_addr+1,f
  1686  01D6  30FF               	movlw	255
  1687  01D7  05DA               	andwf	_addr+2,f
  1688  01D8  3000               	movlw	0
  1689  01D9  05DB               	andwf	_addr+3,f
  1690  01DA                     l2896:
  1691                           
  1692                           ;source/main.c: 189:                 successful=eraseFlashSector(addr);
  1693  01DA  085B               	movf	_addr+3,w
  1694  01DB  00BB               	movwf	eraseFlashSector@addr+3
  1695  01DC  085A               	movf	_addr+2,w
  1696  01DD  00BA               	movwf	eraseFlashSector@addr+2
  1697  01DE  0859               	movf	_addr+1,w
  1698  01DF  00B9               	movwf	eraseFlashSector@addr+1
  1699  01E0  0858               	movf	_addr,w
  1700  01E1  00B8               	movwf	eraseFlashSector@addr
  1701  01E2  3182  2250  3180   	fcall	_eraseFlashSector
  1702  01E5  0140               	movlb	0	; select bank0
  1703  01E6  00CB               	movwf	??_main
  1704  01E7  084B               	movf	??_main,w
  1705  01E8  00D7               	movwf	main@successful
  1706  01E9                     l2898:
  1707                           
  1708                           ;source/main.c: 192:                 if (successful) {
  1709  01E9  0857               	movf	main@successful,w
  1710  01EA  1903               	btfsc	3,2
  1711  01EB  29ED               	goto	u2641
  1712  01EC  29EE               	goto	u2640
  1713  01ED                     u2641:
  1714  01ED  2918               	goto	l2866
  1715  01EE                     u2640:
  1716  01EE  299C               	goto	l2884
  1717  01EF                     l2908:
  1718                           
  1719                           ;source/main.c: 204:                 successful=readFlashChipId(dataBuf,&numRetBytes);
  1720  01EF  30F0               	movlw	240
  1721  01F0  00BE               	movwf	readFlashChipId@retBytes
  1722  01F1  3020               	movlw	32
  1723  01F2  00BF               	movwf	readFlashChipId@retBytes+1
  1724  01F3  3068               	movlw	(low (_numRetBytes| 0))& (0+255)
  1725  01F4  00CB               	movwf	??_main
  1726  01F5  084B               	movf	??_main,w
  1727  01F6  00C0               	movwf	readFlashChipId@numRetBytes
  1728  01F7  3186  26DC  3180   	fcall	_readFlashChipId
  1729  01FA  0140               	movlb	0	; select bank0
  1730  01FB  00CC               	movwf	??_main+1
  1731  01FC  084C               	movf	??_main+1,w
  1732  01FD  00D7               	movwf	main@successful
  1733  01FE                     l2910:
  1734                           
  1735                           ;source/main.c: 207:                 if (successful) {
  1736  01FE  0857               	movf	main@successful,w
  1737  01FF  1903               	btfsc	3,2
  1738  0200  2A02               	goto	u2651
  1739  0201  2A03               	goto	u2650
  1740  0202                     u2651:
  1741  0202  2918               	goto	l2866
  1742  0203                     u2650:
  1743  0203  290D               	goto	l2862
  1744  0204                     l2920:
  1745                           
  1746                           ;source/main.c: 220:                 successful=eraseFlash();
  1747  0204  3183  2323  3180   	fcall	_eraseFlash
  1748  0207  0140               	movlb	0	; select bank0
  1749  0208  00CB               	movwf	??_main
  1750  0209  084B               	movf	??_main,w
  1751  020A  00D7               	movwf	main@successful
  1752  020B                     l2922:
  1753                           
  1754                           ;source/main.c: 223:                 if (successful) {
  1755  020B  0857               	movf	main@successful,w
  1756  020C  1903               	btfsc	3,2
  1757  020D  2A0F               	goto	u2661
  1758  020E  2A10               	goto	u2660
  1759  020F                     u2661:
  1760  020F  2918               	goto	l2866
  1761  0210                     u2660:
  1762  0210  299C               	goto	l2884
  1763  0211                     l2936:
  1764  0211  0140               	movlb	0	; select bank0
  1765  0212  0863               	movf	_cmdBuf,w
  1766  0213  00CB               	movwf	??_main
  1767  0214  01CC               	clrf	??_main+1
  1768                           
  1769                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1770                           ; Switch size 1, requested type "simple"
  1771                           ; Number of cases is 1, Range of values is 0 to 0
  1772                           ; switch strategies available:
  1773                           ; Name         Instructions Cycles
  1774                           ; simple_byte            4     3 (average)
  1775                           ; direct_byte            8     6 (fixed)
  1776                           ; jumptable            260     6 (fixed)
  1777                           ;	Chosen strategy is simple_byte
  1778  0215  084C               	movf	??_main+1,w
  1779  0216  3A00               	xorlw	0	; case 0
  1780  0217  1903               	skipnz
  1781  0218  2A1A               	goto	l2980
  1782  0219  2A2E               	goto	l2938
  1783  021A                     l2980:
  1784                           
  1785                           ; Switch size 1, requested type "simple"
  1786                           ; Number of cases is 6, Range of values is 128 to 191
  1787                           ; switch strategies available:
  1788                           ; Name         Instructions Cycles
  1789                           ; simple_byte           19    10 (average)
  1790                           ; direct_byte          137     9 (fixed)
  1791                           ; jumptable            263     9 (fixed)
  1792                           ;	Chosen strategy is simple_byte
  1793  021A  084B               	movf	??_main,w
  1794  021B  3A80               	xorlw	128	; case 128
  1795  021C  1903               	skipnz
  1796  021D  28AB               	goto	l2852
  1797  021E  3A01               	xorlw	1	; case 129
  1798  021F  1903               	skipnz
  1799  0220  291E               	goto	l2870
  1800  0221  3A03               	xorlw	3	; case 130
  1801  0222  1903               	skipnz
  1802  0223  29A1               	goto	l2892
  1803  0224  3A01               	xorlw	1	; case 131
  1804  0225  1903               	skipnz
  1805  0226  29EF               	goto	l2908
  1806  0227  3A07               	xorlw	7	; case 132
  1807  0228  1903               	skipnz
  1808  0229  2A04               	goto	l2920
  1809  022A  3A3B               	xorlw	59	; case 191
  1810  022B  1903               	skipnz
  1811  022C  2A4E               	goto	l127
  1812  022D  2A2E               	goto	l2938
  1813  022E                     l2938:
  1814                           
  1815                           ;source/main.c: 241:         SerialPortSendData(ackBuf,(returnBytes+1));
  1816  022E  306A               	movlw	low _ackBuf
  1817  022F  00A0               	movwf	SerialPortSendData@dataToSend
  1818  0230  3000               	movlw	high _ackBuf
  1819  0231  00A1               	movwf	SerialPortSendData@dataToSend+1
  1820  0232  0861               	movf	_returnBytes,w
  1821  0233  3E01               	addlw	1
  1822  0234  00A2               	movwf	SerialPortSendData@length
  1823  0235  3000               	movlw	0
  1824  0236  1803               	skipnc
  1825  0237  3001               	movlw	1
  1826  0238  00A3               	movwf	SerialPortSendData@length+1
  1827  0239  3187  270F  3180   	fcall	_SerialPortSendData
  1828  023C                     l2940:
  1829                           
  1830                           ;source/main.c: 242:         if (returnBytes) SerialPortSendData(dataBuf,numRetBytes);
  1831  023C  0140               	movlb	0	; select bank0
  1832  023D  0861               	movf	_returnBytes,w
  1833  023E  1903               	btfsc	3,2
  1834  023F  2A41               	goto	u2671
  1835  0240  2A42               	goto	u2670
  1836  0241                     u2671:
  1837  0241  2890               	goto	l2840
  1838  0242                     u2670:
  1839  0242                     l2942:
  1840  0242  30F0               	movlw	240
  1841  0243  00A0               	movwf	SerialPortSendData@dataToSend
  1842  0244  3020               	movlw	32
  1843  0245  00A1               	movwf	SerialPortSendData@dataToSend+1
  1844  0246  0869               	movf	_numRetBytes+1,w
  1845  0247  00A3               	movwf	SerialPortSendData@length+1
  1846  0248  0868               	movf	_numRetBytes,w
  1847  0249  00A2               	movwf	SerialPortSendData@length
  1848  024A  3187  270F  3180   	fcall	_SerialPortSendData
  1849  024D  2890               	goto	l2840
  1850  024E                     l127:
  1851  024E  3180  282A         	ljmp	start
  1852  0250                     __end_of_main:
  1853                           
  1854                           	psect	text1
  1855  0668                     __ptext1:	
  1856 ;; *************** function _writeFlash *****************
  1857 ;; Defined at:
  1858 ;;		line 52 in file "source/flash.c"
  1859 ;; Parameters:    Size  Location     Type
  1860 ;;  addr            4   30[BANK0 ] unsigned long 
  1861 ;;  numBytes        2   34[BANK0 ] unsigned short 
  1862 ;;  dataBytes       2   36[BANK0 ] PTR unsigned char 
  1863 ;;		 -> dataBuf(256), 
  1864 ;; Auto vars:     Size  Location     Type
  1865 ;;  bufPtr          2   41[BANK0 ] unsigned short 
  1866 ;;  length          2   39[BANK0 ] unsigned short 
  1867 ;; Return value:  Size  Location     Type
  1868 ;;                  1    wreg      unsigned char 
  1869 ;; Registers used:
  1870 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1871 ;; Tracked objects:
  1872 ;;		On entry : 0/0
  1873 ;;		On exit  : 0/0
  1874 ;;		Unchanged: 0/0
  1875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1876 ;;      Params:         0       8       0       0       0       0       0       0
  1877 ;;      Locals:         0       4       0       0       0       0       0       0
  1878 ;;      Temps:          0       1       0       0       0       0       0       0
  1879 ;;      Totals:         0      13       0       0       0       0       0       0
  1880 ;;Total ram usage:       13 bytes
  1881 ;; Hardware stack levels used: 1
  1882 ;; Hardware stack levels required when called: 5
  1883 ;; This function calls:
  1884 ;;		_clearAddressRegisters
  1885 ;;		_writeOneByte
  1886 ;; This function is called by:
  1887 ;;		_main
  1888 ;; This function uses a non-reentrant model
  1889 ;;
  1890                           
  1891                           
  1892                           ;psect for function _writeFlash
  1893  0668                     _writeFlash:
  1894  0668                     l2608:	
  1895                           ;incstack = 0
  1896                           ; Regs used in _writeFlash: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1897                           
  1898                           
  1899                           ;source/flash.c: 55:     unsigned short length,bufPtr;;source/flash.c: 58:     bufPtr=0;
  1900  0668  0140               	movlb	0	; select bank0
  1901  0669  01C9               	clrf	writeFlash@bufPtr
  1902  066A  01CA               	clrf	writeFlash@bufPtr+1
  1903  066B                     l2610:
  1904                           
  1905                           ;source/flash.c: 59:     length=numBytes;
  1906  066B  0843               	movf	writeFlash@numBytes+1,w
  1907  066C  00C8               	movwf	writeFlash@length+1
  1908  066D  0842               	movf	writeFlash@numBytes,w
  1909  066E  00C7               	movwf	writeFlash@length
  1910                           
  1911                           ;source/flash.c: 62:     while (length>0) {
  1912  066F  2E9D               	goto	l2620
  1913  0670                     l2612:
  1914                           
  1915                           ;source/flash.c: 64:         if (!writeOneByte(addr,dataBytes[bufPtr])) return 0;
  1916  0670  0841               	movf	writeFlash@addr+3,w
  1917  0671  00BB               	movwf	writeOneByte@addr+3
  1918  0672  0840               	movf	writeFlash@addr+2,w
  1919  0673  00BA               	movwf	writeOneByte@addr+2
  1920  0674  083F               	movf	writeFlash@addr+1,w
  1921  0675  00B9               	movwf	writeOneByte@addr+1
  1922  0676  083E               	movf	writeFlash@addr,w
  1923  0677  00B8               	movwf	writeOneByte@addr
  1924  0678  0849               	movf	writeFlash@bufPtr,w
  1925  0679  0744               	addwf	writeFlash@dataBytes,w
  1926  067A  0086               	movwf	6
  1927  067B  084A               	movf	writeFlash@bufPtr+1,w
  1928  067C  3D45               	addwfc	writeFlash@dataBytes+1,w
  1929  067D  0087               	movwf	7
  1930  067E  0801               	movf	1,w
  1931  067F  00C6               	movwf	??_writeFlash
  1932  0680  0846               	movf	??_writeFlash,w
  1933  0681  00BC               	movwf	writeOneByte@data
  1934  0682  3183  23F6  3186   	fcall	_writeOneByte
  1935  0685  3A00               	xorlw	0
  1936  0686  1D03               	skipz
  1937  0687  2E89               	goto	u2221
  1938  0688  2E8A               	goto	u2220
  1939  0689                     u2221:
  1940  0689  2E8C               	goto	l2618
  1941  068A                     u2220:
  1942  068A                     l2614:
  1943  068A  3000               	movlw	0
  1944  068B  2EA7               	goto	l237
  1945  068C                     l2618:
  1946                           
  1947                           ;source/flash.c: 65:         bufPtr++;
  1948  068C  3001               	movlw	1
  1949  068D  0140               	movlb	0	; select bank0
  1950  068E  07C9               	addwf	writeFlash@bufPtr,f
  1951  068F  3000               	movlw	0
  1952  0690  3DCA               	addwfc	writeFlash@bufPtr+1,f
  1953                           
  1954                           ;source/flash.c: 66:         addr++;
  1955  0691  3001               	movlw	1
  1956  0692  07BE               	addwf	writeFlash@addr,f
  1957  0693  3000               	movlw	0
  1958  0694  3DBF               	addwfc	writeFlash@addr+1,f
  1959  0695  3000               	movlw	0
  1960  0696  3DC0               	addwfc	writeFlash@addr+2,f
  1961  0697  3000               	movlw	0
  1962  0698  3DC1               	addwfc	writeFlash@addr+3,f
  1963                           
  1964                           ;source/flash.c: 67:         length--;
  1965  0699  3001               	movlw	1
  1966  069A  02C7               	subwf	writeFlash@length,f
  1967  069B  3000               	movlw	0
  1968  069C  3BC8               	subwfb	writeFlash@length+1,f
  1969  069D                     l2620:
  1970                           
  1971                           ;source/flash.c: 62:     while (length>0) {
  1972  069D  0847               	movf	writeFlash@length,w
  1973  069E  0448               	iorwf	writeFlash@length+1,w
  1974  069F  1D03               	btfss	3,2
  1975  06A0  2EA2               	goto	u2231
  1976  06A1  2EA3               	goto	u2230
  1977  06A2                     u2231:
  1978  06A2  2E70               	goto	l2612
  1979  06A3                     u2230:
  1980  06A3                     l2622:
  1981                           
  1982                           ;source/flash.c: 70:     clearAddressRegisters();
  1983  06A3  3187  279F  3186   	fcall	_clearAddressRegisters
  1984  06A6                     l2624:
  1985                           
  1986                           ;source/flash.c: 71:     return 1;
  1987  06A6  3001               	movlw	1
  1988  06A7                     l237:
  1989  06A7  0008               	return
  1990  06A8                     __end_of_writeFlash:
  1991                           
  1992                           	psect	text2
  1993  03F6                     __ptext2:	
  1994 ;; *************** function _writeOneByte *****************
  1995 ;; Defined at:
  1996 ;;		line 83 in file "source/flash.c"
  1997 ;; Parameters:    Size  Location     Type
  1998 ;;  addr            4   24[BANK0 ] unsigned long 
  1999 ;;  data            1   28[BANK0 ] unsigned char 
  2000 ;; Auto vars:     Size  Location     Type
  2001 ;;		None
  2002 ;; Return value:  Size  Location     Type
  2003 ;;                  1    wreg      unsigned char 
  2004 ;; Registers used:
  2005 ;;		wreg, status,2, status,0, pclath, cstack
  2006 ;; Tracked objects:
  2007 ;;		On entry : 0/0
  2008 ;;		On exit  : 0/0
  2009 ;;		Unchanged: 0/0
  2010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2011 ;;      Params:         0       5       0       0       0       0       0       0
  2012 ;;      Locals:         0       0       0       0       0       0       0       0
  2013 ;;      Temps:          0       1       0       0       0       0       0       0
  2014 ;;      Totals:         0       6       0       0       0       0       0       0
  2015 ;;Total ram usage:        6 bytes
  2016 ;; Hardware stack levels used: 1
  2017 ;; Hardware stack levels required when called: 4
  2018 ;; This function calls:
  2019 ;;		_sendOneByte
  2020 ;;		_setAddressRegisters
  2021 ;;		_waitPollData
  2022 ;; This function is called by:
  2023 ;;		_writeFlash
  2024 ;; This function uses a non-reentrant model
  2025 ;;
  2026                           
  2027                           
  2028                           ;psect for function _writeOneByte
  2029  03F6                     _writeOneByte:
  2030  03F6                     l2410:	
  2031                           ;incstack = 0
  2032                           ; Regs used in _writeOneByte: [wreg+status,2+status,0+pclath+cstack]
  2033                           
  2034                           
  2035                           ;source/flash.c: 87:     if (!setAddressRegisters(0x005555,0x1,0x0)) return 0;
  2036  03F6  3000               	movlw	0
  2037  03F7  0140               	movlb	0	; select bank0
  2038  03F8  00A3               	movwf	setAddressRegisters@addr+3
  2039  03F9  3000               	movlw	0
  2040  03FA  00A2               	movwf	setAddressRegisters@addr+2
  2041  03FB  3055               	movlw	85
  2042  03FC  00A1               	movwf	setAddressRegisters@addr+1
  2043  03FD  3055               	movlw	85
  2044  03FE  00A0               	movwf	setAddressRegisters@addr
  2045  03FF  01A4               	clrf	setAddressRegisters@OE
  2046  0400  0AA4               	incf	setAddressRegisters@OE,f
  2047  0401  01A5               	clrf	setAddressRegisters@CE
  2048  0402  3185  2500  3183   	fcall	_setAddressRegisters
  2049  0405  3A00               	xorlw	0
  2050  0406  1D03               	skipz
  2051  0407  2C09               	goto	u1961
  2052  0408  2C0A               	goto	u1960
  2053  0409                     u1961:
  2054  0409  2C0C               	goto	l2416
  2055  040A                     u1960:
  2056  040A                     l2412:
  2057  040A  3000               	movlw	0
  2058  040B  2C8B               	goto	l248
  2059  040C                     l2416:
  2060                           
  2061                           ;source/flash.c: 88:     if (!sendOneByte(0xaa)) return 0;
  2062  040C  30AA               	movlw	170
  2063  040D  3187  27D4  3183   	fcall	_sendOneByte
  2064  0410  3A00               	xorlw	0
  2065  0411  1D03               	skipz
  2066  0412  2C14               	goto	u1971
  2067  0413  2C15               	goto	u1970
  2068  0414                     u1971:
  2069  0414  2C16               	goto	l2422
  2070  0415                     u1970:
  2071  0415  2C0A               	goto	l2412
  2072  0416                     l2422:
  2073                           
  2074                           ;source/flash.c: 89:     if (!setAddressRegisters(0x002aaa,0x1,0x0)) return 0;
  2075  0416  3000               	movlw	0
  2076  0417  0140               	movlb	0	; select bank0
  2077  0418  00A3               	movwf	setAddressRegisters@addr+3
  2078  0419  3000               	movlw	0
  2079  041A  00A2               	movwf	setAddressRegisters@addr+2
  2080  041B  302A               	movlw	42
  2081  041C  00A1               	movwf	setAddressRegisters@addr+1
  2082  041D  30AA               	movlw	170
  2083  041E  00A0               	movwf	setAddressRegisters@addr
  2084  041F  01A4               	clrf	setAddressRegisters@OE
  2085  0420  0AA4               	incf	setAddressRegisters@OE,f
  2086  0421  01A5               	clrf	setAddressRegisters@CE
  2087  0422  3185  2500  3183   	fcall	_setAddressRegisters
  2088  0425  3A00               	xorlw	0
  2089  0426  1D03               	skipz
  2090  0427  2C29               	goto	u1981
  2091  0428  2C2A               	goto	u1980
  2092  0429                     u1981:
  2093  0429  2C2B               	goto	l2428
  2094  042A                     u1980:
  2095  042A  2C0A               	goto	l2412
  2096  042B                     l2428:
  2097                           
  2098                           ;source/flash.c: 90:     if (!sendOneByte(0x55)) return 0;
  2099  042B  3055               	movlw	85
  2100  042C  3187  27D4  3183   	fcall	_sendOneByte
  2101  042F  3A00               	xorlw	0
  2102  0430  1D03               	skipz
  2103  0431  2C33               	goto	u1991
  2104  0432  2C34               	goto	u1990
  2105  0433                     u1991:
  2106  0433  2C35               	goto	l2434
  2107  0434                     u1990:
  2108  0434  2C0A               	goto	l2412
  2109  0435                     l2434:
  2110                           
  2111                           ;source/flash.c: 91:     if (!setAddressRegisters(0x005555,0x1,0x0)) return 0;
  2112  0435  3000               	movlw	0
  2113  0436  0140               	movlb	0	; select bank0
  2114  0437  00A3               	movwf	setAddressRegisters@addr+3
  2115  0438  3000               	movlw	0
  2116  0439  00A2               	movwf	setAddressRegisters@addr+2
  2117  043A  3055               	movlw	85
  2118  043B  00A1               	movwf	setAddressRegisters@addr+1
  2119  043C  3055               	movlw	85
  2120  043D  00A0               	movwf	setAddressRegisters@addr
  2121  043E  01A4               	clrf	setAddressRegisters@OE
  2122  043F  0AA4               	incf	setAddressRegisters@OE,f
  2123  0440  01A5               	clrf	setAddressRegisters@CE
  2124  0441  3185  2500  3183   	fcall	_setAddressRegisters
  2125  0444  3A00               	xorlw	0
  2126  0445  1D03               	skipz
  2127  0446  2C48               	goto	u2001
  2128  0447  2C49               	goto	u2000
  2129  0448                     u2001:
  2130  0448  2C4A               	goto	l2440
  2131  0449                     u2000:
  2132  0449  2C0A               	goto	l2412
  2133  044A                     l2440:
  2134                           
  2135                           ;source/flash.c: 92:     if (!sendOneByte(0xA0)) return 0;
  2136  044A  30A0               	movlw	160
  2137  044B  3187  27D4  3183   	fcall	_sendOneByte
  2138  044E  3A00               	xorlw	0
  2139  044F  1D03               	skipz
  2140  0450  2C52               	goto	u2011
  2141  0451  2C53               	goto	u2010
  2142  0452                     u2011:
  2143  0452  2C54               	goto	l2446
  2144  0453                     u2010:
  2145  0453  2C0A               	goto	l2412
  2146  0454                     l2446:
  2147                           
  2148                           ;source/flash.c: 93:     if (!setAddressRegisters(addr,0x1,0x0)) return 0;
  2149  0454  0140               	movlb	0	; select bank0
  2150  0455  083B               	movf	writeOneByte@addr+3,w
  2151  0456  00A3               	movwf	setAddressRegisters@addr+3
  2152  0457  083A               	movf	writeOneByte@addr+2,w
  2153  0458  00A2               	movwf	setAddressRegisters@addr+2
  2154  0459  0839               	movf	writeOneByte@addr+1,w
  2155  045A  00A1               	movwf	setAddressRegisters@addr+1
  2156  045B  0838               	movf	writeOneByte@addr,w
  2157  045C  00A0               	movwf	setAddressRegisters@addr
  2158  045D  01A4               	clrf	setAddressRegisters@OE
  2159  045E  0AA4               	incf	setAddressRegisters@OE,f
  2160  045F  01A5               	clrf	setAddressRegisters@CE
  2161  0460  3185  2500  3183   	fcall	_setAddressRegisters
  2162  0463  3A00               	xorlw	0
  2163  0464  1D03               	skipz
  2164  0465  2C67               	goto	u2021
  2165  0466  2C68               	goto	u2020
  2166  0467                     u2021:
  2167  0467  2C69               	goto	l2452
  2168  0468                     u2020:
  2169  0468  2C0A               	goto	l2412
  2170  0469                     l2452:
  2171                           
  2172                           ;source/flash.c: 94:     if (!sendOneByte(data)) return 0;
  2173  0469  0140               	movlb	0	; select bank0
  2174  046A  083C               	movf	writeOneByte@data,w
  2175  046B  3187  27D4  3183   	fcall	_sendOneByte
  2176  046E  3A00               	xorlw	0
  2177  046F  1D03               	skipz
  2178  0470  2C72               	goto	u2031
  2179  0471  2C73               	goto	u2030
  2180  0472                     u2031:
  2181  0472  2C74               	goto	l2458
  2182  0473                     u2030:
  2183  0473  2C0A               	goto	l2412
  2184  0474                     l2458:
  2185                           
  2186                           ;source/flash.c: 95:     if (!waitPollData(addr,data)) return 0;
  2187  0474  0140               	movlb	0	; select bank0
  2188  0475  083B               	movf	writeOneByte@addr+3,w
  2189  0476  00B2               	movwf	waitPollData@addr+3
  2190  0477  083A               	movf	writeOneByte@addr+2,w
  2191  0478  00B1               	movwf	waitPollData@addr+2
  2192  0479  0839               	movf	writeOneByte@addr+1,w
  2193  047A  00B0               	movwf	waitPollData@addr+1
  2194  047B  0838               	movf	writeOneByte@addr,w
  2195  047C  00AF               	movwf	waitPollData@addr
  2196  047D  083C               	movf	writeOneByte@data,w
  2197  047E  00BD               	movwf	??_writeOneByte
  2198  047F  083D               	movf	??_writeOneByte,w
  2199  0480  00B3               	movwf	waitPollData@origData
  2200  0481  3186  2621  3183   	fcall	_waitPollData
  2201  0484  3A00               	xorlw	0
  2202  0485  1D03               	skipz
  2203  0486  2C88               	goto	u2041
  2204  0487  2C89               	goto	u2040
  2205  0488                     u2041:
  2206  0488  2C8A               	goto	l2464
  2207  0489                     u2040:
  2208  0489  2C0A               	goto	l2412
  2209  048A                     l2464:
  2210                           
  2211                           ;source/flash.c: 96:     return 1;
  2212  048A  3001               	movlw	1
  2213  048B                     l248:
  2214  048B  0008               	return
  2215  048C                     __end_of_writeOneByte:
  2216                           
  2217                           	psect	text3
  2218  06DC                     __ptext3:	
  2219 ;; *************** function _readFlashChipId *****************
  2220 ;; Defined at:
  2221 ;;		line 74 in file "source/flash.c"
  2222 ;; Parameters:    Size  Location     Type
  2223 ;;  retBytes        2   30[BANK0 ] PTR unsigned char 
  2224 ;;		 -> dataBuf(256), 
  2225 ;;  numRetBytes     1   32[BANK0 ] PTR unsigned short 
  2226 ;;		 -> numRetBytes(2), 
  2227 ;; Auto vars:     Size  Location     Type
  2228 ;;		None
  2229 ;; Return value:  Size  Location     Type
  2230 ;;                  1    wreg      unsigned char 
  2231 ;; Registers used:
  2232 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2233 ;; Tracked objects:
  2234 ;;		On entry : 0/0
  2235 ;;		On exit  : 0/0
  2236 ;;		Unchanged: 0/0
  2237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2238 ;;      Params:         0       3       0       0       0       0       0       0
  2239 ;;      Locals:         0       0       0       0       0       0       0       0
  2240 ;;      Temps:          0       1       0       0       0       0       0       0
  2241 ;;      Totals:         0       4       0       0       0       0       0       0
  2242 ;;Total ram usage:        4 bytes
  2243 ;; Hardware stack levels used: 1
  2244 ;; Hardware stack levels required when called: 5
  2245 ;; This function calls:
  2246 ;;		_readFlash
  2247 ;;		_softwareIdEntry
  2248 ;;		_softwareIdExit
  2249 ;; This function is called by:
  2250 ;;		_main
  2251 ;; This function uses a non-reentrant model
  2252 ;;
  2253                           
  2254                           
  2255                           ;psect for function _readFlashChipId
  2256  06DC                     _readFlashChipId:
  2257  06DC                     l2710:	
  2258                           ;incstack = 0
  2259                           ; Regs used in _readFlashChipId: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2260                           
  2261                           
  2262                           ;source/flash.c: 77:     if (!softwareIdEntry()) return 0;
  2263  06DC  3185  25C1  3186   	fcall	_softwareIdEntry
  2264  06DF  3A00               	xorlw	0
  2265  06E0  1D03               	skipz
  2266  06E1  2EE3               	goto	u2371
  2267  06E2  2EE4               	goto	u2370
  2268  06E3                     u2371:
  2269  06E3  2EE6               	goto	l2716
  2270  06E4                     u2370:
  2271  06E4                     l2712:
  2272  06E4  3000               	movlw	0
  2273  06E5  2F0E               	goto	l242
  2274  06E6                     l2716:
  2275                           
  2276                           ;source/flash.c: 78:     if (!readFlash(0x000000,2,retBytes,numRetBytes)) return 0;
  2277  06E6  3000               	movlw	0
  2278  06E7  0140               	movlb	0	; select bank0
  2279  06E8  00B2               	movwf	readFlash@addr+3
  2280  06E9  3000               	movlw	0
  2281  06EA  00B1               	movwf	readFlash@addr+2
  2282  06EB  3000               	movlw	0
  2283  06EC  00B0               	movwf	readFlash@addr+1
  2284  06ED  3000               	movlw	0
  2285  06EE  00AF               	movwf	readFlash@addr
  2286  06EF  3002               	movlw	2
  2287  06F0  00B3               	movwf	readFlash@numBytes
  2288  06F1  3000               	movlw	0
  2289  06F2  00B4               	movwf	readFlash@numBytes+1
  2290  06F3  083F               	movf	readFlashChipId@retBytes+1,w
  2291  06F4  00B6               	movwf	readFlash@retBytes+1
  2292  06F5  083E               	movf	readFlashChipId@retBytes,w
  2293  06F6  00B5               	movwf	readFlash@retBytes
  2294  06F7  0840               	movf	readFlashChipId@numRetBytes,w
  2295  06F8  00C1               	movwf	??_readFlashChipId
  2296  06F9  0841               	movf	??_readFlashChipId,w
  2297  06FA  00B7               	movwf	readFlash@numRetBytes
  2298  06FB  3184  248C  3186   	fcall	_readFlash
  2299  06FE  3A00               	xorlw	0
  2300  06FF  1D03               	skipz
  2301  0700  2F02               	goto	u2381
  2302  0701  2F03               	goto	u2380
  2303  0702                     u2381:
  2304  0702  2F04               	goto	l2722
  2305  0703                     u2380:
  2306  0703  2EE4               	goto	l2712
  2307  0704                     l2722:
  2308                           
  2309                           ;source/flash.c: 79:     if (!softwareIdExit()) return 0;
  2310  0704  3185  2561  3186   	fcall	_softwareIdExit
  2311  0707  3A00               	xorlw	0
  2312  0708  1D03               	skipz
  2313  0709  2F0B               	goto	u2391
  2314  070A  2F0C               	goto	u2390
  2315  070B                     u2391:
  2316  070B  2F0D               	goto	l2728
  2317  070C                     u2390:
  2318  070C  2EE4               	goto	l2712
  2319  070D                     l2728:
  2320                           
  2321                           ;source/flash.c: 80:     return 1;
  2322  070D  3001               	movlw	1
  2323  070E                     l242:
  2324  070E  0008               	return
  2325  070F                     __end_of_readFlashChipId:
  2326                           
  2327                           	psect	text4
  2328  0561                     __ptext4:	
  2329 ;; *************** function _softwareIdExit *****************
  2330 ;; Defined at:
  2331 ;;		line 173 in file "source/flash.c"
  2332 ;; Parameters:    Size  Location     Type
  2333 ;;		None
  2334 ;; Auto vars:     Size  Location     Type
  2335 ;;		None
  2336 ;; Return value:  Size  Location     Type
  2337 ;;                  1    wreg      unsigned char 
  2338 ;; Registers used:
  2339 ;;		wreg, status,2, status,0, pclath, cstack
  2340 ;; Tracked objects:
  2341 ;;		On entry : 0/0
  2342 ;;		On exit  : 0/0
  2343 ;;		Unchanged: 0/0
  2344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2345 ;;      Params:         0       0       0       0       0       0       0       0
  2346 ;;      Locals:         0       0       0       0       0       0       0       0
  2347 ;;      Temps:          0       0       0       0       0       0       0       0
  2348 ;;      Totals:         0       0       0       0       0       0       0       0
  2349 ;;Total ram usage:        0 bytes
  2350 ;; Hardware stack levels used: 1
  2351 ;; Hardware stack levels required when called: 3
  2352 ;; This function calls:
  2353 ;;		_sendOneByte
  2354 ;;		_setAddressRegisters
  2355 ;; This function is called by:
  2356 ;;		_readFlashChipId
  2357 ;; This function uses a non-reentrant model
  2358 ;;
  2359                           
  2360                           
  2361                           ;psect for function _softwareIdExit
  2362  0561                     _softwareIdExit:
  2363  0561                     l2508:	
  2364                           ;incstack = 0
  2365                           ; Regs used in _softwareIdExit: [wreg+status,2+status,0+pclath+cstack]
  2366                           
  2367                           
  2368                           ;source/flash.c: 177:     if (!setAddressRegisters(0x005555,0x1,0x0)) return 0;
  2369  0561  3000               	movlw	0
  2370  0562  0140               	movlb	0	; select bank0
  2371  0563  00A3               	movwf	setAddressRegisters@addr+3
  2372  0564  3000               	movlw	0
  2373  0565  00A2               	movwf	setAddressRegisters@addr+2
  2374  0566  3055               	movlw	85
  2375  0567  00A1               	movwf	setAddressRegisters@addr+1
  2376  0568  3055               	movlw	85
  2377  0569  00A0               	movwf	setAddressRegisters@addr
  2378  056A  01A4               	clrf	setAddressRegisters@OE
  2379  056B  0AA4               	incf	setAddressRegisters@OE,f
  2380  056C  01A5               	clrf	setAddressRegisters@CE
  2381  056D  3185  2500  3185   	fcall	_setAddressRegisters
  2382  0570  3A00               	xorlw	0
  2383  0571  1D03               	skipz
  2384  0572  2D74               	goto	u2111
  2385  0573  2D75               	goto	u2110
  2386  0574                     u2111:
  2387  0574  2D77               	goto	l2514
  2388  0575                     u2110:
  2389  0575                     l2510:
  2390  0575  3000               	movlw	0
  2391  0576  2DC0               	goto	l310
  2392  0577                     l2514:
  2393                           
  2394                           ;source/flash.c: 178:     if (!sendOneByte(0xaa)) return 0;
  2395  0577  30AA               	movlw	170
  2396  0578  3187  27D4  3185   	fcall	_sendOneByte
  2397  057B  3A00               	xorlw	0
  2398  057C  1D03               	skipz
  2399  057D  2D7F               	goto	u2121
  2400  057E  2D80               	goto	u2120
  2401  057F                     u2121:
  2402  057F  2D81               	goto	l2520
  2403  0580                     u2120:
  2404  0580  2D75               	goto	l2510
  2405  0581                     l2520:
  2406                           
  2407                           ;source/flash.c: 179:     if (!setAddressRegisters(0x002aaa,0x1,0x0)) return 0;
  2408  0581  3000               	movlw	0
  2409  0582  0140               	movlb	0	; select bank0
  2410  0583  00A3               	movwf	setAddressRegisters@addr+3
  2411  0584  3000               	movlw	0
  2412  0585  00A2               	movwf	setAddressRegisters@addr+2
  2413  0586  302A               	movlw	42
  2414  0587  00A1               	movwf	setAddressRegisters@addr+1
  2415  0588  30AA               	movlw	170
  2416  0589  00A0               	movwf	setAddressRegisters@addr
  2417  058A  01A4               	clrf	setAddressRegisters@OE
  2418  058B  0AA4               	incf	setAddressRegisters@OE,f
  2419  058C  01A5               	clrf	setAddressRegisters@CE
  2420  058D  3185  2500  3185   	fcall	_setAddressRegisters
  2421  0590  3A00               	xorlw	0
  2422  0591  1D03               	skipz
  2423  0592  2D94               	goto	u2131
  2424  0593  2D95               	goto	u2130
  2425  0594                     u2131:
  2426  0594  2D96               	goto	l2526
  2427  0595                     u2130:
  2428  0595  2D75               	goto	l2510
  2429  0596                     l2526:
  2430                           
  2431                           ;source/flash.c: 180:     if (!sendOneByte(0x55)) return 0;
  2432  0596  3055               	movlw	85
  2433  0597  3187  27D4  3185   	fcall	_sendOneByte
  2434  059A  3A00               	xorlw	0
  2435  059B  1D03               	skipz
  2436  059C  2D9E               	goto	u2141
  2437  059D  2D9F               	goto	u2140
  2438  059E                     u2141:
  2439  059E  2DA0               	goto	l2532
  2440  059F                     u2140:
  2441  059F  2D75               	goto	l2510
  2442  05A0                     l2532:
  2443                           
  2444                           ;source/flash.c: 181:     if (!setAddressRegisters(0x005555,0x1,0x0)) return 0;
  2445  05A0  3000               	movlw	0
  2446  05A1  0140               	movlb	0	; select bank0
  2447  05A2  00A3               	movwf	setAddressRegisters@addr+3
  2448  05A3  3000               	movlw	0
  2449  05A4  00A2               	movwf	setAddressRegisters@addr+2
  2450  05A5  3055               	movlw	85
  2451  05A6  00A1               	movwf	setAddressRegisters@addr+1
  2452  05A7  3055               	movlw	85
  2453  05A8  00A0               	movwf	setAddressRegisters@addr
  2454  05A9  01A4               	clrf	setAddressRegisters@OE
  2455  05AA  0AA4               	incf	setAddressRegisters@OE,f
  2456  05AB  01A5               	clrf	setAddressRegisters@CE
  2457  05AC  3185  2500  3185   	fcall	_setAddressRegisters
  2458  05AF  3A00               	xorlw	0
  2459  05B0  1D03               	skipz
  2460  05B1  2DB3               	goto	u2151
  2461  05B2  2DB4               	goto	u2150
  2462  05B3                     u2151:
  2463  05B3  2DB5               	goto	l2538
  2464  05B4                     u2150:
  2465  05B4  2D75               	goto	l2510
  2466  05B5                     l2538:
  2467                           
  2468                           ;source/flash.c: 182:     if (!sendOneByte(0xf0)) return 0;
  2469  05B5  30F0               	movlw	240
  2470  05B6  3187  27D4  3185   	fcall	_sendOneByte
  2471  05B9  3A00               	xorlw	0
  2472  05BA  1D03               	skipz
  2473  05BB  2DBD               	goto	u2161
  2474  05BC  2DBE               	goto	u2160
  2475  05BD                     u2161:
  2476  05BD  2DBF               	goto	l2544
  2477  05BE                     u2160:
  2478  05BE  2D75               	goto	l2510
  2479  05BF                     l2544:
  2480                           
  2481                           ;source/flash.c: 183:     return 1;
  2482  05BF  3001               	movlw	1
  2483  05C0                     l310:
  2484  05C0  0008               	return
  2485  05C1                     __end_of_softwareIdExit:
  2486                           
  2487                           	psect	text5
  2488  05C1                     __ptext5:	
  2489 ;; *************** function _softwareIdEntry *****************
  2490 ;; Defined at:
  2491 ;;		line 160 in file "source/flash.c"
  2492 ;; Parameters:    Size  Location     Type
  2493 ;;		None
  2494 ;; Auto vars:     Size  Location     Type
  2495 ;;		None
  2496 ;; Return value:  Size  Location     Type
  2497 ;;                  1    wreg      unsigned char 
  2498 ;; Registers used:
  2499 ;;		wreg, status,2, status,0, pclath, cstack
  2500 ;; Tracked objects:
  2501 ;;		On entry : 0/0
  2502 ;;		On exit  : 0/0
  2503 ;;		Unchanged: 0/0
  2504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2505 ;;      Params:         0       0       0       0       0       0       0       0
  2506 ;;      Locals:         0       0       0       0       0       0       0       0
  2507 ;;      Temps:          0       0       0       0       0       0       0       0
  2508 ;;      Totals:         0       0       0       0       0       0       0       0
  2509 ;;Total ram usage:        0 bytes
  2510 ;; Hardware stack levels used: 1
  2511 ;; Hardware stack levels required when called: 3
  2512 ;; This function calls:
  2513 ;;		_sendOneByte
  2514 ;;		_setAddressRegisters
  2515 ;; This function is called by:
  2516 ;;		_readFlashChipId
  2517 ;; This function uses a non-reentrant model
  2518 ;;
  2519                           
  2520                           
  2521                           ;psect for function _softwareIdEntry
  2522  05C1                     _softwareIdEntry:
  2523  05C1                     l2468:	
  2524                           ;incstack = 0
  2525                           ; Regs used in _softwareIdEntry: [wreg+status,2+status,0+pclath+cstack]
  2526                           
  2527                           
  2528                           ;source/flash.c: 164:     if (!setAddressRegisters(0x005555,0x1,0x0)) return 0;
  2529  05C1  3000               	movlw	0
  2530  05C2  0140               	movlb	0	; select bank0
  2531  05C3  00A3               	movwf	setAddressRegisters@addr+3
  2532  05C4  3000               	movlw	0
  2533  05C5  00A2               	movwf	setAddressRegisters@addr+2
  2534  05C6  3055               	movlw	85
  2535  05C7  00A1               	movwf	setAddressRegisters@addr+1
  2536  05C8  3055               	movlw	85
  2537  05C9  00A0               	movwf	setAddressRegisters@addr
  2538  05CA  01A4               	clrf	setAddressRegisters@OE
  2539  05CB  0AA4               	incf	setAddressRegisters@OE,f
  2540  05CC  01A5               	clrf	setAddressRegisters@CE
  2541  05CD  3185  2500  3185   	fcall	_setAddressRegisters
  2542  05D0  3A00               	xorlw	0
  2543  05D1  1D03               	skipz
  2544  05D2  2DD4               	goto	u2051
  2545  05D3  2DD5               	goto	u2050
  2546  05D4                     u2051:
  2547  05D4  2DD7               	goto	l2474
  2548  05D5                     u2050:
  2549  05D5                     l2470:
  2550  05D5  3000               	movlw	0
  2551  05D6  2E20               	goto	l301
  2552  05D7                     l2474:
  2553                           
  2554                           ;source/flash.c: 165:     if (!sendOneByte(0xaa)) return 0;
  2555  05D7  30AA               	movlw	170
  2556  05D8  3187  27D4  3185   	fcall	_sendOneByte
  2557  05DB  3A00               	xorlw	0
  2558  05DC  1D03               	skipz
  2559  05DD  2DDF               	goto	u2061
  2560  05DE  2DE0               	goto	u2060
  2561  05DF                     u2061:
  2562  05DF  2DE1               	goto	l2480
  2563  05E0                     u2060:
  2564  05E0  2DD5               	goto	l2470
  2565  05E1                     l2480:
  2566                           
  2567                           ;source/flash.c: 166:     if (!setAddressRegisters(0x002aaa,0x1,0x0)) return 0;
  2568  05E1  3000               	movlw	0
  2569  05E2  0140               	movlb	0	; select bank0
  2570  05E3  00A3               	movwf	setAddressRegisters@addr+3
  2571  05E4  3000               	movlw	0
  2572  05E5  00A2               	movwf	setAddressRegisters@addr+2
  2573  05E6  302A               	movlw	42
  2574  05E7  00A1               	movwf	setAddressRegisters@addr+1
  2575  05E8  30AA               	movlw	170
  2576  05E9  00A0               	movwf	setAddressRegisters@addr
  2577  05EA  01A4               	clrf	setAddressRegisters@OE
  2578  05EB  0AA4               	incf	setAddressRegisters@OE,f
  2579  05EC  01A5               	clrf	setAddressRegisters@CE
  2580  05ED  3185  2500  3185   	fcall	_setAddressRegisters
  2581  05F0  3A00               	xorlw	0
  2582  05F1  1D03               	skipz
  2583  05F2  2DF4               	goto	u2071
  2584  05F3  2DF5               	goto	u2070
  2585  05F4                     u2071:
  2586  05F4  2DF6               	goto	l2486
  2587  05F5                     u2070:
  2588  05F5  2DD5               	goto	l2470
  2589  05F6                     l2486:
  2590                           
  2591                           ;source/flash.c: 167:     if (!sendOneByte(0x55)) return 0;
  2592  05F6  3055               	movlw	85
  2593  05F7  3187  27D4  3185   	fcall	_sendOneByte
  2594  05FA  3A00               	xorlw	0
  2595  05FB  1D03               	skipz
  2596  05FC  2DFE               	goto	u2081
  2597  05FD  2DFF               	goto	u2080
  2598  05FE                     u2081:
  2599  05FE  2E00               	goto	l2492
  2600  05FF                     u2080:
  2601  05FF  2DD5               	goto	l2470
  2602  0600                     l2492:
  2603                           
  2604                           ;source/flash.c: 168:     if (!setAddressRegisters(0x005555,0x1,0x0)) return 0;
  2605  0600  3000               	movlw	0
  2606  0601  0140               	movlb	0	; select bank0
  2607  0602  00A3               	movwf	setAddressRegisters@addr+3
  2608  0603  3000               	movlw	0
  2609  0604  00A2               	movwf	setAddressRegisters@addr+2
  2610  0605  3055               	movlw	85
  2611  0606  00A1               	movwf	setAddressRegisters@addr+1
  2612  0607  3055               	movlw	85
  2613  0608  00A0               	movwf	setAddressRegisters@addr
  2614  0609  01A4               	clrf	setAddressRegisters@OE
  2615  060A  0AA4               	incf	setAddressRegisters@OE,f
  2616  060B  01A5               	clrf	setAddressRegisters@CE
  2617  060C  3185  2500  3185   	fcall	_setAddressRegisters
  2618  060F  3A00               	xorlw	0
  2619  0610  1D03               	skipz
  2620  0611  2E13               	goto	u2091
  2621  0612  2E14               	goto	u2090
  2622  0613                     u2091:
  2623  0613  2E15               	goto	l2498
  2624  0614                     u2090:
  2625  0614  2DD5               	goto	l2470
  2626  0615                     l2498:
  2627                           
  2628                           ;source/flash.c: 169:     if (!sendOneByte(0x90)) return 0;
  2629  0615  3090               	movlw	144
  2630  0616  3187  27D4  3185   	fcall	_sendOneByte
  2631  0619  3A00               	xorlw	0
  2632  061A  1D03               	skipz
  2633  061B  2E1D               	goto	u2101
  2634  061C  2E1E               	goto	u2100
  2635  061D                     u2101:
  2636  061D  2E1F               	goto	l2504
  2637  061E                     u2100:
  2638  061E  2DD5               	goto	l2470
  2639  061F                     l2504:
  2640                           
  2641                           ;source/flash.c: 170:     return 1;
  2642  061F  3001               	movlw	1
  2643  0620                     l301:
  2644  0620  0008               	return
  2645  0621                     __end_of_softwareIdEntry:
  2646                           
  2647                           	psect	text6
  2648  048C                     __ptext6:	
  2649 ;; *************** function _readFlash *****************
  2650 ;; Defined at:
  2651 ;;		line 17 in file "source/flash.c"
  2652 ;; Parameters:    Size  Location     Type
  2653 ;;  addr            4   15[BANK0 ] unsigned long 
  2654 ;;  numBytes        2   19[BANK0 ] unsigned short 
  2655 ;;  retBytes        2   21[BANK0 ] PTR unsigned char 
  2656 ;;		 -> dataBuf(256), 
  2657 ;;  numRetBytes     1   23[BANK0 ] PTR unsigned short 
  2658 ;;		 -> numRetBytes(2), 
  2659 ;; Auto vars:     Size  Location     Type
  2660 ;;  length          2   28[BANK0 ] unsigned short 
  2661 ;;  bufPtr          2   26[BANK0 ] unsigned short 
  2662 ;; Return value:  Size  Location     Type
  2663 ;;                  1    wreg      unsigned char 
  2664 ;; Registers used:
  2665 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2666 ;; Tracked objects:
  2667 ;;		On entry : 0/0
  2668 ;;		On exit  : 0/0
  2669 ;;		Unchanged: 0/0
  2670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2671 ;;      Params:         0       9       0       0       0       0       0       0
  2672 ;;      Locals:         0       4       0       0       0       0       0       0
  2673 ;;      Temps:          0       2       0       0       0       0       0       0
  2674 ;;      Totals:         0      15       0       0       0       0       0       0
  2675 ;;Total ram usage:       15 bytes
  2676 ;; Hardware stack levels used: 1
  2677 ;; Hardware stack levels required when called: 4
  2678 ;; This function calls:
  2679 ;;		_clearAddressRegisters
  2680 ;;		_setAddressRegisters
  2681 ;; This function is called by:
  2682 ;;		_main
  2683 ;;		_readFlashChipId
  2684 ;; This function uses a non-reentrant model
  2685 ;;
  2686                           
  2687                           
  2688                           ;psect for function _readFlash
  2689  048C                     _readFlash:
  2690  048C                     l2366:	
  2691                           ;incstack = 0
  2692                           ; Regs used in _readFlash: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2693                           
  2694                           
  2695                           ;source/flash.c: 20:     unsigned short length,bufPtr;;source/flash.c: 23:     bufPtr=0;
  2696  048C  0140               	movlb	0	; select bank0
  2697  048D  01BA               	clrf	readFlash@bufPtr
  2698  048E  01BB               	clrf	readFlash@bufPtr+1
  2699  048F                     l2368:
  2700                           
  2701                           ;source/flash.c: 24:     length=numBytes;
  2702  048F  0834               	movf	readFlash@numBytes+1,w
  2703  0490  00BD               	movwf	readFlash@length+1
  2704  0491  0833               	movf	readFlash@numBytes,w
  2705  0492  00BC               	movwf	readFlash@length
  2706  0493                     l2370:
  2707                           
  2708                           ;source/flash.c: 27:     if (!setAddressRegisters(addr,0x0,0x0)) {
  2709  0493  0832               	movf	readFlash@addr+3,w
  2710  0494  00A3               	movwf	setAddressRegisters@addr+3
  2711  0495  0831               	movf	readFlash@addr+2,w
  2712  0496  00A2               	movwf	setAddressRegisters@addr+2
  2713  0497  0830               	movf	readFlash@addr+1,w
  2714  0498  00A1               	movwf	setAddressRegisters@addr+1
  2715  0499  082F               	movf	readFlash@addr,w
  2716  049A  00A0               	movwf	setAddressRegisters@addr
  2717  049B  01A4               	clrf	setAddressRegisters@OE
  2718  049C  01A5               	clrf	setAddressRegisters@CE
  2719  049D  3185  2500  3184   	fcall	_setAddressRegisters
  2720  04A0  3A00               	xorlw	0
  2721  04A1  1D03               	skipz
  2722  04A2  2CA4               	goto	u1911
  2723  04A3  2CA5               	goto	u1910
  2724  04A4                     u1911:
  2725  04A4  2CEC               	goto	l2400
  2726  04A5                     u1910:
  2727  04A5                     l2372:
  2728                           
  2729                           ;source/flash.c: 28:         *numRetBytes=0;
  2730  04A5  0140               	movlb	0	; select bank0
  2731  04A6  0837               	movf	readFlash@numRetBytes,w
  2732  04A7  0086               	movwf	6
  2733  04A8  0187               	clrf	7
  2734  04A9  3000               	movlw	0
  2735  04AA  3FC0               	movwi [0]fsr1
  2736  04AB  3FC1               	movwi [1]fsr1
  2737  04AC                     l2374:
  2738                           
  2739                           ;source/flash.c: 29:         return 0;
  2740  04AC  3000               	movlw	0
  2741  04AD  2CFF               	goto	l226
  2742  04AE                     l2378:
  2743                           
  2744                           ;source/flash.c: 35:         retBytes[bufPtr]=PORTB;
  2745  04AE  083A               	movf	readFlash@bufPtr,w
  2746  04AF  0735               	addwf	readFlash@retBytes,w
  2747  04B0  00B8               	movwf	??_readFlash
  2748  04B1  083B               	movf	readFlash@bufPtr+1,w
  2749  04B2  3D36               	addwfc	readFlash@retBytes+1,w
  2750  04B3  00B9               	movwf	??_readFlash+1
  2751  04B4  0838               	movf	??_readFlash,w
  2752  04B5  0086               	movwf	6
  2753  04B6  0839               	movf	??_readFlash+1,w
  2754  04B7  0087               	movwf	7
  2755  04B8  080D               	movf	13,w	;volatile
  2756  04B9  0081               	movwf	1
  2757  04BA                     l2380:
  2758                           
  2759                           ;source/flash.c: 36:         bufPtr++;
  2760  04BA  3001               	movlw	1
  2761  04BB  07BA               	addwf	readFlash@bufPtr,f
  2762  04BC  3000               	movlw	0
  2763  04BD  3DBB               	addwfc	readFlash@bufPtr+1,f
  2764  04BE                     l2382:
  2765                           
  2766                           ;source/flash.c: 37:         PORTA++;
  2767  04BE  3001               	movlw	1
  2768  04BF  00B8               	movwf	??_readFlash
  2769  04C0  0838               	movf	??_readFlash,w
  2770  04C1  078C               	addwf	12,f	;volatile
  2771  04C2                     l2384:
  2772                           
  2773                           ;source/flash.c: 38:         length--;
  2774  04C2  3001               	movlw	1
  2775  04C3  02BC               	subwf	readFlash@length,f
  2776  04C4  3000               	movlw	0
  2777  04C5  3BBD               	subwfb	readFlash@length+1,f
  2778  04C6                     l2386:
  2779                           
  2780                           ;source/flash.c: 39:         if (PORTA==0x00 && length>0) {
  2781  04C6  080C               	movf	12,w	;volatile
  2782  04C7  1D03               	btfss	3,2
  2783  04C8  2CCA               	goto	u1921
  2784  04C9  2CCB               	goto	u1920
  2785  04CA                     u1921:
  2786  04CA  2CEC               	goto	l2400
  2787  04CB                     u1920:
  2788  04CB                     l2388:
  2789  04CB  083C               	movf	readFlash@length,w
  2790  04CC  043D               	iorwf	readFlash@length+1,w
  2791  04CD  1903               	btfsc	3,2
  2792  04CE  2CD0               	goto	u1931
  2793  04CF  2CD1               	goto	u1930
  2794  04D0                     u1931:
  2795  04D0  2CEC               	goto	l2400
  2796  04D1                     u1930:
  2797  04D1                     l2390:
  2798                           
  2799                           ;source/flash.c: 40:             addr+=0x100;
  2800  04D1  3000               	movlw	0
  2801  04D2  07AF               	addwf	readFlash@addr,f
  2802  04D3  3001               	movlw	1
  2803  04D4  3DB0               	addwfc	readFlash@addr+1,f
  2804  04D5  3000               	movlw	0
  2805  04D6  3DB1               	addwfc	readFlash@addr+2,f
  2806  04D7  3000               	movlw	0
  2807  04D8  3DB2               	addwfc	readFlash@addr+3,f
  2808  04D9                     l2392:
  2809                           
  2810                           ;source/flash.c: 41:             if (!setAddressRegisters(addr,0x0,0x0)) {
  2811  04D9  0832               	movf	readFlash@addr+3,w
  2812  04DA  00A3               	movwf	setAddressRegisters@addr+3
  2813  04DB  0831               	movf	readFlash@addr+2,w
  2814  04DC  00A2               	movwf	setAddressRegisters@addr+2
  2815  04DD  0830               	movf	readFlash@addr+1,w
  2816  04DE  00A1               	movwf	setAddressRegisters@addr+1
  2817  04DF  082F               	movf	readFlash@addr,w
  2818  04E0  00A0               	movwf	setAddressRegisters@addr
  2819  04E1  01A4               	clrf	setAddressRegisters@OE
  2820  04E2  01A5               	clrf	setAddressRegisters@CE
  2821  04E3  3185  2500  3184   	fcall	_setAddressRegisters
  2822  04E6  3A00               	xorlw	0
  2823  04E7  1D03               	skipz
  2824  04E8  2CEA               	goto	u1941
  2825  04E9  2CEB               	goto	u1940
  2826  04EA                     u1941:
  2827  04EA  2CEC               	goto	l2400
  2828  04EB                     u1940:
  2829  04EB  2CA5               	goto	l2372
  2830  04EC                     l2400:
  2831                           
  2832                           ;source/flash.c: 33:     while (length>0) {
  2833  04EC  0140               	movlb	0	; select bank0
  2834  04ED  083C               	movf	readFlash@length,w
  2835  04EE  043D               	iorwf	readFlash@length+1,w
  2836  04EF  1D03               	btfss	3,2
  2837  04F0  2CF2               	goto	u1951
  2838  04F1  2CF3               	goto	u1950
  2839  04F2                     u1951:
  2840  04F2  2CAE               	goto	l2378
  2841  04F3                     u1950:
  2842  04F3                     l2402:
  2843                           
  2844                           ;source/flash.c: 47:     clearAddressRegisters();
  2845  04F3  3187  279F  3184   	fcall	_clearAddressRegisters
  2846  04F6                     l2404:
  2847                           
  2848                           ;source/flash.c: 48:     *numRetBytes=numBytes;
  2849  04F6  0140               	movlb	0	; select bank0
  2850  04F7  0837               	movf	readFlash@numRetBytes,w
  2851  04F8  0086               	movwf	6
  2852  04F9  0187               	clrf	7
  2853  04FA  0833               	movf	readFlash@numBytes,w
  2854  04FB  3FC0               	movwi [0]fsr1
  2855  04FC  0834               	movf	readFlash@numBytes+1,w
  2856  04FD  3FC1               	movwi [1]fsr1
  2857  04FE                     l2406:
  2858                           
  2859                           ;source/flash.c: 49:     return 1;
  2860  04FE  3001               	movlw	1
  2861  04FF                     l226:
  2862  04FF  0008               	return
  2863  0500                     __end_of_readFlash:
  2864                           
  2865                           	psect	text7
  2866  079F                     __ptext7:	
  2867 ;; *************** function _clearAddressRegisters *****************
  2868 ;; Defined at:
  2869 ;;		line 237 in file "source/flash.c"
  2870 ;; Parameters:    Size  Location     Type
  2871 ;;		None
  2872 ;; Auto vars:     Size  Location     Type
  2873 ;;		None
  2874 ;; Return value:  Size  Location     Type
  2875 ;;                  1    wreg      unsigned char 
  2876 ;; Registers used:
  2877 ;;		wreg, status,2, status,0, pclath, cstack
  2878 ;; Tracked objects:
  2879 ;;		On entry : 0/0
  2880 ;;		On exit  : 0/0
  2881 ;;		Unchanged: 0/0
  2882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2883 ;;      Params:         0       0       0       0       0       0       0       0
  2884 ;;      Locals:         0       0       0       0       0       0       0       0
  2885 ;;      Temps:          0       0       0       0       0       0       0       0
  2886 ;;      Totals:         0       0       0       0       0       0       0       0
  2887 ;;Total ram usage:        0 bytes
  2888 ;; Hardware stack levels used: 1
  2889 ;; Hardware stack levels required when called: 3
  2890 ;; This function calls:
  2891 ;;		_setAddressRegisters
  2892 ;; This function is called by:
  2893 ;;		_main
  2894 ;;		_readFlash
  2895 ;;		_writeFlash
  2896 ;; This function uses a non-reentrant model
  2897 ;;
  2898                           
  2899                           
  2900                           ;psect for function _clearAddressRegisters
  2901  079F                     _clearAddressRegisters:
  2902  079F                     l2324:	
  2903                           ;incstack = 0
  2904                           ; Regs used in _clearAddressRegisters: [wreg+status,2+status,0+pclath+cstack]
  2905                           
  2906                           
  2907                           ;source/flash.c: 240:     return setAddressRegisters(0x000000,0x1,0x1);
  2908  079F  3000               	movlw	0
  2909  07A0  0140               	movlb	0	; select bank0
  2910  07A1  00A3               	movwf	setAddressRegisters@addr+3
  2911  07A2  3000               	movlw	0
  2912  07A3  00A2               	movwf	setAddressRegisters@addr+2
  2913  07A4  3000               	movlw	0
  2914  07A5  00A1               	movwf	setAddressRegisters@addr+1
  2915  07A6  3000               	movlw	0
  2916  07A7  00A0               	movwf	setAddressRegisters@addr
  2917  07A8  01A4               	clrf	setAddressRegisters@OE
  2918  07A9  0AA4               	incf	setAddressRegisters@OE,f
  2919  07AA  01A5               	clrf	setAddressRegisters@CE
  2920  07AB  0AA5               	incf	setAddressRegisters@CE,f
  2921  07AC  3185  2500  3187   	fcall	_setAddressRegisters
  2922  07AF                     l330:
  2923  07AF  0008               	return
  2924  07B0                     __end_of_clearAddressRegisters:
  2925                           
  2926                           	psect	text8
  2927  0250                     __ptext8:	
  2928 ;; *************** function _eraseFlashSector *****************
  2929 ;; Defined at:
  2930 ;;		line 119 in file "source/flash.c"
  2931 ;; Parameters:    Size  Location     Type
  2932 ;;  addr            4   24[BANK0 ] unsigned long 
  2933 ;; Auto vars:     Size  Location     Type
  2934 ;;		None
  2935 ;; Return value:  Size  Location     Type
  2936 ;;                  1    wreg      unsigned char 
  2937 ;; Registers used:
  2938 ;;		wreg, status,2, status,0, pclath, cstack
  2939 ;; Tracked objects:
  2940 ;;		On entry : 0/0
  2941 ;;		On exit  : 0/0
  2942 ;;		Unchanged: 0/0
  2943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2944 ;;      Params:         0       4       0       0       0       0       0       0
  2945 ;;      Locals:         0       0       0       0       0       0       0       0
  2946 ;;      Temps:          0       1       0       0       0       0       0       0
  2947 ;;      Totals:         0       5       0       0       0       0       0       0
  2948 ;;Total ram usage:        5 bytes
  2949 ;; Hardware stack levels used: 1
  2950 ;; Hardware stack levels required when called: 4
  2951 ;; This function calls:
  2952 ;;		_sendOneByte
  2953 ;;		_setAddressRegisters
  2954 ;;		_waitPollData
  2955 ;; This function is called by:
  2956 ;;		_main
  2957 ;; This function uses a non-reentrant model
  2958 ;;
  2959                           
  2960                           
  2961                           ;psect for function _eraseFlashSector
  2962  0250                     _eraseFlashSector:
  2963  0250                     l2628:	
  2964                           ;incstack = 0
  2965                           ; Regs used in _eraseFlashSector: [wreg+status,2+status,0+pclath+cstack]
  2966                           
  2967                           
  2968                           ;source/flash.c: 123:     if (!setAddressRegisters(0x005555,0x1,0x0)) return 0;
  2969  0250  3000               	movlw	0
  2970  0251  0140               	movlb	0	; select bank0
  2971  0252  00A3               	movwf	setAddressRegisters@addr+3
  2972  0253  3000               	movlw	0
  2973  0254  00A2               	movwf	setAddressRegisters@addr+2
  2974  0255  3055               	movlw	85
  2975  0256  00A1               	movwf	setAddressRegisters@addr+1
  2976  0257  3055               	movlw	85
  2977  0258  00A0               	movwf	setAddressRegisters@addr
  2978  0259  01A4               	clrf	setAddressRegisters@OE
  2979  025A  0AA4               	incf	setAddressRegisters@OE,f
  2980  025B  01A5               	clrf	setAddressRegisters@CE
  2981  025C  3185  2500  3182   	fcall	_setAddressRegisters
  2982  025F  3A00               	xorlw	0
  2983  0260  1D03               	skipz
  2984  0261  2A63               	goto	u2241
  2985  0262  2A64               	goto	u2240
  2986  0263                     u2241:
  2987  0263  2A66               	goto	l2634
  2988  0264                     u2240:
  2989  0264                     l2630:
  2990  0264  3000               	movlw	0
  2991  0265  2B22               	goto	l276
  2992  0266                     l2634:
  2993                           
  2994                           ;source/flash.c: 124:     if (!sendOneByte(0xaa)) return 0;
  2995  0266  30AA               	movlw	170
  2996  0267  3187  27D4  3182   	fcall	_sendOneByte
  2997  026A  3A00               	xorlw	0
  2998  026B  1D03               	skipz
  2999  026C  2A6E               	goto	u2251
  3000  026D  2A6F               	goto	u2250
  3001  026E                     u2251:
  3002  026E  2A70               	goto	l2640
  3003  026F                     u2250:
  3004  026F  2A64               	goto	l2630
  3005  0270                     l2640:
  3006                           
  3007                           ;source/flash.c: 125:     if (!setAddressRegisters(0x002aaa,0x1,0x0)) return 0;
  3008  0270  3000               	movlw	0
  3009  0271  0140               	movlb	0	; select bank0
  3010  0272  00A3               	movwf	setAddressRegisters@addr+3
  3011  0273  3000               	movlw	0
  3012  0274  00A2               	movwf	setAddressRegisters@addr+2
  3013  0275  302A               	movlw	42
  3014  0276  00A1               	movwf	setAddressRegisters@addr+1
  3015  0277  30AA               	movlw	170
  3016  0278  00A0               	movwf	setAddressRegisters@addr
  3017  0279  01A4               	clrf	setAddressRegisters@OE
  3018  027A  0AA4               	incf	setAddressRegisters@OE,f
  3019  027B  01A5               	clrf	setAddressRegisters@CE
  3020  027C  3185  2500  3182   	fcall	_setAddressRegisters
  3021  027F  3A00               	xorlw	0
  3022  0280  1D03               	skipz
  3023  0281  2A83               	goto	u2261
  3024  0282  2A84               	goto	u2260
  3025  0283                     u2261:
  3026  0283  2A85               	goto	l2646
  3027  0284                     u2260:
  3028  0284  2A64               	goto	l2630
  3029  0285                     l2646:
  3030                           
  3031                           ;source/flash.c: 126:     if (!sendOneByte(0x55)) return 0;
  3032  0285  3055               	movlw	85
  3033  0286  3187  27D4  3182   	fcall	_sendOneByte
  3034  0289  3A00               	xorlw	0
  3035  028A  1D03               	skipz
  3036  028B  2A8D               	goto	u2271
  3037  028C  2A8E               	goto	u2270
  3038  028D                     u2271:
  3039  028D  2A8F               	goto	l2652
  3040  028E                     u2270:
  3041  028E  2A64               	goto	l2630
  3042  028F                     l2652:
  3043                           
  3044                           ;source/flash.c: 127:     if (!setAddressRegisters(0x005555,0x1,0x0)) return 0;
  3045  028F  3000               	movlw	0
  3046  0290  0140               	movlb	0	; select bank0
  3047  0291  00A3               	movwf	setAddressRegisters@addr+3
  3048  0292  3000               	movlw	0
  3049  0293  00A2               	movwf	setAddressRegisters@addr+2
  3050  0294  3055               	movlw	85
  3051  0295  00A1               	movwf	setAddressRegisters@addr+1
  3052  0296  3055               	movlw	85
  3053  0297  00A0               	movwf	setAddressRegisters@addr
  3054  0298  01A4               	clrf	setAddressRegisters@OE
  3055  0299  0AA4               	incf	setAddressRegisters@OE,f
  3056  029A  01A5               	clrf	setAddressRegisters@CE
  3057  029B  3185  2500  3182   	fcall	_setAddressRegisters
  3058  029E  3A00               	xorlw	0
  3059  029F  1D03               	skipz
  3060  02A0  2AA2               	goto	u2281
  3061  02A1  2AA3               	goto	u2280
  3062  02A2                     u2281:
  3063  02A2  2AA4               	goto	l2658
  3064  02A3                     u2280:
  3065  02A3  2A64               	goto	l2630
  3066  02A4                     l2658:
  3067                           
  3068                           ;source/flash.c: 128:     if (!sendOneByte(0x80)) return 0;
  3069  02A4  3080               	movlw	128
  3070  02A5  3187  27D4  3182   	fcall	_sendOneByte
  3071  02A8  3A00               	xorlw	0
  3072  02A9  1D03               	skipz
  3073  02AA  2AAC               	goto	u2291
  3074  02AB  2AAD               	goto	u2290
  3075  02AC                     u2291:
  3076  02AC  2AAE               	goto	l2664
  3077  02AD                     u2290:
  3078  02AD  2A64               	goto	l2630
  3079  02AE                     l2664:
  3080                           
  3081                           ;source/flash.c: 129:     if (!setAddressRegisters(0x005555,0x1,0x0)) return 0;
  3082  02AE  3000               	movlw	0
  3083  02AF  0140               	movlb	0	; select bank0
  3084  02B0  00A3               	movwf	setAddressRegisters@addr+3
  3085  02B1  3000               	movlw	0
  3086  02B2  00A2               	movwf	setAddressRegisters@addr+2
  3087  02B3  3055               	movlw	85
  3088  02B4  00A1               	movwf	setAddressRegisters@addr+1
  3089  02B5  3055               	movlw	85
  3090  02B6  00A0               	movwf	setAddressRegisters@addr
  3091  02B7  01A4               	clrf	setAddressRegisters@OE
  3092  02B8  0AA4               	incf	setAddressRegisters@OE,f
  3093  02B9  01A5               	clrf	setAddressRegisters@CE
  3094  02BA  3185  2500  3182   	fcall	_setAddressRegisters
  3095  02BD  3A00               	xorlw	0
  3096  02BE  1D03               	skipz
  3097  02BF  2AC1               	goto	u2301
  3098  02C0  2AC2               	goto	u2300
  3099  02C1                     u2301:
  3100  02C1  2AC3               	goto	l2670
  3101  02C2                     u2300:
  3102  02C2  2A64               	goto	l2630
  3103  02C3                     l2670:
  3104                           
  3105                           ;source/flash.c: 130:     if (!sendOneByte(0xaa)) return 0;
  3106  02C3  30AA               	movlw	170
  3107  02C4  3187  27D4  3182   	fcall	_sendOneByte
  3108  02C7  3A00               	xorlw	0
  3109  02C8  1D03               	skipz
  3110  02C9  2ACB               	goto	u2311
  3111  02CA  2ACC               	goto	u2310
  3112  02CB                     u2311:
  3113  02CB  2ACD               	goto	l2676
  3114  02CC                     u2310:
  3115  02CC  2A64               	goto	l2630
  3116  02CD                     l2676:
  3117                           
  3118                           ;source/flash.c: 131:     if (!setAddressRegisters(0x002aaa,0x1,0x0)) return 0;
  3119  02CD  3000               	movlw	0
  3120  02CE  0140               	movlb	0	; select bank0
  3121  02CF  00A3               	movwf	setAddressRegisters@addr+3
  3122  02D0  3000               	movlw	0
  3123  02D1  00A2               	movwf	setAddressRegisters@addr+2
  3124  02D2  302A               	movlw	42
  3125  02D3  00A1               	movwf	setAddressRegisters@addr+1
  3126  02D4  30AA               	movlw	170
  3127  02D5  00A0               	movwf	setAddressRegisters@addr
  3128  02D6  01A4               	clrf	setAddressRegisters@OE
  3129  02D7  0AA4               	incf	setAddressRegisters@OE,f
  3130  02D8  01A5               	clrf	setAddressRegisters@CE
  3131  02D9  3185  2500  3182   	fcall	_setAddressRegisters
  3132  02DC  3A00               	xorlw	0
  3133  02DD  1D03               	skipz
  3134  02DE  2AE0               	goto	u2321
  3135  02DF  2AE1               	goto	u2320
  3136  02E0                     u2321:
  3137  02E0  2AE2               	goto	l2682
  3138  02E1                     u2320:
  3139  02E1  2A64               	goto	l2630
  3140  02E2                     l2682:
  3141                           
  3142                           ;source/flash.c: 132:     if (!sendOneByte(0x55)) return 0;
  3143  02E2  3055               	movlw	85
  3144  02E3  3187  27D4  3182   	fcall	_sendOneByte
  3145  02E6  3A00               	xorlw	0
  3146  02E7  1D03               	skipz
  3147  02E8  2AEA               	goto	u2331
  3148  02E9  2AEB               	goto	u2330
  3149  02EA                     u2331:
  3150  02EA  2AEC               	goto	l2688
  3151  02EB                     u2330:
  3152  02EB  2A64               	goto	l2630
  3153  02EC                     l2688:
  3154                           
  3155                           ;source/flash.c: 133:     if (!setAddressRegisters(addr,0x1,0x0)) return 0;
  3156  02EC  0140               	movlb	0	; select bank0
  3157  02ED  083B               	movf	eraseFlashSector@addr+3,w
  3158  02EE  00A3               	movwf	setAddressRegisters@addr+3
  3159  02EF  083A               	movf	eraseFlashSector@addr+2,w
  3160  02F0  00A2               	movwf	setAddressRegisters@addr+2
  3161  02F1  0839               	movf	eraseFlashSector@addr+1,w
  3162  02F2  00A1               	movwf	setAddressRegisters@addr+1
  3163  02F3  0838               	movf	eraseFlashSector@addr,w
  3164  02F4  00A0               	movwf	setAddressRegisters@addr
  3165  02F5  01A4               	clrf	setAddressRegisters@OE
  3166  02F6  0AA4               	incf	setAddressRegisters@OE,f
  3167  02F7  01A5               	clrf	setAddressRegisters@CE
  3168  02F8  3185  2500  3182   	fcall	_setAddressRegisters
  3169  02FB  3A00               	xorlw	0
  3170  02FC  1D03               	skipz
  3171  02FD  2AFF               	goto	u2341
  3172  02FE  2B00               	goto	u2340
  3173  02FF                     u2341:
  3174  02FF  2B01               	goto	l2694
  3175  0300                     u2340:
  3176  0300  2A64               	goto	l2630
  3177  0301                     l2694:
  3178                           
  3179                           ;source/flash.c: 134:     if (!sendOneByte(0x30)) return 0;
  3180  0301  3030               	movlw	48
  3181  0302  3187  27D4  3182   	fcall	_sendOneByte
  3182  0305  3A00               	xorlw	0
  3183  0306  1D03               	skipz
  3184  0307  2B09               	goto	u2351
  3185  0308  2B0A               	goto	u2350
  3186  0309                     u2351:
  3187  0309  2B0B               	goto	l2700
  3188  030A                     u2350:
  3189  030A  2A64               	goto	l2630
  3190  030B                     l2700:
  3191                           
  3192                           ;source/flash.c: 135:     if (!waitPollData(0x000000,0xff)) return 0;
  3193  030B  3000               	movlw	0
  3194  030C  0140               	movlb	0	; select bank0
  3195  030D  00B2               	movwf	waitPollData@addr+3
  3196  030E  3000               	movlw	0
  3197  030F  00B1               	movwf	waitPollData@addr+2
  3198  0310  3000               	movlw	0
  3199  0311  00B0               	movwf	waitPollData@addr+1
  3200  0312  3000               	movlw	0
  3201  0313  00AF               	movwf	waitPollData@addr
  3202  0314  30FF               	movlw	255
  3203  0315  00BC               	movwf	??_eraseFlashSector
  3204  0316  083C               	movf	??_eraseFlashSector,w
  3205  0317  00B3               	movwf	waitPollData@origData
  3206  0318  3186  2621  3182   	fcall	_waitPollData
  3207  031B  3A00               	xorlw	0
  3208  031C  1D03               	skipz
  3209  031D  2B1F               	goto	u2361
  3210  031E  2B20               	goto	u2360
  3211  031F                     u2361:
  3212  031F  2B21               	goto	l2706
  3213  0320                     u2360:
  3214  0320  2A64               	goto	l2630
  3215  0321                     l2706:
  3216                           
  3217                           ;source/flash.c: 136:     return 1;
  3218  0321  3001               	movlw	1
  3219  0322                     l276:
  3220  0322  0008               	return
  3221  0323                     __end_of_eraseFlashSector:
  3222                           
  3223                           	psect	text9
  3224  0323                     __ptext9:	
  3225 ;; *************** function _eraseFlash *****************
  3226 ;; Defined at:
  3227 ;;		line 99 in file "source/flash.c"
  3228 ;; Parameters:    Size  Location     Type
  3229 ;;		None
  3230 ;; Auto vars:     Size  Location     Type
  3231 ;;		None
  3232 ;; Return value:  Size  Location     Type
  3233 ;;                  1    wreg      unsigned char 
  3234 ;; Registers used:
  3235 ;;		wreg, status,2, status,0, pclath, cstack
  3236 ;; Tracked objects:
  3237 ;;		On entry : 0/0
  3238 ;;		On exit  : 0/0
  3239 ;;		Unchanged: 0/0
  3240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3241 ;;      Params:         0       0       0       0       0       0       0       0
  3242 ;;      Locals:         0       0       0       0       0       0       0       0
  3243 ;;      Temps:          0       1       0       0       0       0       0       0
  3244 ;;      Totals:         0       1       0       0       0       0       0       0
  3245 ;;Total ram usage:        1 bytes
  3246 ;; Hardware stack levels used: 1
  3247 ;; Hardware stack levels required when called: 4
  3248 ;; This function calls:
  3249 ;;		_sendOneByte
  3250 ;;		_setAddressRegisters
  3251 ;;		_waitPollData
  3252 ;; This function is called by:
  3253 ;;		_main
  3254 ;; This function uses a non-reentrant model
  3255 ;;
  3256                           
  3257                           
  3258                           ;psect for function _eraseFlash
  3259  0323                     _eraseFlash:
  3260  0323                     l2732:	
  3261                           ;incstack = 0
  3262                           ; Regs used in _eraseFlash: [wreg+status,2+status,0+pclath+cstack]
  3263                           
  3264                           
  3265                           ;source/flash.c: 103:     if (!setAddressRegisters(0x005555,0x1,0x0)) return 0;
  3266  0323  3000               	movlw	0
  3267  0324  0140               	movlb	0	; select bank0
  3268  0325  00A3               	movwf	setAddressRegisters@addr+3
  3269  0326  3000               	movlw	0
  3270  0327  00A2               	movwf	setAddressRegisters@addr+2
  3271  0328  3055               	movlw	85
  3272  0329  00A1               	movwf	setAddressRegisters@addr+1
  3273  032A  3055               	movlw	85
  3274  032B  00A0               	movwf	setAddressRegisters@addr
  3275  032C  01A4               	clrf	setAddressRegisters@OE
  3276  032D  0AA4               	incf	setAddressRegisters@OE,f
  3277  032E  01A5               	clrf	setAddressRegisters@CE
  3278  032F  3185  2500  3183   	fcall	_setAddressRegisters
  3279  0332  3A00               	xorlw	0
  3280  0333  1D03               	skipz
  3281  0334  2B36               	goto	u2401
  3282  0335  2B37               	goto	u2400
  3283  0336                     u2401:
  3284  0336  2B39               	goto	l2738
  3285  0337                     u2400:
  3286  0337                     l2734:
  3287  0337  3000               	movlw	0
  3288  0338  2BF5               	goto	l260
  3289  0339                     l2738:
  3290                           
  3291                           ;source/flash.c: 104:     if (!sendOneByte(0xaa)) return 0;
  3292  0339  30AA               	movlw	170
  3293  033A  3187  27D4  3183   	fcall	_sendOneByte
  3294  033D  3A00               	xorlw	0
  3295  033E  1D03               	skipz
  3296  033F  2B41               	goto	u2411
  3297  0340  2B42               	goto	u2410
  3298  0341                     u2411:
  3299  0341  2B43               	goto	l2744
  3300  0342                     u2410:
  3301  0342  2B37               	goto	l2734
  3302  0343                     l2744:
  3303                           
  3304                           ;source/flash.c: 105:     if (!setAddressRegisters(0x002aaa,0x1,0x0)) return 0;
  3305  0343  3000               	movlw	0
  3306  0344  0140               	movlb	0	; select bank0
  3307  0345  00A3               	movwf	setAddressRegisters@addr+3
  3308  0346  3000               	movlw	0
  3309  0347  00A2               	movwf	setAddressRegisters@addr+2
  3310  0348  302A               	movlw	42
  3311  0349  00A1               	movwf	setAddressRegisters@addr+1
  3312  034A  30AA               	movlw	170
  3313  034B  00A0               	movwf	setAddressRegisters@addr
  3314  034C  01A4               	clrf	setAddressRegisters@OE
  3315  034D  0AA4               	incf	setAddressRegisters@OE,f
  3316  034E  01A5               	clrf	setAddressRegisters@CE
  3317  034F  3185  2500  3183   	fcall	_setAddressRegisters
  3318  0352  3A00               	xorlw	0
  3319  0353  1D03               	skipz
  3320  0354  2B56               	goto	u2421
  3321  0355  2B57               	goto	u2420
  3322  0356                     u2421:
  3323  0356  2B58               	goto	l2750
  3324  0357                     u2420:
  3325  0357  2B37               	goto	l2734
  3326  0358                     l2750:
  3327                           
  3328                           ;source/flash.c: 106:     if (!sendOneByte(0x55)) return 0;
  3329  0358  3055               	movlw	85
  3330  0359  3187  27D4  3183   	fcall	_sendOneByte
  3331  035C  3A00               	xorlw	0
  3332  035D  1D03               	skipz
  3333  035E  2B60               	goto	u2431
  3334  035F  2B61               	goto	u2430
  3335  0360                     u2431:
  3336  0360  2B62               	goto	l2756
  3337  0361                     u2430:
  3338  0361  2B37               	goto	l2734
  3339  0362                     l2756:
  3340                           
  3341                           ;source/flash.c: 107:     if (!setAddressRegisters(0x005555,0x1,0x0)) return 0;
  3342  0362  3000               	movlw	0
  3343  0363  0140               	movlb	0	; select bank0
  3344  0364  00A3               	movwf	setAddressRegisters@addr+3
  3345  0365  3000               	movlw	0
  3346  0366  00A2               	movwf	setAddressRegisters@addr+2
  3347  0367  3055               	movlw	85
  3348  0368  00A1               	movwf	setAddressRegisters@addr+1
  3349  0369  3055               	movlw	85
  3350  036A  00A0               	movwf	setAddressRegisters@addr
  3351  036B  01A4               	clrf	setAddressRegisters@OE
  3352  036C  0AA4               	incf	setAddressRegisters@OE,f
  3353  036D  01A5               	clrf	setAddressRegisters@CE
  3354  036E  3185  2500  3183   	fcall	_setAddressRegisters
  3355  0371  3A00               	xorlw	0
  3356  0372  1D03               	skipz
  3357  0373  2B75               	goto	u2441
  3358  0374  2B76               	goto	u2440
  3359  0375                     u2441:
  3360  0375  2B77               	goto	l2762
  3361  0376                     u2440:
  3362  0376  2B37               	goto	l2734
  3363  0377                     l2762:
  3364                           
  3365                           ;source/flash.c: 108:     if (!sendOneByte(0x80)) return 0;
  3366  0377  3080               	movlw	128
  3367  0378  3187  27D4  3183   	fcall	_sendOneByte
  3368  037B  3A00               	xorlw	0
  3369  037C  1D03               	skipz
  3370  037D  2B7F               	goto	u2451
  3371  037E  2B80               	goto	u2450
  3372  037F                     u2451:
  3373  037F  2B81               	goto	l2768
  3374  0380                     u2450:
  3375  0380  2B37               	goto	l2734
  3376  0381                     l2768:
  3377                           
  3378                           ;source/flash.c: 109:     if (!setAddressRegisters(0x005555,0x1,0x0)) return 0;
  3379  0381  3000               	movlw	0
  3380  0382  0140               	movlb	0	; select bank0
  3381  0383  00A3               	movwf	setAddressRegisters@addr+3
  3382  0384  3000               	movlw	0
  3383  0385  00A2               	movwf	setAddressRegisters@addr+2
  3384  0386  3055               	movlw	85
  3385  0387  00A1               	movwf	setAddressRegisters@addr+1
  3386  0388  3055               	movlw	85
  3387  0389  00A0               	movwf	setAddressRegisters@addr
  3388  038A  01A4               	clrf	setAddressRegisters@OE
  3389  038B  0AA4               	incf	setAddressRegisters@OE,f
  3390  038C  01A5               	clrf	setAddressRegisters@CE
  3391  038D  3185  2500  3183   	fcall	_setAddressRegisters
  3392  0390  3A00               	xorlw	0
  3393  0391  1D03               	skipz
  3394  0392  2B94               	goto	u2461
  3395  0393  2B95               	goto	u2460
  3396  0394                     u2461:
  3397  0394  2B96               	goto	l2774
  3398  0395                     u2460:
  3399  0395  2B37               	goto	l2734
  3400  0396                     l2774:
  3401                           
  3402                           ;source/flash.c: 110:     if (!sendOneByte(0xaa)) return 0;
  3403  0396  30AA               	movlw	170
  3404  0397  3187  27D4  3183   	fcall	_sendOneByte
  3405  039A  3A00               	xorlw	0
  3406  039B  1D03               	skipz
  3407  039C  2B9E               	goto	u2471
  3408  039D  2B9F               	goto	u2470
  3409  039E                     u2471:
  3410  039E  2BA0               	goto	l2780
  3411  039F                     u2470:
  3412  039F  2B37               	goto	l2734
  3413  03A0                     l2780:
  3414                           
  3415                           ;source/flash.c: 111:     if (!setAddressRegisters(0x002aaa,0x1,0x0)) return 0;
  3416  03A0  3000               	movlw	0
  3417  03A1  0140               	movlb	0	; select bank0
  3418  03A2  00A3               	movwf	setAddressRegisters@addr+3
  3419  03A3  3000               	movlw	0
  3420  03A4  00A2               	movwf	setAddressRegisters@addr+2
  3421  03A5  302A               	movlw	42
  3422  03A6  00A1               	movwf	setAddressRegisters@addr+1
  3423  03A7  30AA               	movlw	170
  3424  03A8  00A0               	movwf	setAddressRegisters@addr
  3425  03A9  01A4               	clrf	setAddressRegisters@OE
  3426  03AA  0AA4               	incf	setAddressRegisters@OE,f
  3427  03AB  01A5               	clrf	setAddressRegisters@CE
  3428  03AC  3185  2500  3183   	fcall	_setAddressRegisters
  3429  03AF  3A00               	xorlw	0
  3430  03B0  1D03               	skipz
  3431  03B1  2BB3               	goto	u2481
  3432  03B2  2BB4               	goto	u2480
  3433  03B3                     u2481:
  3434  03B3  2BB5               	goto	l2786
  3435  03B4                     u2480:
  3436  03B4  2B37               	goto	l2734
  3437  03B5                     l2786:
  3438                           
  3439                           ;source/flash.c: 112:     if (!sendOneByte(0x55)) return 0;
  3440  03B5  3055               	movlw	85
  3441  03B6  3187  27D4  3183   	fcall	_sendOneByte
  3442  03B9  3A00               	xorlw	0
  3443  03BA  1D03               	skipz
  3444  03BB  2BBD               	goto	u2491
  3445  03BC  2BBE               	goto	u2490
  3446  03BD                     u2491:
  3447  03BD  2BBF               	goto	l2792
  3448  03BE                     u2490:
  3449  03BE  2B37               	goto	l2734
  3450  03BF                     l2792:
  3451                           
  3452                           ;source/flash.c: 113:     if (!setAddressRegisters(0x005555,0x1,0x0)) return 0;
  3453  03BF  3000               	movlw	0
  3454  03C0  0140               	movlb	0	; select bank0
  3455  03C1  00A3               	movwf	setAddressRegisters@addr+3
  3456  03C2  3000               	movlw	0
  3457  03C3  00A2               	movwf	setAddressRegisters@addr+2
  3458  03C4  3055               	movlw	85
  3459  03C5  00A1               	movwf	setAddressRegisters@addr+1
  3460  03C6  3055               	movlw	85
  3461  03C7  00A0               	movwf	setAddressRegisters@addr
  3462  03C8  01A4               	clrf	setAddressRegisters@OE
  3463  03C9  0AA4               	incf	setAddressRegisters@OE,f
  3464  03CA  01A5               	clrf	setAddressRegisters@CE
  3465  03CB  3185  2500  3183   	fcall	_setAddressRegisters
  3466  03CE  3A00               	xorlw	0
  3467  03CF  1D03               	skipz
  3468  03D0  2BD2               	goto	u2501
  3469  03D1  2BD3               	goto	u2500
  3470  03D2                     u2501:
  3471  03D2  2BD4               	goto	l2798
  3472  03D3                     u2500:
  3473  03D3  2B37               	goto	l2734
  3474  03D4                     l2798:
  3475                           
  3476                           ;source/flash.c: 114:     if (!sendOneByte(0x10)) return 0;
  3477  03D4  3010               	movlw	16
  3478  03D5  3187  27D4  3183   	fcall	_sendOneByte
  3479  03D8  3A00               	xorlw	0
  3480  03D9  1D03               	skipz
  3481  03DA  2BDC               	goto	u2511
  3482  03DB  2BDD               	goto	u2510
  3483  03DC                     u2511:
  3484  03DC  2BDE               	goto	l2804
  3485  03DD                     u2510:
  3486  03DD  2B37               	goto	l2734
  3487  03DE                     l2804:
  3488                           
  3489                           ;source/flash.c: 115:     if (!waitPollData(0x000000,0xff)) return 0;
  3490  03DE  3000               	movlw	0
  3491  03DF  0140               	movlb	0	; select bank0
  3492  03E0  00B2               	movwf	waitPollData@addr+3
  3493  03E1  3000               	movlw	0
  3494  03E2  00B1               	movwf	waitPollData@addr+2
  3495  03E3  3000               	movlw	0
  3496  03E4  00B0               	movwf	waitPollData@addr+1
  3497  03E5  3000               	movlw	0
  3498  03E6  00AF               	movwf	waitPollData@addr
  3499  03E7  30FF               	movlw	255
  3500  03E8  00B8               	movwf	??_eraseFlash
  3501  03E9  0838               	movf	??_eraseFlash,w
  3502  03EA  00B3               	movwf	waitPollData@origData
  3503  03EB  3186  2621  3183   	fcall	_waitPollData
  3504  03EE  3A00               	xorlw	0
  3505  03EF  1D03               	skipz
  3506  03F0  2BF2               	goto	u2521
  3507  03F1  2BF3               	goto	u2520
  3508  03F2                     u2521:
  3509  03F2  2BF4               	goto	l2810
  3510  03F3                     u2520:
  3511  03F3  2B37               	goto	l2734
  3512  03F4                     l2810:
  3513                           
  3514                           ;source/flash.c: 116:     return 1;
  3515  03F4  3001               	movlw	1
  3516  03F5                     l260:
  3517  03F5  0008               	return
  3518  03F6                     __end_of_eraseFlash:
  3519                           
  3520                           	psect	text10
  3521  0621                     __ptext10:	
  3522 ;; *************** function _waitPollData *****************
  3523 ;; Defined at:
  3524 ;;		line 139 in file "source/flash.c"
  3525 ;; Parameters:    Size  Location     Type
  3526 ;;  addr            4   15[BANK0 ] unsigned long 
  3527 ;;  origData        1   19[BANK0 ] unsigned char 
  3528 ;; Auto vars:     Size  Location     Type
  3529 ;;  readData        1   23[BANK0 ] unsigned char 
  3530 ;;  done            1   22[BANK0 ] unsigned char 
  3531 ;; Return value:  Size  Location     Type
  3532 ;;                  1    wreg      unsigned char 
  3533 ;; Registers used:
  3534 ;;		wreg, status,2, status,0, pclath, cstack
  3535 ;; Tracked objects:
  3536 ;;		On entry : 0/0
  3537 ;;		On exit  : 0/0
  3538 ;;		Unchanged: 0/0
  3539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3540 ;;      Params:         0       5       0       0       0       0       0       0
  3541 ;;      Locals:         0       2       0       0       0       0       0       0
  3542 ;;      Temps:          0       2       0       0       0       0       0       0
  3543 ;;      Totals:         0       9       0       0       0       0       0       0
  3544 ;;Total ram usage:        9 bytes
  3545 ;; Hardware stack levels used: 1
  3546 ;; Hardware stack levels required when called: 3
  3547 ;; This function calls:
  3548 ;;		_setAddressRegisters
  3549 ;; This function is called by:
  3550 ;;		_writeOneByte
  3551 ;;		_eraseFlash
  3552 ;;		_eraseFlashSector
  3553 ;; This function uses a non-reentrant model
  3554 ;;
  3555                           
  3556                           
  3557                           ;psect for function _waitPollData
  3558  0621                     _waitPollData:
  3559  0621                     l2340:	
  3560                           ;incstack = 0
  3561                           ; Regs used in _waitPollData: [wreg+status,2+status,0+pclath+cstack]
  3562                           
  3563                           
  3564                           ;source/flash.c: 143:     unsigned char done=0;
  3565  0621  0140               	movlb	0	; select bank0
  3566  0622  01B6               	clrf	waitPollData@done
  3567                           
  3568                           ;source/flash.c: 146:     while (!done) {
  3569  0623  2E61               	goto	l2360
  3570  0624                     l2342:
  3571                           
  3572                           ;source/flash.c: 148:         if (!setAddressRegisters(addr,0x0,0x0)) return 0;
  3573  0624  0832               	movf	waitPollData@addr+3,w
  3574  0625  00A3               	movwf	setAddressRegisters@addr+3
  3575  0626  0831               	movf	waitPollData@addr+2,w
  3576  0627  00A2               	movwf	setAddressRegisters@addr+2
  3577  0628  0830               	movf	waitPollData@addr+1,w
  3578  0629  00A1               	movwf	setAddressRegisters@addr+1
  3579  062A  082F               	movf	waitPollData@addr,w
  3580  062B  00A0               	movwf	setAddressRegisters@addr
  3581  062C  01A4               	clrf	setAddressRegisters@OE
  3582  062D  01A5               	clrf	setAddressRegisters@CE
  3583  062E  3185  2500  3186   	fcall	_setAddressRegisters
  3584  0631  3A00               	xorlw	0
  3585  0632  1D03               	skipz
  3586  0633  2E35               	goto	u1871
  3587  0634  2E36               	goto	u1870
  3588  0635                     u1871:
  3589  0635  2E38               	goto	l2348
  3590  0636                     u1870:
  3591  0636                     l2344:
  3592  0636  3000               	movlw	0
  3593  0637  2E67               	goto	l294
  3594  0638                     l2348:
  3595                           
  3596                           ;source/flash.c: 150:         readData=PORTB;
  3597  0638  0140               	movlb	0	; select bank0
  3598  0639  080D               	movf	13,w	;volatile
  3599  063A  00B4               	movwf	??_waitPollData
  3600  063B  0834               	movf	??_waitPollData,w
  3601  063C  00B7               	movwf	waitPollData@readData
  3602  063D                     l2350:
  3603                           
  3604                           ;source/flash.c: 152:         if (!setAddressRegisters(addr,0x1,0x1)) return 0;
  3605  063D  0832               	movf	waitPollData@addr+3,w
  3606  063E  00A3               	movwf	setAddressRegisters@addr+3
  3607  063F  0831               	movf	waitPollData@addr+2,w
  3608  0640  00A2               	movwf	setAddressRegisters@addr+2
  3609  0641  0830               	movf	waitPollData@addr+1,w
  3610  0642  00A1               	movwf	setAddressRegisters@addr+1
  3611  0643  082F               	movf	waitPollData@addr,w
  3612  0644  00A0               	movwf	setAddressRegisters@addr
  3613  0645  01A4               	clrf	setAddressRegisters@OE
  3614  0646  0AA4               	incf	setAddressRegisters@OE,f
  3615  0647  01A5               	clrf	setAddressRegisters@CE
  3616  0648  0AA5               	incf	setAddressRegisters@CE,f
  3617  0649  3185  2500  3186   	fcall	_setAddressRegisters
  3618  064C  3A00               	xorlw	0
  3619  064D  1D03               	skipz
  3620  064E  2E50               	goto	u1881
  3621  064F  2E51               	goto	u1880
  3622  0650                     u1881:
  3623  0650  2E52               	goto	l2356
  3624  0651                     u1880:
  3625  0651  2E36               	goto	l2344
  3626  0652                     l2356:
  3627                           
  3628                           ;source/flash.c: 154:         if ((readData & 0x80) == (origData & 0x80)) done=1;
  3629  0652  3080               	movlw	128
  3630  0653  0140               	movlb	0	; select bank0
  3631  0654  0533               	andwf	waitPollData@origData,w
  3632  0655  00B4               	movwf	??_waitPollData
  3633  0656  3080               	movlw	128
  3634  0657  0537               	andwf	waitPollData@readData,w
  3635  0658  00B5               	movwf	??_waitPollData+1
  3636  0659  0835               	movf	??_waitPollData+1,w
  3637  065A  0634               	xorwf	??_waitPollData,w
  3638  065B  1D03               	skipz
  3639  065C  2E5E               	goto	u1891
  3640  065D  2E5F               	goto	u1890
  3641  065E                     u1891:
  3642  065E  2E61               	goto	l2360
  3643  065F                     u1890:
  3644  065F                     l2358:
  3645  065F  01B6               	clrf	waitPollData@done
  3646  0660  0AB6               	incf	waitPollData@done,f
  3647  0661                     l2360:
  3648                           
  3649                           ;source/flash.c: 146:     while (!done) {
  3650  0661  0836               	movf	waitPollData@done,w
  3651  0662  1903               	btfsc	3,2
  3652  0663  2E65               	goto	u1901
  3653  0664  2E66               	goto	u1900
  3654  0665                     u1901:
  3655  0665  2E24               	goto	l2342
  3656  0666                     u1900:
  3657  0666                     l2362:
  3658                           
  3659                           ;source/flash.c: 157:     return 1;
  3660  0666  3001               	movlw	1
  3661  0667                     l294:
  3662  0667  0008               	return
  3663  0668                     __end_of_waitPollData:
  3664                           
  3665                           	psect	text11
  3666  0500                     __ptext11:	
  3667 ;; *************** function _setAddressRegisters *****************
  3668 ;; Defined at:
  3669 ;;		line 205 in file "source/flash.c"
  3670 ;; Parameters:    Size  Location     Type
  3671 ;;  addr            4    0[BANK0 ] unsigned long 
  3672 ;;  OE              1    4[BANK0 ] unsigned char 
  3673 ;;  CE              1    5[BANK0 ] unsigned char 
  3674 ;; Auto vars:     Size  Location     Type
  3675 ;;  mask            4   10[BANK0 ] unsigned long 
  3676 ;;  i               1   14[BANK0 ] unsigned char 
  3677 ;;  done            1    0        unsigned char 
  3678 ;; Return value:  Size  Location     Type
  3679 ;;                  1    wreg      unsigned char 
  3680 ;; Registers used:
  3681 ;;		wreg, status,2, status,0
  3682 ;; Tracked objects:
  3683 ;;		On entry : 0/0
  3684 ;;		On exit  : 0/0
  3685 ;;		Unchanged: 0/0
  3686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3687 ;;      Params:         0       6       0       0       0       0       0       0
  3688 ;;      Locals:         0       5       0       0       0       0       0       0
  3689 ;;      Temps:          0       4       0       0       0       0       0       0
  3690 ;;      Totals:         0      15       0       0       0       0       0       0
  3691 ;;Total ram usage:       15 bytes
  3692 ;; Hardware stack levels used: 1
  3693 ;; Hardware stack levels required when called: 2
  3694 ;; This function calls:
  3695 ;;		Nothing
  3696 ;; This function is called by:
  3697 ;;		_readFlash
  3698 ;;		_writeOneByte
  3699 ;;		_eraseFlash
  3700 ;;		_eraseFlashSector
  3701 ;;		_waitPollData
  3702 ;;		_softwareIdEntry
  3703 ;;		_softwareIdExit
  3704 ;;		_clearAddressRegisters
  3705 ;; This function uses a non-reentrant model
  3706 ;;
  3707                           
  3708                           
  3709                           ;psect for function _setAddressRegisters
  3710  0500                     _setAddressRegisters:
  3711  0500                     l1590:	
  3712                           ;incstack = 0
  3713                           ; Regs used in _setAddressRegisters: [wreg+status,2+status,0]
  3714                           
  3715  0500                     l1592:
  3716                           
  3717                           ;source/flash.c: 214:     addr&=0x07ffff;
  3718  0500  30FF               	movlw	255
  3719  0501  0140               	movlb	0	; select bank0
  3720  0502  05A0               	andwf	setAddressRegisters@addr,f
  3721  0503  30FF               	movlw	255
  3722  0504  05A1               	andwf	setAddressRegisters@addr+1,f
  3723  0505  3007               	movlw	7
  3724  0506  05A2               	andwf	setAddressRegisters@addr+2,f
  3725  0507  3000               	movlw	0
  3726  0508  05A3               	andwf	setAddressRegisters@addr+3,f
  3727  0509                     l1594:
  3728                           
  3729                           ;source/flash.c: 215:     if (CE) addr|=0x800000; else addr&=0x7fffff;
  3730  0509  0825               	movf	setAddressRegisters@CE,w
  3731  050A  1903               	btfsc	3,2
  3732  050B  2D0D               	goto	u941
  3733  050C  2D0E               	goto	u940
  3734  050D                     u941:
  3735  050D  2D10               	goto	l1598
  3736  050E                     u940:
  3737  050E                     l1596:
  3738  050E  17A2               	bsf	setAddressRegisters@addr+2,7
  3739  050F  2D18               	goto	l1600
  3740  0510                     l1598:
  3741  0510  30FF               	movlw	255
  3742  0511  05A0               	andwf	setAddressRegisters@addr,f
  3743  0512  30FF               	movlw	255
  3744  0513  05A1               	andwf	setAddressRegisters@addr+1,f
  3745  0514  307F               	movlw	127
  3746  0515  05A2               	andwf	setAddressRegisters@addr+2,f
  3747  0516  3000               	movlw	0
  3748  0517  05A3               	andwf	setAddressRegisters@addr+3,f
  3749  0518                     l1600:
  3750                           
  3751                           ;source/flash.c: 216:     if (OE) addr|=0x400000; else addr&=0xbfffff;
  3752  0518  0824               	movf	setAddressRegisters@OE,w
  3753  0519  1903               	btfsc	3,2
  3754  051A  2D1C               	goto	u951
  3755  051B  2D1D               	goto	u950
  3756  051C                     u951:
  3757  051C  2D1F               	goto	l1604
  3758  051D                     u950:
  3759  051D                     l1602:
  3760  051D  1722               	bsf	setAddressRegisters@addr+2,6
  3761  051E  2D27               	goto	l324
  3762  051F                     l1604:
  3763  051F  30FF               	movlw	255
  3764  0520  05A0               	andwf	setAddressRegisters@addr,f
  3765  0521  30FF               	movlw	255
  3766  0522  05A1               	andwf	setAddressRegisters@addr+1,f
  3767  0523  30BF               	movlw	191
  3768  0524  05A2               	andwf	setAddressRegisters@addr+2,f
  3769  0525  3000               	movlw	0
  3770  0526  05A3               	andwf	setAddressRegisters@addr+3,f
  3771  0527                     l324:
  3772                           
  3773                           ;source/flash.c: 219:     mask=0x800000;
  3774  0527  3000               	movlw	0
  3775  0528  00AD               	movwf	setAddressRegisters@mask+3
  3776  0529  3080               	movlw	128
  3777  052A  00AC               	movwf	setAddressRegisters@mask+2
  3778  052B  3000               	movlw	0
  3779  052C  00AB               	movwf	setAddressRegisters@mask+1
  3780  052D  3000               	movlw	0
  3781  052E  00AA               	movwf	setAddressRegisters@mask
  3782                           
  3783                           ;source/flash.c: 220:     for (i=16; i>0; i--) {
  3784  052F  3010               	movlw	16
  3785  0530  00A6               	movwf	??_setAddressRegisters
  3786  0531  0826               	movf	??_setAddressRegisters,w
  3787  0532  00AE               	movwf	setAddressRegisters@i
  3788  0533                     l1610:
  3789                           
  3790                           ;source/flash.c: 222:         LATCbits.LATC0=((addr & mask) ? 1 : 0);
  3791  0533  0820               	movf	setAddressRegisters@addr,w
  3792  0534  052A               	andwf	setAddressRegisters@mask,w
  3793  0535  00A6               	movwf	??_setAddressRegisters
  3794  0536  0821               	movf	setAddressRegisters@addr+1,w
  3795  0537  052B               	andwf	setAddressRegisters@mask+1,w
  3796  0538  00A7               	movwf	??_setAddressRegisters+1
  3797  0539  0822               	movf	setAddressRegisters@addr+2,w
  3798  053A  052C               	andwf	setAddressRegisters@mask+2,w
  3799  053B  00A8               	movwf	??_setAddressRegisters+2
  3800  053C  0823               	movf	setAddressRegisters@addr+3,w
  3801  053D  052D               	andwf	setAddressRegisters@mask+3,w
  3802  053E  00A9               	movwf	??_setAddressRegisters+3
  3803  053F  0829               	movf	??_setAddressRegisters+3,w
  3804  0540  0428               	iorwf	??_setAddressRegisters+2,w
  3805  0541  0427               	iorwf	??_setAddressRegisters+1,w
  3806  0542  0426               	iorwf	??_setAddressRegisters,w
  3807  0543  1D03               	skipz
  3808  0544  2D46               	goto	u961
  3809  0545  2D49               	goto	u960
  3810  0546                     u961:
  3811  0546  0140               	movlb	0	; select bank0
  3812  0547  141A               	bsf	26,0	;volatile
  3813  0548  2D4B               	goto	u974
  3814  0549                     u960:
  3815  0549  0140               	movlb	0	; select bank0
  3816  054A  101A               	bcf	26,0	;volatile
  3817  054B                     u974:
  3818  054B                     l1612:
  3819                           
  3820                           ;source/flash.c: 223:         LATCbits.LATC1=1;
  3821  054B  149A               	bsf	26,1	;volatile
  3822  054C                     l1614:
  3823                           
  3824                           ;source/flash.c: 224:         LATCbits.LATC1=0;
  3825  054C  109A               	bcf	26,1	;volatile
  3826  054D                     l1616:
  3827                           
  3828                           ;source/flash.c: 225:         mask>>=1;
  3829  054D  3001               	movlw	1
  3830  054E                     u985:
  3831  054E  36AD               	lsrf	setAddressRegisters@mask+3,f
  3832  054F  0CAC               	rrf	setAddressRegisters@mask+2,f
  3833  0550  0CAB               	rrf	setAddressRegisters@mask+1,f
  3834  0551  0CAA               	rrf	setAddressRegisters@mask,f
  3835  0552  0B89               	decfsz	9,f
  3836  0553  2D4E               	goto	u985
  3837  0554                     l1618:
  3838                           
  3839                           ;source/flash.c: 226:     }
  3840  0554  3001               	movlw	1
  3841  0555  02AE               	subwf	setAddressRegisters@i,f
  3842  0556                     l1620:
  3843  0556  082E               	movf	setAddressRegisters@i,w
  3844  0557  1D03               	btfss	3,2
  3845  0558  2D5A               	goto	u991
  3846  0559  2D5B               	goto	u990
  3847  055A                     u991:
  3848  055A  2D33               	goto	l1610
  3849  055B                     u990:
  3850  055B                     l326:
  3851                           
  3852                           ;source/flash.c: 228:     LATCbits.LATC2=1;
  3853  055B  151A               	bsf	26,2	;volatile
  3854                           
  3855                           ;source/flash.c: 229:     LATCbits.LATC2=0;
  3856  055C  111A               	bcf	26,2	;volatile
  3857  055D                     l1622:
  3858                           
  3859                           ;source/flash.c: 232:     PORTA=(addr&0xff);
  3860  055D  0820               	movf	setAddressRegisters@addr,w
  3861  055E  008C               	movwf	12	;volatile
  3862                           
  3863                           ;source/flash.c: 234:     return 1;
  3864  055F  3001               	movlw	1
  3865  0560                     l327:
  3866  0560  0008               	return
  3867  0561                     __end_of_setAddressRegisters:
  3868                           
  3869                           	psect	text12
  3870  07D4                     __ptext12:	
  3871 ;; *************** function _sendOneByte *****************
  3872 ;; Defined at:
  3873 ;;		line 186 in file "source/flash.c"
  3874 ;; Parameters:    Size  Location     Type
  3875 ;;  data            1    wreg     unsigned char 
  3876 ;; Auto vars:     Size  Location     Type
  3877 ;;  data            1    0[BANK0 ] unsigned char 
  3878 ;; Return value:  Size  Location     Type
  3879 ;;                  1    wreg      unsigned char 
  3880 ;; Registers used:
  3881 ;;		wreg, status,2
  3882 ;; Tracked objects:
  3883 ;;		On entry : 0/0
  3884 ;;		On exit  : 0/0
  3885 ;;		Unchanged: 0/0
  3886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3887 ;;      Params:         0       0       0       0       0       0       0       0
  3888 ;;      Locals:         0       1       0       0       0       0       0       0
  3889 ;;      Temps:          0       0       0       0       0       0       0       0
  3890 ;;      Totals:         0       1       0       0       0       0       0       0
  3891 ;;Total ram usage:        1 bytes
  3892 ;; Hardware stack levels used: 1
  3893 ;; Hardware stack levels required when called: 2
  3894 ;; This function calls:
  3895 ;;		Nothing
  3896 ;; This function is called by:
  3897 ;;		_writeOneByte
  3898 ;;		_eraseFlash
  3899 ;;		_eraseFlashSector
  3900 ;;		_softwareIdEntry
  3901 ;;		_softwareIdExit
  3902 ;; This function uses a non-reentrant model
  3903 ;;
  3904                           
  3905                           
  3906                           ;psect for function _sendOneByte
  3907  07D4                     _sendOneByte:
  3908                           
  3909                           ;incstack = 0
  3910                           ; Regs used in _sendOneByte: [wreg+status,2]
  3911                           ;sendOneByte@data stored from wreg
  3912  07D4  0140               	movlb	0	; select bank0
  3913  07D5  00A0               	movwf	sendOneByte@data
  3914  07D6                     l2328:
  3915                           
  3916                           ;source/flash.c: 191:     TRISB=0x00;
  3917  07D6  0193               	clrf	19	;volatile
  3918  07D7                     l2330:
  3919                           
  3920                           ;source/flash.c: 192:     PORTB=data;
  3921  07D7  0820               	movf	sendOneByte@data,w
  3922  07D8  008D               	movwf	13	;volatile
  3923  07D9                     l2332:
  3924                           
  3925                           ;source/flash.c: 195:     LATCbits.LATC3=0;
  3926  07D9  119A               	bcf	26,3	;volatile
  3927  07DA                     l2334:
  3928                           
  3929                           ;source/flash.c: 196:     LATCbits.LATC3=1;
  3930  07DA  159A               	bsf	26,3	;volatile
  3931  07DB                     l2336:
  3932                           
  3933                           ;source/flash.c: 199:     PORTB=0x00;
  3934  07DB  018D               	clrf	13	;volatile
  3935                           
  3936                           ;source/flash.c: 200:     TRISB=0xff;
  3937  07DC  30FF               	movlw	255
  3938  07DD  0093               	movwf	19	;volatile
  3939                           
  3940                           ;source/flash.c: 202:     return 1;
  3941  07DE  3001               	movlw	1
  3942  07DF                     l318:
  3943  07DF  0008               	return
  3944  07E0                     __end_of_sendOneByte:
  3945                           
  3946                           	psect	text13
  3947  0760                     __ptext13:	
  3948 ;; *************** function _SerialPortSetup *****************
  3949 ;; Defined at:
  3950 ;;		line 40 in file "source/USART.c"
  3951 ;; Parameters:    Size  Location     Type
  3952 ;;		None
  3953 ;; Auto vars:     Size  Location     Type
  3954 ;;		None
  3955 ;; Return value:  Size  Location     Type
  3956 ;;                  1    wreg      void 
  3957 ;; Registers used:
  3958 ;;		wreg, status,2, status,0
  3959 ;; Tracked objects:
  3960 ;;		On entry : 0/0
  3961 ;;		On exit  : 0/0
  3962 ;;		Unchanged: 0/0
  3963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3964 ;;      Params:         0       0       0       0       0       0       0       0
  3965 ;;      Locals:         0       0       0       0       0       0       0       0
  3966 ;;      Temps:          0       0       0       0       0       0       0       0
  3967 ;;      Totals:         0       0       0       0       0       0       0       0
  3968 ;;Total ram usage:        0 bytes
  3969 ;; Hardware stack levels used: 1
  3970 ;; Hardware stack levels required when called: 2
  3971 ;; This function calls:
  3972 ;;		Nothing
  3973 ;; This function is called by:
  3974 ;;		_main
  3975 ;; This function uses a non-reentrant model
  3976 ;;
  3977                           
  3978                           
  3979                           ;psect for function _SerialPortSetup
  3980  0760                     _SerialPortSetup:
  3981  0760                     l2548:	
  3982                           ;incstack = 0
  3983                           ; Regs used in _SerialPortSetup: [wreg+status,2+status,0]
  3984                           
  3985                           
  3986                           ;source/USART.c: 44:     SP1BRG=34;
  3987  0760  3000               	movlw	0
  3988  0761  0142               	movlb	2	; select bank2
  3989  0762  009C               	movwf	28	;volatile
  3990  0763  3022               	movlw	34
  3991  0764  009B               	movwf	27	;volatile
  3992                           
  3993                           ;source/USART.c: 45:     TX1STAbits.BRGH=1;
  3994  0765  151E               	bsf	30,2	;volatile
  3995                           
  3996                           ;source/USART.c: 46:     BAUD1CONbits.BRG16=1;
  3997  0766  159F               	bsf	31,3	;volatile
  3998                           
  3999                           ;source/USART.c: 47:     LATCbits.LATC7=1;
  4000  0767  0140               	movlb	0	; select bank0
  4001  0768  179A               	bsf	26,7	;volatile
  4002                           
  4003                           ;source/USART.c: 48:     TRISCbits.TRISC7=1;
  4004  0769  1794               	bsf	20,7	;volatile
  4005  076A                     l2550:
  4006                           
  4007                           ;source/USART.c: 49:     RC6PPSbits.RC6PPS=0x05;
  4008  076A  017E               	movlb	62	; select bank62
  4009  076B  0826               	movf	38,w	;volatile
  4010  076C  39C0               	andlw	-64
  4011  076D  3805               	iorlw	5
  4012  076E  00A6               	movwf	38	;volatile
  4013                           
  4014                           ;source/USART.c: 50:     RX1PPSbits.PORT=0x02;
  4015  076F  017D               	movlb	61	; select bank61
  4016  0770  084B               	movf	75,w	;volatile
  4017  0771  39E7               	andlw	-25
  4018  0772  3810               	iorlw	16
  4019  0773  00CB               	movwf	75	;volatile
  4020                           
  4021                           ;source/USART.c: 51:     RX1PPSbits.PIN=0x07;
  4022  0774  3007               	movlw	7
  4023  0775  04CB               	iorwf	75,f	;volatile
  4024  0776                     l2552:
  4025                           
  4026                           ;source/USART.c: 52:     TX1STAbits.CSRC=0;
  4027  0776  0142               	movlb	2	; select bank2
  4028  0777  139E               	bcf	30,7	;volatile
  4029  0778                     l2554:
  4030                           
  4031                           ;source/USART.c: 53:     TX1STAbits.TX9=0;
  4032  0778  131E               	bcf	30,6	;volatile
  4033  0779                     l2556:
  4034                           
  4035                           ;source/USART.c: 54:     TX1STAbits.SYNC=0;
  4036  0779  121E               	bcf	30,4	;volatile
  4037  077A                     l2558:
  4038                           
  4039                           ;source/USART.c: 55:     RC1STAbits.SPEN=1;
  4040  077A  179D               	bsf	29,7	;volatile
  4041  077B                     l2560:
  4042                           
  4043                           ;source/USART.c: 56:     BAUD1CONbits.SCKP=0;
  4044  077B  121F               	bcf	31,4	;volatile
  4045  077C                     l2562:
  4046                           
  4047                           ;source/USART.c: 59:     LATCbits.LATC5=0;
  4048  077C  0140               	movlb	0	; select bank0
  4049  077D  129A               	bcf	26,5	;volatile
  4050  077E                     l2564:
  4051                           
  4052                           ;source/USART.c: 60:     LATCbits.LATC4=0;
  4053  077E  121A               	bcf	26,4	;volatile
  4054  077F                     l171:
  4055  077F  0008               	return
  4056  0780                     __end_of_SerialPortSetup:
  4057                           
  4058                           	psect	text14
  4059  070F                     __ptext14:	
  4060 ;; *************** function _SerialPortSendData *****************
  4061 ;; Defined at:
  4062 ;;		line 63 in file "source/USART.c"
  4063 ;; Parameters:    Size  Location     Type
  4064 ;;  dataToSend      2    0[BANK0 ] PTR unsigned char 
  4065 ;;		 -> ackBuf(2), dataBuf(256), ATR(12), 
  4066 ;;  length          2    2[BANK0 ] unsigned short 
  4067 ;; Auto vars:     Size  Location     Type
  4068 ;;		None
  4069 ;; Return value:  Size  Location     Type
  4070 ;;                  1    wreg      void 
  4071 ;; Registers used:
  4072 ;;		wreg, status,2, status,0
  4073 ;; Tracked objects:
  4074 ;;		On entry : 0/0
  4075 ;;		On exit  : 0/0
  4076 ;;		Unchanged: 0/0
  4077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4078 ;;      Params:         0       4       0       0       0       0       0       0
  4079 ;;      Locals:         0       0       0       0       0       0       0       0
  4080 ;;      Temps:          0       1       0       0       0       0       0       0
  4081 ;;      Totals:         0       5       0       0       0       0       0       0
  4082 ;;Total ram usage:        5 bytes
  4083 ;; Hardware stack levels used: 1
  4084 ;; Hardware stack levels required when called: 2
  4085 ;; This function calls:
  4086 ;;		Nothing
  4087 ;; This function is called by:
  4088 ;;		_main
  4089 ;; This function uses a non-reentrant model
  4090 ;;
  4091                           
  4092                           
  4093                           ;psect for function _SerialPortSendData
  4094  070F                     _SerialPortSendData:
  4095  070F                     l2566:	
  4096                           ;incstack = 0
  4097                           ; Regs used in _SerialPortSendData: [wreg+status,2+status,0]
  4098                           
  4099                           
  4100                           ;source/USART.c: 72:     if (portInUse) return;
  4101  070F  0140               	movlb	0	; select bank0
  4102  0710  0860               	movf	_portInUse,w	;volatile
  4103  0711  1903               	btfsc	3,2
  4104  0712  2F14               	goto	u2171
  4105  0713  2F15               	goto	u2170
  4106  0714                     u2171:
  4107  0714  2F16               	goto	l2570
  4108  0715                     u2170:
  4109  0715  2F39               	goto	l175
  4110  0716                     l2570:
  4111                           
  4112                           ;source/USART.c: 74:     buf=dataToSend;
  4113  0716  0821               	movf	SerialPortSendData@dataToSend+1,w
  4114  0717  00DD               	movwf	_buf+1
  4115  0718  0820               	movf	SerialPortSendData@dataToSend,w
  4116  0719  00DC               	movwf	_buf
  4117  071A                     l2572:
  4118                           
  4119                           ;source/USART.c: 75:     bufPtr=0;
  4120  071A  01F8               	clrf	_bufPtr	;volatile
  4121  071B  01F9               	clrf	_bufPtr+1	;volatile
  4122  071C                     l2574:
  4123                           
  4124                           ;source/USART.c: 76:     bufLength=length;
  4125  071C  0823               	movf	SerialPortSendData@length+1,w
  4126  071D  00F7               	movwf	_bufLength+1	;volatile
  4127  071E  0822               	movf	SerialPortSendData@length,w
  4128  071F  00F6               	movwf	_bufLength	;volatile
  4129  0720                     l2576:
  4130                           
  4131                           ;source/USART.c: 77:     portInUse=1;
  4132  0720  3001               	movlw	1
  4133  0721  00A4               	movwf	??_SerialPortSendData
  4134  0722  0824               	movf	??_SerialPortSendData,w
  4135  0723  00E0               	movwf	_portInUse	;volatile
  4136  0724                     l2578:
  4137                           
  4138                           ;source/USART.c: 78:     LATCbits.LATC4=1;
  4139  0724  161A               	bsf	26,4	;volatile
  4140  0725                     l2580:
  4141                           
  4142                           ;source/USART.c: 80:     PIE1bits.TX1IE=1;
  4143  0725  014E               	movlb	14	; select bank14
  4144  0726  1597               	bsf	23,3	;volatile
  4145  0727                     l2582:
  4146                           
  4147                           ;source/USART.c: 81:     TX1STAbits.TXEN=1;
  4148  0727  0142               	movlb	2	; select bank2
  4149  0728  169E               	bsf	30,5	;volatile
  4150  0729                     l176:	
  4151                           ;source/USART.c: 83:     while (PIE1bits.TX1IE);
  4152                           
  4153  0729  014E               	movlb	14	; select bank14
  4154  072A  1997               	btfsc	23,3	;volatile
  4155  072B  2F2D               	goto	u2181
  4156  072C  2F2E               	goto	u2180
  4157  072D                     u2181:
  4158  072D  2F29               	goto	l176
  4159  072E                     u2180:
  4160  072E                     l179:
  4161  072E  0142               	movlb	2	; select bank2
  4162  072F  1C9E               	btfss	30,1	;volatile
  4163  0730  2F32               	goto	u2191
  4164  0731  2F33               	goto	u2190
  4165  0732                     u2191:
  4166  0732  2F2E               	goto	l179
  4167  0733                     u2190:
  4168  0733                     l181:
  4169                           
  4170                           ;source/USART.c: 86:     TX1STAbits.TXEN=1;
  4171  0733  169E               	bsf	30,5	;volatile
  4172                           
  4173                           ;source/USART.c: 88:     LATCbits.LATC4=0;
  4174  0734  0140               	movlb	0	; select bank0
  4175  0735  121A               	bcf	26,4	;volatile
  4176  0736                     l2584:
  4177                           
  4178                           ;source/USART.c: 89:     portInUse=0;
  4179  0736  01E0               	clrf	_portInUse	;volatile
  4180                           
  4181                           ;source/USART.c: 90:     bufPtr=0;
  4182  0737  01F8               	clrf	_bufPtr	;volatile
  4183  0738  01F9               	clrf	_bufPtr+1	;volatile
  4184  0739                     l175:
  4185  0739  0008               	return
  4186  073A                     __end_of_SerialPortSendData:
  4187                           
  4188                           	psect	text15
  4189  073A                     __ptext15:	
  4190 ;; *************** function _SerialPortReceiveData *****************
  4191 ;; Defined at:
  4192 ;;		line 95 in file "source/USART.c"
  4193 ;; Parameters:    Size  Location     Type
  4194 ;;  dataReceived    2    0[BANK0 ] PTR unsigned char 
  4195 ;;		 -> dataBuf(256), cmdBuf(5), 
  4196 ;;  length          2    2[BANK0 ] unsigned short 
  4197 ;; Auto vars:     Size  Location     Type
  4198 ;;		None
  4199 ;; Return value:  Size  Location     Type
  4200 ;;                  1    wreg      void 
  4201 ;; Registers used:
  4202 ;;		wreg, status,2, status,0
  4203 ;; Tracked objects:
  4204 ;;		On entry : 0/0
  4205 ;;		On exit  : 0/0
  4206 ;;		Unchanged: 0/0
  4207 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4208 ;;      Params:         0       4       0       0       0       0       0       0
  4209 ;;      Locals:         0       0       0       0       0       0       0       0
  4210 ;;      Temps:          0       1       0       0       0       0       0       0
  4211 ;;      Totals:         0       5       0       0       0       0       0       0
  4212 ;;Total ram usage:        5 bytes
  4213 ;; Hardware stack levels used: 1
  4214 ;; Hardware stack levels required when called: 2
  4215 ;; This function calls:
  4216 ;;		Nothing
  4217 ;; This function is called by:
  4218 ;;		_main
  4219 ;; This function uses a non-reentrant model
  4220 ;;
  4221                           
  4222                           
  4223                           ;psect for function _SerialPortReceiveData
  4224  073A                     _SerialPortReceiveData:
  4225  073A                     l2588:	
  4226                           ;incstack = 0
  4227                           ; Regs used in _SerialPortReceiveData: [wreg+status,2+status,0]
  4228                           
  4229                           
  4230                           ;source/USART.c: 103:     if (portInUse) return;
  4231  073A  0140               	movlb	0	; select bank0
  4232  073B  0860               	movf	_portInUse,w	;volatile
  4233  073C  1903               	btfsc	3,2
  4234  073D  2F3F               	goto	u2201
  4235  073E  2F40               	goto	u2200
  4236  073F                     u2201:
  4237  073F  2F41               	goto	l2592
  4238  0740                     u2200:
  4239  0740  2F5F               	goto	l185
  4240  0741                     l2592:
  4241                           
  4242                           ;source/USART.c: 105:     buf=dataReceived;
  4243  0741  0821               	movf	SerialPortReceiveData@dataReceived+1,w
  4244  0742  00DD               	movwf	_buf+1
  4245  0743  0820               	movf	SerialPortReceiveData@dataReceived,w
  4246  0744  00DC               	movwf	_buf
  4247  0745                     l2594:
  4248                           
  4249                           ;source/USART.c: 106:     bufPtr=0;
  4250  0745  01F8               	clrf	_bufPtr	;volatile
  4251  0746  01F9               	clrf	_bufPtr+1	;volatile
  4252  0747                     l2596:
  4253                           
  4254                           ;source/USART.c: 107:     bufLength=length;
  4255  0747  0823               	movf	SerialPortReceiveData@length+1,w
  4256  0748  00F7               	movwf	_bufLength+1	;volatile
  4257  0749  0822               	movf	SerialPortReceiveData@length,w
  4258  074A  00F6               	movwf	_bufLength	;volatile
  4259  074B                     l2598:
  4260                           
  4261                           ;source/USART.c: 108:     portInUse=1;
  4262  074B  3001               	movlw	1
  4263  074C  00A4               	movwf	??_SerialPortReceiveData
  4264  074D  0824               	movf	??_SerialPortReceiveData,w
  4265  074E  00E0               	movwf	_portInUse	;volatile
  4266  074F                     l2600:
  4267                           
  4268                           ;source/USART.c: 110:     PIE1bits.RC1IE=1;
  4269  074F  014E               	movlb	14	; select bank14
  4270  0750  1617               	bsf	23,4	;volatile
  4271  0751                     l2602:
  4272                           
  4273                           ;source/USART.c: 111:     RC1STAbits.CREN=1;
  4274  0751  0142               	movlb	2	; select bank2
  4275  0752  161D               	bsf	29,4	;volatile
  4276  0753                     l186:	
  4277                           ;source/USART.c: 113:     while (PIE1bits.RC1IE);
  4278                           
  4279  0753  014E               	movlb	14	; select bank14
  4280  0754  1A17               	btfsc	23,4	;volatile
  4281  0755  2F57               	goto	u2211
  4282  0756  2F58               	goto	u2210
  4283  0757                     u2211:
  4284  0757  2F53               	goto	l186
  4285  0758                     u2210:
  4286  0758                     l188:
  4287                           
  4288                           ;source/USART.c: 115:     RC1STAbits.CREN=0;
  4289  0758  0142               	movlb	2	; select bank2
  4290  0759  121D               	bcf	29,4	;volatile
  4291                           
  4292                           ;source/USART.c: 117:     LATCbits.LATC5=0;
  4293  075A  0140               	movlb	0	; select bank0
  4294  075B  129A               	bcf	26,5	;volatile
  4295  075C                     l2604:
  4296                           
  4297                           ;source/USART.c: 118:     portInUse=0;
  4298  075C  01E0               	clrf	_portInUse	;volatile
  4299                           
  4300                           ;source/USART.c: 119:     bufPtr=0;
  4301  075D  01F8               	clrf	_bufPtr	;volatile
  4302  075E  01F9               	clrf	_bufPtr+1	;volatile
  4303  075F                     l185:
  4304  075F  0008               	return
  4305  0760                     __end_of_SerialPortReceiveData:
  4306                           
  4307                           	psect	intentry
  4308  0004                     __pintentry:	
  4309 ;; *************** function _InterruptServiceRoutine *****************
  4310 ;; Defined at:
  4311 ;;		line 248 in file "source/main.c"
  4312 ;; Parameters:    Size  Location     Type
  4313 ;;		None
  4314 ;; Auto vars:     Size  Location     Type
  4315 ;;		None
  4316 ;; Return value:  Size  Location     Type
  4317 ;;                  1    wreg      void 
  4318 ;; Registers used:
  4319 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4320 ;; Tracked objects:
  4321 ;;		On entry : 0/0
  4322 ;;		On exit  : 0/0
  4323 ;;		Unchanged: 0/0
  4324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4325 ;;      Params:         0       0       0       0       0       0       0       0
  4326 ;;      Locals:         0       0       0       0       0       0       0       0
  4327 ;;      Temps:          3       0       0       0       0       0       0       0
  4328 ;;      Totals:         3       0       0       0       0       0       0       0
  4329 ;;Total ram usage:        3 bytes
  4330 ;; Hardware stack levels used: 1
  4331 ;; Hardware stack levels required when called: 1
  4332 ;; This function calls:
  4333 ;;		_SerialPortReceiveInterruptService
  4334 ;;		_SerialPortTransmitInterruptService
  4335 ;; This function is called by:
  4336 ;;		Interrupt level 1
  4337 ;; This function uses a non-reentrant model
  4338 ;;
  4339                           
  4340  0004                     _InterruptServiceRoutine:
  4341                           
  4342                           ;incstack = 0
  4343  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  4344                           
  4345                           ; Regs used in _InterruptServiceRoutine: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
  4346  0005  3180               	pagesel	$
  4347  0006                     i1l2286:
  4348                           
  4349                           ;source/main.c: 252:     if (PIE1bits.TX1IE & PIR1bits.TX1IF) {
  4350  0006  014E               	movlb	14	; select bank14
  4351  0007  0C0D               	rrf	13,w	;volatile
  4352  0008  00F3               	movwf	??_InterruptServiceRoutine
  4353  0009  0CF3               	rrf	??_InterruptServiceRoutine,f
  4354  000A  0C73               	rrf	??_InterruptServiceRoutine,w
  4355  000B  3901               	andlw	1
  4356  000C  00F4               	movwf	??_InterruptServiceRoutine+1
  4357  000D  0C17               	rrf	23,w	;volatile
  4358  000E  00F5               	movwf	??_InterruptServiceRoutine+2
  4359  000F  0CF5               	rrf	??_InterruptServiceRoutine+2,f
  4360  0010  0C75               	rrf	??_InterruptServiceRoutine+2,w
  4361  0011  3901               	andlw	1
  4362  0012  0574               	andwf	??_InterruptServiceRoutine+1,w
  4363  0013  1903               	btfsc	3,2
  4364  0014  2816               	goto	u185_21
  4365  0015  2817               	goto	u185_20
  4366  0016                     u185_21:
  4367  0016  281A               	goto	i1l2290
  4368  0017                     u185_20:
  4369  0017                     i1l2288:
  4370                           
  4371                           ;source/main.c: 253:         SerialPortTransmitInterruptService();
  4372  0017  3187  2780  3180   	fcall	_SerialPortTransmitInterruptService
  4373  001A                     i1l2290:
  4374                           
  4375                           ;source/main.c: 257:     if (PIE1bits.RC1IE & PIR1bits.RC1IF) {
  4376  001A  014E               	movlb	14	; select bank14
  4377  001B  0E0D               	swapf	13,w	;volatile
  4378  001C  3901               	andlw	1
  4379  001D  00F3               	movwf	??_InterruptServiceRoutine
  4380  001E  0E17               	swapf	23,w	;volatile
  4381  001F  3901               	andlw	1
  4382  0020  0573               	andwf	??_InterruptServiceRoutine,w
  4383  0021  1903               	btfsc	3,2
  4384  0022  2824               	goto	u186_21
  4385  0023  2825               	goto	u186_20
  4386  0024                     u186_21:
  4387  0024  2828               	goto	i1l138
  4388  0025                     u186_20:
  4389  0025                     i1l2292:
  4390                           
  4391                           ;source/main.c: 258:         SerialPortReceiveInterruptService();
  4392  0025  3186  26A8  3180   	fcall	_SerialPortReceiveInterruptService
  4393  0028                     i1l138:
  4394  0028  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4395  0029  0009               	retfie
  4396  002A                     __end_of_InterruptServiceRoutine:
  4397                           
  4398                           	psect	text17
  4399  0780                     __ptext17:	
  4400 ;; *************** function _SerialPortTransmitInterruptService *****************
  4401 ;; Defined at:
  4402 ;;		line 124 in file "source/USART.c"
  4403 ;; Parameters:    Size  Location     Type
  4404 ;;		None
  4405 ;; Auto vars:     Size  Location     Type
  4406 ;;		None
  4407 ;; Return value:  Size  Location     Type
  4408 ;;                  1    wreg      void 
  4409 ;; Registers used:
  4410 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4411 ;; Tracked objects:
  4412 ;;		On entry : 0/0
  4413 ;;		On exit  : 0/0
  4414 ;;		Unchanged: 0/0
  4415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4416 ;;      Params:         0       0       0       0       0       0       0       0
  4417 ;;      Locals:         0       0       0       0       0       0       0       0
  4418 ;;      Temps:          0       0       0       0       0       0       0       0
  4419 ;;      Totals:         0       0       0       0       0       0       0       0
  4420 ;;Total ram usage:        0 bytes
  4421 ;; Hardware stack levels used: 1
  4422 ;; This function calls:
  4423 ;;		Nothing
  4424 ;; This function is called by:
  4425 ;;		_InterruptServiceRoutine
  4426 ;; This function uses a non-reentrant model
  4427 ;;
  4428                           
  4429                           
  4430                           ;psect for function _SerialPortTransmitInterruptService
  4431  0780                     _SerialPortTransmitInterruptService:
  4432  0780                     i1l2116:	
  4433                           ;incstack = 0
  4434                           ; Regs used in _SerialPortTransmitInterruptService: [wreg+fsr1l+fsr1h+status,2+status,0]
  4435                           
  4436                           
  4437                           ;source/USART.c: 130:     TX1REG=buf[bufPtr++];
  4438  0780  0878               	movf	_bufPtr,w	;volatile
  4439  0781  0140               	movlb	0	; select bank0
  4440  0782  075C               	addwf	_buf,w
  4441  0783  0086               	movwf	6
  4442  0784  0879               	movf	_bufPtr+1,w	;volatile
  4443  0785  3D5D               	addwfc	_buf+1,w
  4444  0786  0087               	movwf	7
  4445  0787  0801               	movf	1,w
  4446  0788  0142               	movlb	2	; select bank2
  4447  0789  009A               	movwf	26	;volatile
  4448  078A                     i1l2118:
  4449  078A  3001               	movlw	1
  4450  078B  07F8               	addwf	_bufPtr,f	;volatile
  4451  078C  3000               	movlw	0
  4452  078D  3DF9               	addwfc	_bufPtr+1,f	;volatile
  4453  078E                     i1l2120:
  4454                           
  4455                           ;source/USART.c: 131:     bufLength--;
  4456  078E  3001               	movlw	1
  4457  078F  02F6               	subwf	_bufLength,f	;volatile
  4458  0790  3000               	movlw	0
  4459  0791  3BF7               	subwfb	_bufLength+1,f	;volatile
  4460  0792                     i1l2122:
  4461                           
  4462                           ;source/USART.c: 133:     if (bufLength==0x00) {
  4463  0792  0876               	movf	_bufLength,w	;volatile
  4464  0793  0477               	iorwf	_bufLength+1,w	;volatile
  4465  0794  1D03               	btfss	3,2
  4466  0795  2F97               	goto	u166_21
  4467  0796  2F98               	goto	u166_20
  4468  0797                     u166_21:
  4469  0797  2F9E               	goto	i1l192
  4470  0798                     u166_20:
  4471  0798                     i1l2124:
  4472                           
  4473                           ;source/USART.c: 135:         portInUse=0;
  4474  0798  0140               	movlb	0	; select bank0
  4475  0799  01E0               	clrf	_portInUse	;volatile
  4476                           
  4477                           ;source/USART.c: 136:         bufPtr=0;
  4478  079A  01F8               	clrf	_bufPtr	;volatile
  4479  079B  01F9               	clrf	_bufPtr+1	;volatile
  4480  079C                     i1l2126:
  4481                           
  4482                           ;source/USART.c: 137:         PIE1bits.TX1IE=0;
  4483  079C  014E               	movlb	14	; select bank14
  4484  079D  1197               	bcf	23,3	;volatile
  4485  079E                     i1l192:
  4486  079E  0008               	return
  4487  079F                     __end_of_SerialPortTransmitInterruptService:
  4488                           
  4489                           	psect	text18
  4490  06A8                     __ptext18:	
  4491 ;; *************** function _SerialPortReceiveInterruptService *****************
  4492 ;; Defined at:
  4493 ;;		line 141 in file "source/USART.c"
  4494 ;; Parameters:    Size  Location     Type
  4495 ;;		None
  4496 ;; Auto vars:     Size  Location     Type
  4497 ;;  tempData        1    2[COMMON] unsigned char 
  4498 ;; Return value:  Size  Location     Type
  4499 ;;                  1    wreg      void 
  4500 ;; Registers used:
  4501 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4502 ;; Tracked objects:
  4503 ;;		On entry : 0/0
  4504 ;;		On exit  : 0/0
  4505 ;;		Unchanged: 0/0
  4506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4507 ;;      Params:         0       0       0       0       0       0       0       0
  4508 ;;      Locals:         1       0       0       0       0       0       0       0
  4509 ;;      Temps:          2       0       0       0       0       0       0       0
  4510 ;;      Totals:         3       0       0       0       0       0       0       0
  4511 ;;Total ram usage:        3 bytes
  4512 ;; Hardware stack levels used: 1
  4513 ;; This function calls:
  4514 ;;		Nothing
  4515 ;; This function is called by:
  4516 ;;		_InterruptServiceRoutine
  4517 ;; This function uses a non-reentrant model
  4518 ;;
  4519                           
  4520                           
  4521                           ;psect for function _SerialPortReceiveInterruptService
  4522  06A8                     _SerialPortReceiveInterruptService:
  4523  06A8                     i1l2128:	
  4524                           ;incstack = 0
  4525                           ; Regs used in _SerialPortReceiveInterruptService: [wreg+fsr1l+fsr1h+status,2+status,0]
  4526                           
  4527                           
  4528                           ;source/USART.c: 147:     char tempData;;source/USART.c: 149:     LATCbits.LATC5=1;
  4529  06A8  0140               	movlb	0	; select bank0
  4530  06A9  169A               	bsf	26,5	;volatile
  4531  06AA                     i1l2130:
  4532                           
  4533                           ;source/USART.c: 150:     bufLength--;
  4534  06AA  3001               	movlw	1
  4535  06AB  02F6               	subwf	_bufLength,f	;volatile
  4536  06AC  3000               	movlw	0
  4537  06AD  3BF7               	subwfb	_bufLength+1,f	;volatile
  4538  06AE                     i1l2132:
  4539                           
  4540                           ;source/USART.c: 153:     if (RC1STAbits.FERR) {
  4541  06AE  0142               	movlb	2	; select bank2
  4542  06AF  1D1D               	btfss	29,2	;volatile
  4543  06B0  2EB2               	goto	u167_21
  4544  06B1  2EB3               	goto	u167_20
  4545  06B2                     u167_21:
  4546  06B2  2EB7               	goto	i1l195
  4547  06B3                     u167_20:
  4548  06B3                     i1l2134:
  4549  06B3  0819               	movf	25,w	;volatile
  4550  06B4                     i1l2136:
  4551                           
  4552                           ;source/USART.c: 156:         PIE1bits.RC1IE=0;
  4553  06B4  014E               	movlb	14	; select bank14
  4554  06B5  1217               	bcf	23,4	;volatile
  4555                           
  4556                           ;source/USART.c: 157:     } else if (RC1STAbits.OERR) {
  4557  06B6  2EDB               	goto	i1l200
  4558  06B7                     i1l195:
  4559  06B7  1C9D               	btfss	29,1	;volatile
  4560  06B8  2EBA               	goto	u168_21
  4561  06B9  2EBB               	goto	u168_20
  4562  06BA                     u168_21:
  4563  06BA  2EBE               	goto	i1l2140
  4564  06BB                     u168_20:
  4565  06BB                     i1l2138:
  4566                           
  4567                           ;source/USART.c: 159:         PIE1bits.RC1IE=0;
  4568  06BB  014E               	movlb	14	; select bank14
  4569  06BC  1217               	bcf	23,4	;volatile
  4570                           
  4571                           ;source/USART.c: 160:     } else {
  4572  06BD  2EDB               	goto	i1l200
  4573  06BE                     i1l2140:
  4574                           
  4575                           ;source/USART.c: 162:         tempData=RC1REG;
  4576  06BE  0819               	movf	25,w	;volatile
  4577  06BF  00F0               	movwf	??_SerialPortReceiveInterruptService
  4578  06C0  0870               	movf	??_SerialPortReceiveInterruptService,w
  4579  06C1  00F2               	movwf	SerialPortReceiveInterruptService@tempData
  4580  06C2                     i1l2142:
  4581                           
  4582                           ;source/USART.c: 163:         buf[bufPtr++]=tempData;
  4583  06C2  0878               	movf	_bufPtr,w	;volatile
  4584  06C3  0140               	movlb	0	; select bank0
  4585  06C4  075C               	addwf	_buf,w
  4586  06C5  00F0               	movwf	??_SerialPortReceiveInterruptService
  4587  06C6  0879               	movf	_bufPtr+1,w	;volatile
  4588  06C7  3D5D               	addwfc	_buf+1,w
  4589  06C8  00F1               	movwf	??_SerialPortReceiveInterruptService+1
  4590  06C9  0870               	movf	??_SerialPortReceiveInterruptService,w
  4591  06CA  0086               	movwf	6
  4592  06CB  0871               	movf	??_SerialPortReceiveInterruptService+1,w
  4593  06CC  0087               	movwf	7
  4594  06CD  0872               	movf	SerialPortReceiveInterruptService@tempData,w
  4595  06CE  0081               	movwf	1
  4596  06CF                     i1l2144:
  4597  06CF  3001               	movlw	1
  4598  06D0  07F8               	addwf	_bufPtr,f	;volatile
  4599  06D1  3000               	movlw	0
  4600  06D2  3DF9               	addwfc	_bufPtr+1,f	;volatile
  4601  06D3                     i1l2146:
  4602                           
  4603                           ;source/USART.c: 164:         if (bufLength==0x00) {
  4604  06D3  0876               	movf	_bufLength,w	;volatile
  4605  06D4  0477               	iorwf	_bufLength+1,w	;volatile
  4606  06D5  1D03               	btfss	3,2
  4607  06D6  2ED8               	goto	u169_21
  4608  06D7  2ED9               	goto	u169_20
  4609  06D8                     u169_21:
  4610  06D8  2EDB               	goto	i1l200
  4611  06D9                     u169_20:
  4612  06D9                     i1l2148:
  4613                           
  4614                           ;source/USART.c: 166:             PIE1bits.RC1IE=0;
  4615  06D9  014E               	movlb	14	; select bank14
  4616  06DA  1217               	bcf	23,4	;volatile
  4617  06DB                     i1l200:
  4618  06DB  0008               	return
  4619  06DC                     __end_of_SerialPortReceiveInterruptService:
  4620  007E                     btemp	set	126	;btemp
  4621  007E                     int$flags	set	126
  4622  007E                     wtemp0	set	126
  4623  20F0                     
  4624                           	psect	config
  4625                           
  4626                           ;Config register CONFIG1 @ 0x8007
  4627                           ;	External Oscillator Mode Selection bits
  4628                           ;	FEXTOSC = OFF, Oscillator not enabled
  4629                           ;	Power-up Default Value for COSC bits
  4630                           ;	RSTOSC = HFINTOSC_1MHZ, HFINTOSC (1 MHz)
  4631                           ;	Clock Out Enable bit
  4632                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; I/O function on RA6
  4633                           ;	VDD Range Analog Calibration Selection bit
  4634                           ;	VDDAR = HI, Internal analog systems are calibrated for operation between VDD = 2.3V - 
      +                          5.5V
  4635  8007                     	org	32775
  4636  8007  3FED               	dw	16365
  4637                           
  4638                           ;Config register CONFIG2 @ 0x8008
  4639                           ;	Master Clear Enable bit
  4640                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  4641                           ;	Power-up Timer Selection bits
  4642                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  4643                           ;	WDT Operating Mode bits
  4644                           ;	WDTE = OFF, WDT disabled; SEN is ignored
  4645                           ;	Brown-out Reset Enable bits
  4646                           ;	BOREN = OFF, Brown-out Reset disabled
  4647                           ;	Brown-out Reset Voltage Selection bit
  4648                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V
  4649                           ;	PPSLOCKED One-Way Set Enable bit
  4650                           ;	PPS1WAY = OFF, The PPSLOCKED bit can be set and cleared as needed (unlocking sequence 
      +                          is required)
  4651                           ;	Stack Overflow/Underflow Reset Enable bit
  4652                           ;	STVREN = OFF, Stack Overflow or Underflow will not cause a reset
  4653  8008                     	org	32776
  4654  8008  2727               	dw	10023
  4655                           
  4656                           ;Config register CONFIG4 @ 0x800A
  4657                           ;	Boot Block Size Selection bits
  4658                           ;	BBSIZE = BB512, 512 words boot block size
  4659                           ;	Boot Block Enable bit
  4660                           ;	BBEN = OFF, Boot Block is disabled
  4661                           ;	SAF Enable bit
  4662                           ;	SAFEN = OFF, SAF is disabled
  4663                           ;	Application Block Write Protection bit
  4664                           ;	WRTAPP = OFF, Application Block is not write-protected
  4665                           ;	Boot Block Write Protection bit
  4666                           ;	WRTB = OFF, Boot Block is not write-protected
  4667                           ;	Configuration Registers Write Protection bit
  4668                           ;	WRTC = OFF, Configuration Registers are not write-protected
  4669                           ;	Storage Area Flash (SAF) Write Protection bit
  4670                           ;	WRTSAF = OFF, SAF is not write-protected
  4671                           ;	Low Voltage Programming Enable bit
  4672                           ;	LVP = OFF, High Voltage on MCLR/Vpp must be used for programming
  4673  800A                     	org	32778
  4674  800A  1FFF               	dw	8191
  4675                           
  4676                           ;Config register CONFIG5 @ 0x800B
  4677                           ;	User Program Flash Memory Code Protection bit
  4678                           ;	CP = OFF, User Program Flash Memory code protection is disabled
  4679  800B                     	org	32779
  4680  800B  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        12
    BSS         25
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      11
    BANK0            80     56      76
    BANK1            80      0      12
    BANK2            80      0       0
    BANK3             0      0       0
    BANK4             0      0       0
    BANK5             0      0       0
    BANK6             0      0       0

Pointer List with Targets:

    readFlashChipId@numRetBytes	PTR unsigned short  size(1) Largest target is 2
		 -> numRetBytes(BANK0[2]), 

    readFlashChipId@retBytes	PTR unsigned char  size(2) Largest target is 256
		 -> dataBuf(BIGRAM[256]), 

    writeFlash@dataBytes	PTR unsigned char  size(2) Largest target is 256
		 -> dataBuf(BIGRAM[256]), 

    readFlash@retBytes	PTR unsigned char  size(2) Largest target is 256
		 -> dataBuf(BIGRAM[256]), 

    readFlash@numRetBytes	PTR unsigned short  size(1) Largest target is 2
		 -> numRetBytes(BANK0[2]), 

    SerialPortReceiveData@dataReceived	PTR unsigned char  size(2) Largest target is 256
		 -> dataBuf(BIGRAM[256]), cmdBuf(BANK0[5]), 

    SerialPortSendData@dataToSend	PTR unsigned char  size(2) Largest target is 256
		 -> ackBuf(BANK0[2]), dataBuf(BIGRAM[256]), ATR(BANK1[12]), 

    buf	PTR volatile unsigned char  size(2) Largest target is 256
		 -> NULL(NULL[0]), ackBuf(BANK0[2]), dataBuf(BIGRAM[256]), cmdBuf(BANK0[5]), 
		 -> ATR(BANK1[12]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _InterruptServiceRoutine in COMMON

    _InterruptServiceRoutine->_SerialPortReceiveInterruptService

Critical Paths under _main in BANK0

    _main->_writeFlash
    _writeFlash->_writeOneByte
    _writeOneByte->_waitPollData
    _readFlashChipId->_readFlash
    _softwareIdExit->_setAddressRegisters
    _softwareIdEntry->_setAddressRegisters
    _readFlash->_setAddressRegisters
    _clearAddressRegisters->_setAddressRegisters
    _eraseFlashSector->_waitPollData
    _eraseFlash->_waitPollData
    _waitPollData->_setAddressRegisters

Critical Paths under _InterruptServiceRoutine in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterruptServiceRoutine in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptServiceRoutine in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptServiceRoutine in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterruptServiceRoutine in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterruptServiceRoutine in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterruptServiceRoutine in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                13    13      0   95395
                                             43 BANK0     13    13      0
              _SerialPortReceiveData
                 _SerialPortSendData
                    _SerialPortSetup
              _clearAddressRegisters
                         _eraseFlash
                   _eraseFlashSector
                          _readFlash
                    _readFlashChipId
                         _writeFlash
 ---------------------------------------------------------------------------------
 (1) _writeFlash                                          13     5      8   20442
                                             30 BANK0     13     5      8
              _clearAddressRegisters
                       _writeOneByte
 ---------------------------------------------------------------------------------
 (2) _writeOneByte                                         6     1      5   13682
                                             24 BANK0      6     1      5
                        _sendOneByte
                _setAddressRegisters
                       _waitPollData
 ---------------------------------------------------------------------------------
 (1) _readFlashChipId                                      4     1      3   26660
                                             30 BANK0      4     1      3
                          _readFlash
                    _softwareIdEntry
                     _softwareIdExit
 ---------------------------------------------------------------------------------
 (2) _softwareIdExit                                       0     0      0    6351
                        _sendOneByte
                _setAddressRegisters
 ---------------------------------------------------------------------------------
 (2) _softwareIdEntry                                      0     0      0    6351
                        _sendOneByte
                _setAddressRegisters
 ---------------------------------------------------------------------------------
 (2) _readFlash                                           15     6      9   13716
                                             15 BANK0     15     6      9
              _clearAddressRegisters
                _setAddressRegisters
 ---------------------------------------------------------------------------------
 (2) _clearAddressRegisters                                0     0      0    6320
                _setAddressRegisters
 ---------------------------------------------------------------------------------
 (1) _eraseFlashSector                                     5     1      4   13499
                                             24 BANK0      5     1      4
                        _sendOneByte
                _setAddressRegisters
                       _waitPollData
 ---------------------------------------------------------------------------------
 (1) _eraseFlash                                           1     1      0   13378
                                             24 BANK0      1     1      0
                        _sendOneByte
                _setAddressRegisters
                       _waitPollData
 ---------------------------------------------------------------------------------
 (3) _waitPollData                                         9     4      5    7027
                                             15 BANK0      9     4      5
                _setAddressRegisters
 ---------------------------------------------------------------------------------
 (4) _setAddressRegisters                                 16    10      6    6320
                                              0 BANK0     15     9      6
 ---------------------------------------------------------------------------------
 (3) _sendOneByte                                          1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _SerialPortSetup                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SerialPortSendData                                   5     1      4     782
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (1) _SerialPortReceiveData                                5     1      4     422
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _InterruptServiceRoutine                              3     3      0      24
                                              3 COMMON     3     3      0
  _SerialPortReceiveInterruptService
 _SerialPortTransmitInterruptService
 ---------------------------------------------------------------------------------
 (6) _SerialPortTransmitInterruptService                   0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _SerialPortReceiveInterruptService                    3     3      0      24
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SerialPortReceiveData
   _SerialPortSendData
   _SerialPortSetup
   _clearAddressRegisters
     _setAddressRegisters
   _eraseFlash
     _sendOneByte
     _setAddressRegisters
     _waitPollData
       _setAddressRegisters
   _eraseFlashSector
     _sendOneByte
     _setAddressRegisters
     _waitPollData
   _readFlash
     _clearAddressRegisters
     _setAddressRegisters
   _readFlashChipId
     _readFlash
     _softwareIdEntry
       _sendOneByte
       _setAddressRegisters
     _softwareIdExit
       _sendOneByte
       _setAddressRegisters
   _writeFlash
     _clearAddressRegisters
     _writeOneByte
       _sendOneByte
       _setAddressRegisters
       _waitPollData

 _InterruptServiceRoutine (ROOT)
   _SerialPortReceiveInterruptService
   _SerialPortTransmitInterruptService

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       B       2       78.6%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      63       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     38      4C       6       95.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       C       8       15.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK3                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK4                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK5                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK6                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      63      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun Dec 26 15:44:02 2021

                         _SerialPortSendData 070F                            ??_SerialPortSetup 0020  
                                         l97 005D                                          l114 0160  
                                        l301 0620                                          l310 05C0  
                                        l127 024E                                          l330 07AF  
                                        l226 04FF                                          l242 070E  
                                        l171 077F                                          l324 0527  
                                        l260 03F5                                          l181 0733  
                                        l237 06A7                                          l318 07DF  
                                        l326 055B                                          l175 0739  
                                        l327 0560                                          l176 0729  
                                        l248 048B                                          l185 075F  
                                        l186 0753                                          l179 072E  
                                        l188 0758                                          l276 0322  
                                        l294 0667                                          _ATR 00A0  
                                        u940 050E                                          u941 050D  
                                        u950 051D                                          u951 051C  
                                        u960 0549                                          u961 0546  
                                        u990 055B                                          u974 054B  
                                        u991 055A                                          u985 054E  
                        ?_SerialPortSendData 0020                                          _cmd 0062  
                                        _buf 005C                                          wreg 0009  
                    __end_of_readFlashChipId 070F                                 _BAUD1CONbits 011F  
                                       l1600 0518                                         l2400 04EC  
                                       l2330 07D7                                         l1610 0533  
                                       l1602 051D                                         l2402 04F3  
                                       l2410 03F6                                         l2332 07D9  
                                       l1620 0556                                         l1612 054B  
                                       l1604 051F                                         l2340 0621  
                                       l2324 079F                                         l2404 04F6  
                                       l2412 040A                                         l2334 07DA  
                                       l1622 055D                                         l1614 054C  
                                       l2350 063D                                         l2342 0624  
                                       l2406 04FE                                         l2510 0575  
                                       l2422 0416                                         l2600 074F  
                                       l2336 07DB                                         l2328 07D6  
                                       l1616 054D                                         l2344 0636  
                                       l2360 0661                                         l2504 061F  
                                       l2520 0581                                         l2440 044A  
                                       l2416 040C                                         l2602 0751  
                                       l1618 0554                                         l2362 0666  
                                       l2370 0493                                         l2514 0577  
                                       l2434 0435                                         l2610 066B  
                                       l2604 075C                                         l2356 0652  
                                       l2348 0638                                         l2700 030B  
                                       l2380 04BA                                         l2372 04A5  
                                       l2532 05A0                                         l2508 0561  
                                       l2452 0469                                         l2428 042B  
                                       l2612 0670                                         l2620 069D  
                                       l2550 076A                                         l1590 0500  
                                       l2358 065F                                         l2630 0264  
                                       l2390 04D1                                         l2382 04BE  
                                       l2374 04AC                                         l2366 048C  
                                       l2470 05D5                                         l2526 0596  
                                       l2710 06DC                                         l2446 0454  
                                       l2622 06A3                                         l2614 068A  
                                       l2560 077B                                         l2552 0776  
                                       l1592 0500                                         l2640 0270  
                                       l2392 04D9                                         l2384 04C2  
                                       l2368 048F                                         l2480 05E1  
                                       l2544 05BF                                         l2712 06E4  
                                       l2464 048A                                         l2624 06A6  
                                       l2608 0668                                         l2570 0716  
                                       l2562 077C                                         l2554 0778  
                                       l1594 0509                                         l2810 03F4  
                                       l2706 0321                                         l2634 0266  
                                       l2386 04C6                                         l2378 04AE  
                                       l2474 05D7                                         l2538 05B5  
                                       l2722 0704                                         l2458 0474  
                                       l2618 068C                                         l2580 0725  
                                       l2572 071A                                         l2564 077E  
                                       l2556 0779                                         l2548 0760  
                                       l1596 050E                                         l2804 03DE  
                                       l2732 0323                                         l2652 028F  
                                       l2628 0250                     __end_of_eraseFlashSector 0323  
                                       l2388 04CB                                         l2492 0600  
                                       l2468 05C1                                         l2716 06E6  
                                       l2820 0075                                         l2582 0727  
                                       l2574 071C                                         l2566 070F  
                                       l2558 077A                                         l1598 0510  
                                       l2750 0358                                         l2734 0337  
                                       l2670 02C3                                         l2646 0285  
                                       l2486 05F6                                         l2910 01FE  
                                       l2830 007C                                         l2822 0076  
                                       l2814 0059                                         l2592 0741  
                                       l2584 0736                                         l2576 0720  
                                       l2744 0343                                         l2664 02AE  
                                       l2728 070D                                         l2920 0204  
                                       l2840 0090                                         l2832 007F  
                                       l2824 0077                                         l2816 005B  
                                       l2594 0745                                         l2578 0724  
                                       l2762 0377                                         l2738 0339  
                                       l2682 02E2                                         l2658 02A4  
                                       l2498 0615                                         l2922 020B  
                                       l2850 009E                                         l2842 0092  
                                       l2834 0082                                         l2826 0078  
                                       l2818 0061                                         l2596 0747  
                                       l2588 073A                                         l2780 03A0  
                                       l2756 0362                                         l2676 02CD  
                                       l2940 023C                                         l2908 01EF  
                                       l2860 0108                                         l2852 00AB  
                                       l2844 0094                                         l2836 0083  
                                       l2828 0079                                         l2598 074B  
                                       l2774 0396                                         l2694 0301  
                                       l2942 0242                                         l2870 011E  
                                       l2862 010D                                         l2854 00E1  
                                       l2846 009C                                         l2838 0084  
                                       l2792 03BF                                         l2768 0381  
                                       l2688 02EC                                         l2880 017F  
                                       l2872 0154                                         l2864 0115  
                                       l2856 00E9                                         l2936 0211  
                                       l2848 009C                                         l2786 03B5  
                                       l2882 0197                                         l2874 015C  
                                       l2938 022E                                         l2866 0118  
                                       l2858 00ED                                         l2980 021A  
                                       l2892 01A1                                         l2884 019C  
                                       l2876 0168                                         l2868 011C  
                                       l2798 03D4                                         l2894 01D2  
                                       l2878 0173                                         l2896 01DA  
                                       l2898 01E9                                         u2000 0449  
                                       u2001 0448                                         u2010 0453  
                                       u2011 0452                                         u2100 061E  
                                       u2020 0468                                         u2101 061D  
                                       u2021 0467                                         u2110 0575  
                                       u2030 0473                                         u2111 0574  
                                       u2031 0472                                         u2200 0740  
                                       u2120 0580                                         u2040 0489  
                                       u2201 073F                                         u2121 057F  
                                       u2041 0488                                         u2210 0758  
                                       u2050 05D5                                         u2130 0595  
                                       u2211 0757                                         u2051 05D4  
                                       u2131 0594                                         u2300 02C2  
                                       u2060 05E0                                         u2140 059F  
                                       u2220 068A                                         u2301 02C1  
                                       u2061 05DF                                         u2141 059E  
                                       u2221 0689                                         u2310 02CC  
                                       u2070 05F5                                         u2150 05B4  
                                       u2230 06A3                                         u2311 02CB  
                                       u2071 05F4                                         u2151 05B3  
                                       u2231 06A2                                         u2400 0337  
                                       u2320 02E1                                         u2240 0264  
                                       u2080 05FF                                         u2160 05BE  
                                       u2401 0336                                         u2321 02E0  
                                       u2241 0263                                         u2081 05FE  
                                       u2161 05BD                                         u2170 0715  
                                       u2410 0342                                         u2330 02EB  
                                       u2250 026F                                         u2090 0614  
                                       u2171 0714                                         u2411 0341  
                                       u2331 02EA                                         u2251 026E  
                                       u2091 0613                                         u2180 072E  
                                       u2500 03D3                                         u2420 0357  
                                       u2340 0300                                         u2260 0284  
                                       u2181 072D                                         u2501 03D2  
                                       u2421 0356                                         u2341 02FF  
                                       u2261 0283                                         u2190 0733  
                                       u2510 03DD                                         u2430 0361  
                                       u2350 030A                                         u2270 028E  
                                       u2191 0732                                         u2511 03DC  
                                       u2431 0360                                         u2351 0309  
                                       u2271 028D                                         u2520 03F3  
                                       u2440 0376                                         u2360 0320  
                                       u2280 02A3                                         u2600 0154  
                                       u2521 03F2                                         u2441 0375  
                                       u2361 031F                                         u2281 02A2  
                                       u2601 0153                                         u2450 0380  
                                       u2290 02AD                                         u2370 06E4  
                                       u2610 019C                                         u2530 0061  
                                       u2451 037F                                         u2291 02AC  
                                       u2371 06E3                                         u2611 019B  
                                       u2531 0060                                         u1900 0666  
                                       u2460 0395                                         u2380 0703  
                                       u2620 01B0                                         u2540 00BA  
                                       u1901 0665                                         u2461 0394  
                                       u2381 0702                                         u2470 039F  
                                       u1910 04A5                                         u2390 070C  
                                       u2630 01BC                                         u2550 00C6  
                                       u2471 039E                                         u1911 04A4  
                                       u2391 070B                                         u2480 03B4  
                                       u1920 04CB                                         u2640 01EE  
                                       u2560 00E1                                         u2481 03B3  
                                       u1921 04CA                                         u2641 01ED  
                                       u2625 01AC                                         u2561 00E0  
                                       u2545 00B6                                         u2490 03BE  
                                       u1930 04D1                                         u2650 0203  
                                       u2570 010D                                         u2491 03BD  
                                       u1931 04D0                                         u2651 0202  
                                       u2635 01B8                                         u2571 010C  
                                       u2555 00C2                                         u1940 04EB  
                                       u2660 0210                                         u2580 012D  
                                       u1941 04EA                                         u2661 020F  
                                       u1870 0636                                         u1950 04F3  
                                       u2670 0242                                         u2590 0139  
                                       u1871 0635                                         u1951 04F2  
                                       u2671 0241                                         u1880 0651  
                                       u1960 040A                                         u1881 0650  
                                       u1961 0409                                         u2585 0129  
                                       u1890 065F                                         u1970 0415  
                                       u1891 065E                                         u1971 0414  
                                       u2595 0135                                         u1980 042A  
                                       u1981 0429                                         u1990 0434  
                                       u1991 0433                                         _WPUA 1F39  
                                       _WPUB 1F44                                         _WPUC 1F4F  
                      _SerialPortReceiveData 073A                                         _addr 0058  
                                       _main 0059                                         fsr0h 0005  
                                       fsr1h 0007                                         indf0 0000  
                                       fsr0l 0004                                         indf1 0001  
                                       fsr1l 0006                                         btemp 007E  
                       ??_SerialPortSendData 0024             __size_of_InterruptServiceRoutine 0026  
                                       start 002A    SerialPortReceiveInterruptService@tempData 0072  
                                      ?_main 0070                                        i1l200 06DB  
                                      i1l138 0028                                        i1l192 079E  
                                      i1l195 06B7                               _softwareIdExit 0561  
                                      _PORTA 000C                                        _PORTB 000D  
                                      _TRISA 0012                                        _TRISB 0013  
                                      _TRISC 0014                                        status 0003  
                                      wtemp0 007E                        __size_of_writeOneByte 0096  
                            __initialization 002C                                 __end_of_main 0250  
                       setAddressRegisters@i 002E                       __end_of_softwareIdExit 05C1  
                                     ??_main 004B                                 ?_sendOneByte 0070  
                    setAddressRegisters@addr 0020                             ?_readFlashChipId 003E  
                    setAddressRegisters@mask 002A                                       _ANSELA 1F38  
                                     _ANSELB 1F43                                       _ANSELC 1F4E  
                               _writeOneByte 03F6                       ?_SerialPortReceiveData 0020  
                                     _RC1REG 0119                                       i1l2120 078E  
                                     i1l2130 06AA                                       i1l2122 0792  
                                     i1l2140 06BE                                       i1l2132 06AE  
                                     i1l2124 0798                                       i1l2116 0780  
                                     i1l2142 06C2                                       i1l2134 06B3  
                                     i1l2126 079C                                       i1l2118 078A  
                                     i1l2144 06CF                                       i1l2136 06B4  
                                     i1l2128 06A8                                       _ODCONA 1F3A  
                                     i1l2146 06D3                                       i1l2138 06BB  
                                     _ODCONB 1F45                                       _ODCONC 1F50  
                                     i1l2148 06D9                                       i1l2290 001A  
                                     i1l2292 0025                                       i1l2286 0006  
                                     i1l2288 0017                                       _INLVLA 1F3C  
                                     _INLVLB 1F47                                       _INLVLC 1F52  
                            _softwareIdEntry 05C1                                       u166_20 0798  
                                     u166_21 0797                                       u167_20 06B3  
                                     u167_21 06B2                                       u168_20 06BB  
                                     u168_21 06BA                                       u169_20 06D9  
                                     u185_20 0017                                       u169_21 06D8  
                                     u185_21 0016                                       _SP1BRG 011B  
                                     u186_20 0025                                       u186_21 0024  
                                     _OSCFRQ 0893                                       _TX1REG 011A  
                   SerialPortSendData@length 0022               __size_of_clearAddressRegisters 0011  
              __end_of_clearAddressRegisters 07B0                                       _ackBuf 006A  
                                     _cmdBuf 0063                                       _bufPtr 0078  
                            ?_softwareIdExit 0070                      readFlashChipId@retBytes 003E  
                           waitPollData@addr 002F                             waitPollData@done 0036  
                    __end_of__initialization 0055                              _SerialPortSetup 0760  
                    _InterruptServiceRoutine 0004                           writeFlash@numBytes 0042  
                             __pcstackCOMMON 0070                                 __pidataBANK1 07B0  
                      setAddressRegisters@CE 0025                        setAddressRegisters@OE 0024  
                    __end_of_softwareIdEntry 0621                  __end_of_setAddressRegisters 0561  
                                 __pbssBANK0 0058                            ?_eraseFlashSector 0038  
                         ??_eraseFlashSector 003C                           __size_of_readFlash 0074  
                SerialPortReceiveData@length 0022                                   __pmaintext 0059  
                                 __pintentry 0004                         __size_of_sendOneByte 000C  
                    __end_of_SerialPortSetup 0780                                      _SLRCONA 1F3B  
                                    _SLRCONB 1F46                                      _SLRCONC 1F51  
                                 _eraseFlash 0323                    ??_InterruptServiceRoutine 0073  
                __size_of_SerialPortSendData 002B                                ?_waitPollData 002F  
                                    _dataBuf 20F0                                      __ptext1 0668  
                                    __ptext2 03F6                                      __ptext3 06DC  
                                    __ptext4 0561                                      __ptext5 05C1  
                                    __ptext6 048C                                      __ptext7 079F  
                                    __ptext8 0250                                      __ptext9 0323  
                          __end_of_readFlash 0500                      ??_SerialPortReceiveData 0024  
                           ?_softwareIdEntry 0070                                      clrloop0 07C9  
                       eraseFlashSector@addr 0038                         end_of_initialization 0055  
                                    init_ram 07BC                                      initloop 07BD  
                            sendOneByte@data 0020                          writeFlash@dataBytes 0044  
                           ??_softwareIdExit 002F                                    _OSCENbits 0891  
                             main@successful 0057                               ??_waitPollData 0034  
               SerialPortSendData@dataToSend 0020                                    _TRISCbits 0014  
                                 _successful 007A                             ?_SerialPortSetup 0070  
                                ?_eraseFlash 0070                     __size_of_readFlashChipId 0033  
                       readFlash@numRetBytes 0037                        _clearAddressRegisters 079F  
                                 _writeFlash 0668                   readFlashChipId@numRetBytes 0040  
                           writeFlash@bufPtr 0049                          start_initialization 002C  
                           writeFlash@length 0047                    __size_of_eraseFlashSector 00D3  
                        __size_of_eraseFlash 00D3                                  __pdataBANK1 00A0  
                                __pbssBIGRAM 20F0                                  __pbssCOMMON 0076  
                                  ___latbits 0001                                __pcstackBANK0 0020  
                       __end_of_waitPollData 0668                 __size_of_setAddressRegisters 0061  
                                  _bufLength 0076                       ?_clearAddressRegisters 0070  
                                ?_writeFlash 003E                            ??_readFlashChipId 0041  
                              ??_sendOneByte 0020                            readFlash@retBytes 0035  
                          readFlash@numBytes 0033                                    _readFlash 048C  
             __size_of_SerialPortReceiveData 0026                __end_of_SerialPortReceiveData 0760  
                              ?_writeOneByte 0038                   __end_of_SerialPortSendData 073A  
                                   _LATCbits 001A                                    clear_ram0 07C8  
                                   _PIE1bits 0717                                readFlash@addr 002F  
                                   _PIR1bits 070D                                    _portInUse 0060  
  __end_of_SerialPortReceiveInterruptService 06DC   __size_of_SerialPortReceiveInterruptService 0034  
        ??_SerialPortReceiveInterruptService 0070           ?_SerialPortReceiveInterruptService 0070  
          _SerialPortReceiveInterruptService 06A8                     ?_InterruptServiceRoutine 0070  
                                 ?_readFlash 002F                          __end_of_sendOneByte 07E0  
                               ??_eraseFlash 0038                               ??_writeOneByte 003D  
                        __size_of_writeFlash 0040                     __size_of_softwareIdEntry 0060  
                           writeOneByte@addr 0038                             writeOneByte@data 003C  
                           _eraseFlashSector 0250                           __end_of_eraseFlash 03F6  
                      __size_of_waitPollData 0047                         waitPollData@readData 0037  
                                   __ptext10 0621                                     __ptext11 0500  
                                   __ptext12 07D4                                     __ptext13 0760  
                                   __ptext14 070F                                     __ptext15 073A  
                                   __ptext17 0780                                     __ptext18 06A8  
                       waitPollData@origData 0033                                __size_of_main 01F7  
                   __size_of_SerialPortSetup 0020            SerialPortReceiveData@dataReceived 0020  
                                   _numBytes 005E                                   _RC1STAbits 011D  
                                   int$flags 007E                                   _RC6PPSbits 1F26  
                               _waitPollData 0621              __end_of_InterruptServiceRoutine 002A  
                                _sendOneByte 07D4                                  _OSCSTATbits 0890  
                             writeFlash@addr 003E                      __size_of_softwareIdExit 0060  
                        _setAddressRegisters 0500                                   _INTCONbits 000B  
                                ??_readFlash 0038   __end_of_SerialPortTransmitInterruptService 079F  
__size_of_SerialPortTransmitInterruptService 001F         ??_SerialPortTransmitInterruptService 0070  
        ?_SerialPortTransmitInterruptService 0070           _SerialPortTransmitInterruptService 0780  
                                   intlevel1 0000                              readFlash@bufPtr 003A  
                            readFlash@length 003C                              _readFlashChipId 06DC  
                                _numRetBytes 0068                      ??_clearAddressRegisters 002F  
                       ?_setAddressRegisters 0020                            ??_softwareIdEntry 002F  
                               ??_writeFlash 0046                         __end_of_writeOneByte 048C  
                                 _RX1PPSbits 1ECB                                  _returnBytes 0061  
                                 _TX1STAbits 011E                           __end_of_writeFlash 06A8  
                      ??_setAddressRegisters 0026  
